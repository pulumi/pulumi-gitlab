// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab.Inputs
{

    public sealed class ReleaseCommitArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email address of the commit author.
        /// </summary>
        [Input("authorEmail")]
        public Input<string>? AuthorEmail { get; set; }

        /// <summary>
        /// The name of the commit author.
        /// </summary>
        [Input("authorName")]
        public Input<string>? AuthorName { get; set; }

        /// <summary>
        /// The date and time the commit was authored. In ISO 8601 format (2019-03-15T08:00:00Z).
        /// </summary>
        [Input("authoredDate")]
        public Input<string>? AuthoredDate { get; set; }

        /// <summary>
        /// The date and time the commit was made. In ISO 8601 format (2019-03-15T08:00:00Z).
        /// </summary>
        [Input("committedDate")]
        public Input<string>? CommittedDate { get; set; }

        /// <summary>
        /// The email address of the committer.
        /// </summary>
        [Input("committerEmail")]
        public Input<string>? CommitterEmail { get; set; }

        /// <summary>
        /// The name of the committer.
        /// </summary>
        [Input("committerName")]
        public Input<string>? CommitterName { get; set; }

        /// <summary>
        /// The date and time the commit was created. In ISO 8601 format (2019-03-15T08:00:00Z).
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The git commit full SHA
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The commit message.
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        [Input("parentIds")]
        private InputList<string>? _parentIds;

        /// <summary>
        /// The full SHA of any parent commits.
        /// </summary>
        public InputList<string> ParentIds
        {
            get => _parentIds ?? (_parentIds = new InputList<string>());
            set => _parentIds = value;
        }

        /// <summary>
        /// The git commit short SHA.
        /// </summary>
        [Input("shortId")]
        public Input<string>? ShortId { get; set; }

        /// <summary>
        /// The title of the commit.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public ReleaseCommitArgs()
        {
        }
        public static new ReleaseCommitArgs Empty => new ReleaseCommitArgs();
    }
}
