// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab.Inputs
{

    public sealed class BranchProtectionAllowedToMergeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access levels allowed to merge to protected branch. Valid values are: `no one`, `Developer`, `Maintainer`, `Admin`.
        /// </summary>
        [Input("accessLevel")]
        public Input<string>? AccessLevel { get; set; }

        /// <summary>
        /// Readable description of access level.
        /// </summary>
        [Input("accessLevelDescription")]
        public Input<string>? AccessLevelDescription { get; set; }

        /// <summary>
        /// The ID of a GitLab group allowed to perform the relevant action. Mutually exclusive with `UserId`.
        /// </summary>
        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        /// <summary>
        /// The ID of a GitLab user allowed to perform the relevant action. Mutually exclusive with `GroupId`.
        /// </summary>
        [Input("userId")]
        public Input<int>? UserId { get; set; }

        public BranchProtectionAllowedToMergeArgs()
        {
        }
        public static new BranchProtectionAllowedToMergeArgs Empty => new BranchProtectionAllowedToMergeArgs();
    }
}
