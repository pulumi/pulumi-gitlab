// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab.Inputs
{

    public sealed class ProjectIssueBoardListGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the assignee the list should be scoped to. Requires a GitLab EE license.
        /// </summary>
        [Input("assigneeId")]
        public Input<int>? AssigneeId { get; set; }

        /// <summary>
        /// The ID of the list
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// The ID of the iteration the list should be scoped to. Requires a GitLab EE license.
        /// </summary>
        [Input("iterationId")]
        public Input<int>? IterationId { get; set; }

        /// <summary>
        /// The ID of the label the list should be scoped to. Requires a GitLab EE license.
        /// </summary>
        [Input("labelId")]
        public Input<int>? LabelId { get; set; }

        /// <summary>
        /// The ID of the milestone the list should be scoped to. Requires a GitLab EE license.
        /// </summary>
        [Input("milestoneId")]
        public Input<int>? MilestoneId { get; set; }

        /// <summary>
        /// The position of the list within the board. The position for the list is based on the its position in the `Lists` array.
        /// </summary>
        [Input("position")]
        public Input<int>? Position { get; set; }

        public ProjectIssueBoardListGetArgs()
        {
        }
        public static new ProjectIssueBoardListGetArgs Empty => new ProjectIssueBoardListGetArgs();
    }
}
