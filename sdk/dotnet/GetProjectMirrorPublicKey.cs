// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    public static class GetProjectMirrorPublicKey
    {
        /// <summary>
        /// The `gitlab.getProjectMirrorPublicKey` data source allows the public key of a project mirror to be retrieved by its mirror id and the project it belongs to.
        /// 
        /// **Note**: Supported on GitLab 17.9 or higher.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/remote_mirrors/#get-a-single-projects-remote-mirror-public-key)
        /// </summary>
        public static Task<GetProjectMirrorPublicKeyResult> InvokeAsync(GetProjectMirrorPublicKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectMirrorPublicKeyResult>("gitlab:index/getProjectMirrorPublicKey:getProjectMirrorPublicKey", args ?? new GetProjectMirrorPublicKeyArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.getProjectMirrorPublicKey` data source allows the public key of a project mirror to be retrieved by its mirror id and the project it belongs to.
        /// 
        /// **Note**: Supported on GitLab 17.9 or higher.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/remote_mirrors/#get-a-single-projects-remote-mirror-public-key)
        /// </summary>
        public static Output<GetProjectMirrorPublicKeyResult> Invoke(GetProjectMirrorPublicKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectMirrorPublicKeyResult>("gitlab:index/getProjectMirrorPublicKey:getProjectMirrorPublicKey", args ?? new GetProjectMirrorPublicKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.getProjectMirrorPublicKey` data source allows the public key of a project mirror to be retrieved by its mirror id and the project it belongs to.
        /// 
        /// **Note**: Supported on GitLab 17.9 or higher.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/remote_mirrors/#get-a-single-projects-remote-mirror-public-key)
        /// </summary>
        public static Output<GetProjectMirrorPublicKeyResult> Invoke(GetProjectMirrorPublicKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectMirrorPublicKeyResult>("gitlab:index/getProjectMirrorPublicKey:getProjectMirrorPublicKey", args ?? new GetProjectMirrorPublicKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectMirrorPublicKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the remote mirror.
        /// </summary>
        [Input("mirrorId", required: true)]
        public int MirrorId { get; set; }

        /// <summary>
        /// The integer or path with namespace that uniquely identifies the project.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetProjectMirrorPublicKeyArgs()
        {
        }
        public static new GetProjectMirrorPublicKeyArgs Empty => new GetProjectMirrorPublicKeyArgs();
    }

    public sealed class GetProjectMirrorPublicKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the remote mirror.
        /// </summary>
        [Input("mirrorId", required: true)]
        public Input<int> MirrorId { get; set; } = null!;

        /// <summary>
        /// The integer or path with namespace that uniquely identifies the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetProjectMirrorPublicKeyInvokeArgs()
        {
        }
        public static new GetProjectMirrorPublicKeyInvokeArgs Empty => new GetProjectMirrorPublicKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectMirrorPublicKeyResult
    {
        public readonly string Id;
        /// <summary>
        /// The id of the remote mirror.
        /// </summary>
        public readonly int MirrorId;
        /// <summary>
        /// The integer or path with namespace that uniquely identifies the project.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Public key of the remote mirror.
        /// </summary>
        public readonly string PublicKey;

        [OutputConstructor]
        private GetProjectMirrorPublicKeyResult(
            string id,

            int mirrorId,

            string projectId,

            string publicKey)
        {
            Id = id;
            MirrorId = mirrorId;
            ProjectId = projectId;
            PublicKey = publicKey;
        }
    }
}
