// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    public static class GetApplication
    {
        /// <summary>
        /// The `gitlab.Application` data source retrieves information about a gitlab application.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/applications.html)
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("gitlab:index/getApplication:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.Application` data source retrieves information about a gitlab application.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/applications.html)
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("gitlab:index/getApplication:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
        public static new GetApplicationArgs Empty => new GetApplicationArgs();
    }

    public sealed class GetApplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
        public static new GetApplicationInvokeArgs Empty => new GetApplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        /// <summary>
        /// Internal GitLab application id.
        /// </summary>
        public readonly string ApplicationId;
        /// <summary>
        /// Indicates if the application is kept confidential.
        /// </summary>
        public readonly bool Confidential;
        public readonly string Id;
        /// <summary>
        /// The name of the GitLab application.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The redirect url of the application.
        /// </summary>
        public readonly string RedirectUrl;

        [OutputConstructor]
        private GetApplicationResult(
            string applicationId,

            bool confidential,

            string id,

            string name,

            string redirectUrl)
        {
            ApplicationId = applicationId;
            Confidential = confidential;
            Id = id;
            Name = name;
            RedirectUrl = redirectUrl;
        }
    }
}
