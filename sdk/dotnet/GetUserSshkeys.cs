// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    public static class GetUserSshkeys
    {
        /// <summary>
        /// The `gitlab.getUserSshkeys` data source retrieves a list of SSH keys for a user.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/user_keys/#list-all-ssh-keys-for-a-user)
        /// </summary>
        public static Task<GetUserSshkeysResult> InvokeAsync(GetUserSshkeysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserSshkeysResult>("gitlab:index/getUserSshkeys:getUserSshkeys", args ?? new GetUserSshkeysArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.getUserSshkeys` data source retrieves a list of SSH keys for a user.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/user_keys/#list-all-ssh-keys-for-a-user)
        /// </summary>
        public static Output<GetUserSshkeysResult> Invoke(GetUserSshkeysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserSshkeysResult>("gitlab:index/getUserSshkeys:getUserSshkeys", args ?? new GetUserSshkeysInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.getUserSshkeys` data source retrieves a list of SSH keys for a user.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/user_keys/#list-all-ssh-keys-for-a-user)
        /// </summary>
        public static Output<GetUserSshkeysResult> Invoke(GetUserSshkeysInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserSshkeysResult>("gitlab:index/getUserSshkeys:getUserSshkeys", args ?? new GetUserSshkeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserSshkeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the user to get the SSH keys for.
        /// </summary>
        [Input("userId")]
        public int? UserId { get; set; }

        /// <summary>
        /// Username of the user to get the SSH keys for.
        /// </summary>
        [Input("username")]
        public string? Username { get; set; }

        public GetUserSshkeysArgs()
        {
        }
        public static new GetUserSshkeysArgs Empty => new GetUserSshkeysArgs();
    }

    public sealed class GetUserSshkeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the user to get the SSH keys for.
        /// </summary>
        [Input("userId")]
        public Input<int>? UserId { get; set; }

        /// <summary>
        /// Username of the user to get the SSH keys for.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public GetUserSshkeysInvokeArgs()
        {
        }
        public static new GetUserSshkeysInvokeArgs Empty => new GetUserSshkeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserSshkeysResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The user's keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserSshkeysKeyResult> Keys;
        /// <summary>
        /// ID of the user to get the SSH keys for.
        /// </summary>
        public readonly int UserId;
        /// <summary>
        /// Username of the user to get the SSH keys for.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetUserSshkeysResult(
            string id,

            ImmutableArray<Outputs.GetUserSshkeysKeyResult> keys,

            int userId,

            string username)
        {
            Id = id;
            Keys = keys;
            UserId = userId;
            Username = username;
        }
    }
}
