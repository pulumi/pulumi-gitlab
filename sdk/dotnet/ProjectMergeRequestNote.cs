// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    /// <summary>
    /// The `gitlab.ProjectMergeRequestNote` resource manages the lifecycle of a project merge request note.
    /// 
    /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/notes/#merge-requests)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using GitLab = Pulumi.GitLab;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new GitLab.Project("example", new()
    ///     {
    ///         Name = "example project",
    ///         Description = "Lorem Ipsum",
    ///         VisibilityLevel = "public",
    ///     });
    /// 
    ///     var exampleProjectMergeRequestNote = new GitLab.ProjectMergeRequestNote("example", new()
    ///     {
    ///         Project = example.Id,
    ///         MergeRequestIid = 456,
    ///         Body = "Example note",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Starting in Terraform v1.5.0, you can use an import block to import `gitlab_project_merge_request_note`. For example:
    /// 
    /// terraform
    /// 
    /// import {
    /// 
    ///   to = gitlab_project_merge_request_note.example
    /// 
    ///   id = "see CLI command below for ID"
    /// 
    /// }
    /// 
    /// Importing using the CLI is supported with the following syntax:
    /// 
    /// A GitLab Project Merge Request Note can be imported using a key composed of `&lt;project-id&gt;:&lt;merge-request-iid&gt;:&lt;note-id&gt;`, for example:
    /// 
    /// ```sh
    /// $ pulumi import gitlab:index/projectMergeRequestNote:ProjectMergeRequestNote example "12345:1:3"
    /// ```
    /// </summary>
    [GitLabResourceType("gitlab:index/projectMergeRequestNote:ProjectMergeRequestNote")]
    public partial class ProjectMergeRequestNote : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The body of the merge request note.
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// The creation date of the merge request note. Using this field requires the token used with the provider to either be an Admin, or hava a Project or Group Owner role.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Indicates if the merge request note is internal.
        /// </summary>
        [Output("internal")]
        public Output<bool> Internal { get; private set; } = null!;

        /// <summary>
        /// The diff head SHA of the merge request when the note was created.
        /// </summary>
        [Output("mergeRequestDiffHeadSha")]
        public Output<string?> MergeRequestDiffHeadSha { get; private set; } = null!;

        /// <summary>
        /// The IID of the merge request to add the note to.
        /// </summary>
        [Output("mergeRequestIid")]
        public Output<int> MergeRequestIid { get; private set; } = null!;

        /// <summary>
        /// The ID of the merge request note.
        /// </summary>
        [Output("noteId")]
        public Output<int> NoteId { get; private set; } = null!;

        /// <summary>
        /// The ID or path of the project to add the note to.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Indicates if the merge request note is resolvable.
        /// </summary>
        [Output("resolvable")]
        public Output<bool> Resolvable { get; private set; } = null!;

        /// <summary>
        /// Indicates if the merge request note is a system note.
        /// </summary>
        [Output("system")]
        public Output<bool> System { get; private set; } = null!;

        /// <summary>
        /// The last updated date of the merge request note.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectMergeRequestNote resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectMergeRequestNote(string name, ProjectMergeRequestNoteArgs args, CustomResourceOptions? options = null)
            : base("gitlab:index/projectMergeRequestNote:ProjectMergeRequestNote", name, args ?? new ProjectMergeRequestNoteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectMergeRequestNote(string name, Input<string> id, ProjectMergeRequestNoteState? state = null, CustomResourceOptions? options = null)
            : base("gitlab:index/projectMergeRequestNote:ProjectMergeRequestNote", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectMergeRequestNote resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectMergeRequestNote Get(string name, Input<string> id, ProjectMergeRequestNoteState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectMergeRequestNote(name, id, state, options);
        }
    }

    public sealed class ProjectMergeRequestNoteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The body of the merge request note.
        /// </summary>
        [Input("body", required: true)]
        public Input<string> Body { get; set; } = null!;

        /// <summary>
        /// The creation date of the merge request note. Using this field requires the token used with the provider to either be an Admin, or hava a Project or Group Owner role.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Indicates if the merge request note is internal.
        /// </summary>
        [Input("internal")]
        public Input<bool>? Internal { get; set; }

        /// <summary>
        /// The diff head SHA of the merge request when the note was created.
        /// </summary>
        [Input("mergeRequestDiffHeadSha")]
        public Input<string>? MergeRequestDiffHeadSha { get; set; }

        /// <summary>
        /// The IID of the merge request to add the note to.
        /// </summary>
        [Input("mergeRequestIid", required: true)]
        public Input<int> MergeRequestIid { get; set; } = null!;

        /// <summary>
        /// The ID or path of the project to add the note to.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public ProjectMergeRequestNoteArgs()
        {
        }
        public static new ProjectMergeRequestNoteArgs Empty => new ProjectMergeRequestNoteArgs();
    }

    public sealed class ProjectMergeRequestNoteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The body of the merge request note.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// The creation date of the merge request note. Using this field requires the token used with the provider to either be an Admin, or hava a Project or Group Owner role.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Indicates if the merge request note is internal.
        /// </summary>
        [Input("internal")]
        public Input<bool>? Internal { get; set; }

        /// <summary>
        /// The diff head SHA of the merge request when the note was created.
        /// </summary>
        [Input("mergeRequestDiffHeadSha")]
        public Input<string>? MergeRequestDiffHeadSha { get; set; }

        /// <summary>
        /// The IID of the merge request to add the note to.
        /// </summary>
        [Input("mergeRequestIid")]
        public Input<int>? MergeRequestIid { get; set; }

        /// <summary>
        /// The ID of the merge request note.
        /// </summary>
        [Input("noteId")]
        public Input<int>? NoteId { get; set; }

        /// <summary>
        /// The ID or path of the project to add the note to.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Indicates if the merge request note is resolvable.
        /// </summary>
        [Input("resolvable")]
        public Input<bool>? Resolvable { get; set; }

        /// <summary>
        /// Indicates if the merge request note is a system note.
        /// </summary>
        [Input("system")]
        public Input<bool>? System { get; set; }

        /// <summary>
        /// The last updated date of the merge request note.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public ProjectMergeRequestNoteState()
        {
        }
        public static new ProjectMergeRequestNoteState Empty => new ProjectMergeRequestNoteState();
    }
}
