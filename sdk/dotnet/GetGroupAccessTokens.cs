// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    public static class GetGroupAccessTokens
    {
        /// <summary>
        /// The `gitlab_access_tokens` data source allows to retrieve all group-level access tokens.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/group_access_tokens/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using GitLab = Pulumi.GitLab;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessTokens = GitLab.GetGroupAccessTokens.Invoke(new()
        ///     {
        ///         Group = "my/example/group",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGroupAccessTokensResult> InvokeAsync(GetGroupAccessTokensArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupAccessTokensResult>("gitlab:index/getGroupAccessTokens:getGroupAccessTokens", args ?? new GetGroupAccessTokensArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab_access_tokens` data source allows to retrieve all group-level access tokens.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/group_access_tokens/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using GitLab = Pulumi.GitLab;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessTokens = GitLab.GetGroupAccessTokens.Invoke(new()
        ///     {
        ///         Group = "my/example/group",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGroupAccessTokensResult> Invoke(GetGroupAccessTokensInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupAccessTokensResult>("gitlab:index/getGroupAccessTokens:getGroupAccessTokens", args ?? new GetGroupAccessTokensInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab_access_tokens` data source allows to retrieve all group-level access tokens.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/group_access_tokens/)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using GitLab = Pulumi.GitLab;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accessTokens = GitLab.GetGroupAccessTokens.Invoke(new()
        ///     {
        ///         Group = "my/example/group",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGroupAccessTokensResult> Invoke(GetGroupAccessTokensInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupAccessTokensResult>("gitlab:index/getGroupAccessTokens:getGroupAccessTokens", args ?? new GetGroupAccessTokensInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupAccessTokensArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name or id of the group.
        /// </summary>
        [Input("group", required: true)]
        public string Group { get; set; } = null!;

        public GetGroupAccessTokensArgs()
        {
        }
        public static new GetGroupAccessTokensArgs Empty => new GetGroupAccessTokensArgs();
    }

    public sealed class GetGroupAccessTokensInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name or id of the group.
        /// </summary>
        [Input("group", required: true)]
        public Input<string> Group { get; set; } = null!;

        public GetGroupAccessTokensInvokeArgs()
        {
        }
        public static new GetGroupAccessTokensInvokeArgs Empty => new GetGroupAccessTokensInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupAccessTokensResult
    {
        /// <summary>
        /// The list of access tokens returned by the search
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGroupAccessTokensAccessTokenResult> AccessTokens;
        /// <summary>
        /// The name or id of the group.
        /// </summary>
        public readonly string Group;
        public readonly string Id;

        [OutputConstructor]
        private GetGroupAccessTokensResult(
            ImmutableArray<Outputs.GetGroupAccessTokensAccessTokenResult> accessTokens,

            string group,

            string id)
        {
            AccessTokens = accessTokens;
            Group = group;
            Id = id;
        }
    }
}
