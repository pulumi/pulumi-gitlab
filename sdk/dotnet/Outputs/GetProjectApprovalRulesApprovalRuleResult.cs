// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab.Outputs
{

    [OutputType]
    public sealed class GetProjectApprovalRulesApprovalRuleResult
    {
        /// <summary>
        /// If true, applies the rule to all protected branches, ignoring the protected branches attribute.
        /// </summary>
        public readonly bool AppliesToAllProtectedBranches;
        /// <summary>
        /// The number of approvals required for this rule.
        /// </summary>
        public readonly int ApprovalsRequired;
        /// <summary>
        /// List of all approver IDs that are eligible to approve this rule.
        /// </summary>
        public readonly ImmutableArray<int> EligibleApproverIds;
        /// <summary>
        /// List of group IDs that are eligible to approve this rule.
        /// </summary>
        public readonly ImmutableArray<int> GroupIds;
        /// <summary>
        /// The ID of the approval rule.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The name of the approval rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of protected branch IDs that this rule applies to.
        /// </summary>
        public readonly ImmutableArray<int> ProtectedBranchIds;
        /// <summary>
        /// The report type. Required when the rule type is `ReportApprover`. The supported report types are `LicenseScanning` and `CodeCoverage`.
        /// </summary>
        public readonly string ReportType;
        /// <summary>
        /// The type of the approval rule. Can be `AnyApprover`, `Regular` or `ReportApprover`.
        /// </summary>
        public readonly string RuleType;
        /// <summary>
        /// List of user IDs that are eligible to approve this rule.
        /// </summary>
        public readonly ImmutableArray<int> UserIds;

        [OutputConstructor]
        private GetProjectApprovalRulesApprovalRuleResult(
            bool appliesToAllProtectedBranches,

            int approvalsRequired,

            ImmutableArray<int> eligibleApproverIds,

            ImmutableArray<int> groupIds,

            int id,

            string name,

            ImmutableArray<int> protectedBranchIds,

            string reportType,

            string ruleType,

            ImmutableArray<int> userIds)
        {
            AppliesToAllProtectedBranches = appliesToAllProtectedBranches;
            ApprovalsRequired = approvalsRequired;
            EligibleApproverIds = eligibleApproverIds;
            GroupIds = groupIds;
            Id = id;
            Name = name;
            ProtectedBranchIds = protectedBranchIds;
            ReportType = reportType;
            RuleType = ruleType;
            UserIds = userIds;
        }
    }
}
