// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab.Outputs
{

    [OutputType]
    public sealed class GetPipelineSchedulesPipelineScheduleResult
    {
        /// <summary>
        /// The activation status of pipeline schedule.
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// The datetime of when the schedule was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The cron (e.g. `0 1 * * *`).
        /// </summary>
        public readonly string Cron;
        /// <summary>
        /// The timezone.
        /// </summary>
        public readonly string CronTimezone;
        /// <summary>
        /// The description of the pipeline schedule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The pipeline schedule id.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The datetime of when the schedule will next run.
        /// </summary>
        public readonly string NextRunAt;
        /// <summary>
        /// The details of the pipeline schedule owner.
        /// </summary>
        public readonly Outputs.GetPipelineSchedulesPipelineScheduleOwnerResult Owner;
        /// <summary>
        /// The branch/tag name to be triggered. This will be the full branch reference, for example: `refs/heads/main`, not `Main`.
        /// </summary>
        public readonly string Ref;
        /// <summary>
        /// The datetime of when the schedule was last updated.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetPipelineSchedulesPipelineScheduleResult(
            bool active,

            string createdAt,

            string cron,

            string cronTimezone,

            string description,

            int id,

            string nextRunAt,

            Outputs.GetPipelineSchedulesPipelineScheduleOwnerResult owner,

            string @ref,

            string updatedAt)
        {
            Active = active;
            CreatedAt = createdAt;
            Cron = cron;
            CronTimezone = cronTimezone;
            Description = description;
            Id = id;
            NextRunAt = nextRunAt;
            Owner = owner;
            Ref = @ref;
            UpdatedAt = updatedAt;
        }
    }
}
