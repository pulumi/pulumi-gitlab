// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab.Outputs
{

    [OutputType]
    public sealed class GroupProtectedEnvironmentApprovalRule
    {
        /// <summary>
        /// Levels of access allowed to approve a deployment to this protected environment. Valid values are `developer`, `maintainer`.
        /// </summary>
        public readonly string? AccessLevel;
        /// <summary>
        /// Readable description of level of access.
        /// </summary>
        public readonly string? AccessLevelDescription;
        /// <summary>
        /// The ID of the group allowed to approve a deployment to this protected environment. TThe group must be a sub-group under the given group. This is mutually exclusive with user_id.
        /// </summary>
        public readonly int? GroupId;
        /// <summary>
        /// The unique ID of the Approval Rules object.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// The number of approval required to allow deployment to this protected environment. This is mutually exclusive with user_id.
        /// </summary>
        public readonly int? RequiredApprovals;
        /// <summary>
        /// The ID of the user allowed to approve a deployment to this protected environment. The user must be a member of the group with Maintainer role or higher. This is mutually exclusive with group*id and required*approvals.
        /// </summary>
        public readonly int? UserId;

        [OutputConstructor]
        private GroupProtectedEnvironmentApprovalRule(
            string? accessLevel,

            string? accessLevelDescription,

            int? groupId,

            int? id,

            int? requiredApprovals,

            int? userId)
        {
            AccessLevel = accessLevel;
            AccessLevelDescription = accessLevelDescription;
            GroupId = groupId;
            Id = id;
            RequiredApprovals = requiredApprovals;
            UserId = userId;
        }
    }
}
