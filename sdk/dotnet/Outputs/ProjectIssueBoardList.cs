// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab.Outputs
{

    [OutputType]
    public sealed class ProjectIssueBoardList
    {
        /// <summary>
        /// The ID of the assignee the list should be scoped to. Requires a GitLab EE license.
        /// </summary>
        public readonly int? AssigneeId;
        /// <summary>
        /// The ID of the list
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// The ID of the iteration the list should be scoped to. Requires a GitLab EE license.
        /// </summary>
        public readonly int? IterationId;
        /// <summary>
        /// The ID of the label the list should be scoped to. Requires a GitLab EE license.
        /// </summary>
        public readonly int? LabelId;
        /// <summary>
        /// The ID of the milestone the list should be scoped to. Requires a GitLab EE license.
        /// </summary>
        public readonly int? MilestoneId;
        /// <summary>
        /// The position of the list within the board. The position for the list is based on the its position in the `Lists` array.
        /// </summary>
        public readonly int? Position;

        [OutputConstructor]
        private ProjectIssueBoardList(
            int? assigneeId,

            int? id,

            int? iterationId,

            int? labelId,

            int? milestoneId,

            int? position)
        {
            AssigneeId = assigneeId;
            Id = id;
            IterationId = iterationId;
            LabelId = labelId;
            MilestoneId = milestoneId;
            Position = position;
        }
    }
}
