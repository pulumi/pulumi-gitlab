// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    public static class GetProjectProtectedTag
    {
        /// <summary>
        /// The `gitlab.getProjectProtectedTag` data source allows details of a protected tag to be retrieved by its name and the project it belongs to.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/protected_tags/#get-a-single-protected-tag-or-wildcard-protected-tag)
        /// </summary>
        public static Task<GetProjectProtectedTagResult> InvokeAsync(GetProjectProtectedTagArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectProtectedTagResult>("gitlab:index/getProjectProtectedTag:getProjectProtectedTag", args ?? new GetProjectProtectedTagArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.getProjectProtectedTag` data source allows details of a protected tag to be retrieved by its name and the project it belongs to.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/protected_tags/#get-a-single-protected-tag-or-wildcard-protected-tag)
        /// </summary>
        public static Output<GetProjectProtectedTagResult> Invoke(GetProjectProtectedTagInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectProtectedTagResult>("gitlab:index/getProjectProtectedTag:getProjectProtectedTag", args ?? new GetProjectProtectedTagInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.getProjectProtectedTag` data source allows details of a protected tag to be retrieved by its name and the project it belongs to.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/protected_tags/#get-a-single-protected-tag-or-wildcard-protected-tag)
        /// </summary>
        public static Output<GetProjectProtectedTagResult> Invoke(GetProjectProtectedTagInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectProtectedTagResult>("gitlab:index/getProjectProtectedTag:getProjectProtectedTag", args ?? new GetProjectProtectedTagInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectProtectedTagArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The integer or path with namespace that uniquely identifies the project.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        /// <summary>
        /// The name of the protected tag.
        /// </summary>
        [Input("tag", required: true)]
        public string Tag { get; set; } = null!;

        public GetProjectProtectedTagArgs()
        {
        }
        public static new GetProjectProtectedTagArgs Empty => new GetProjectProtectedTagArgs();
    }

    public sealed class GetProjectProtectedTagInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The integer or path with namespace that uniquely identifies the project.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The name of the protected tag.
        /// </summary>
        [Input("tag", required: true)]
        public Input<string> Tag { get; set; } = null!;

        public GetProjectProtectedTagInvokeArgs()
        {
        }
        public static new GetProjectProtectedTagInvokeArgs Empty => new GetProjectProtectedTagInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectProtectedTagResult
    {
        /// <summary>
        /// Array of access levels/user(s)/group(s) allowed to create protected tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectProtectedTagCreateAccessLevelResult> CreateAccessLevels;
        /// <summary>
        /// The ID of this resource. In the format of `&lt;tag&gt;`.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The integer or path with namespace that uniquely identifies the project.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// The name of the protected tag.
        /// </summary>
        public readonly string Tag;

        [OutputConstructor]
        private GetProjectProtectedTagResult(
            ImmutableArray<Outputs.GetProjectProtectedTagCreateAccessLevelResult> createAccessLevels,

            string id,

            string project,

            string tag)
        {
            CreateAccessLevels = createAccessLevels;
            Id = id;
            Project = project;
            Tag = tag;
        }
    }
}
