// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    public static class GetClusterAgents
    {
        /// <summary>
        /// The `gitlab.getClusterAgents` data source allows details of GitLab Agents for Kubernetes in a project.
        /// 
        /// &gt; Requires at least GitLab 14.10
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/cluster_agents.html)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using GitLab = Pulumi.GitLab;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var agents = GitLab.GetClusterAgents.Invoke(new()
        ///     {
        ///         Project = "12345",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClusterAgentsResult> InvokeAsync(GetClusterAgentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterAgentsResult>("gitlab:index/getClusterAgents:getClusterAgents", args ?? new GetClusterAgentsArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.getClusterAgents` data source allows details of GitLab Agents for Kubernetes in a project.
        /// 
        /// &gt; Requires at least GitLab 14.10
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/cluster_agents.html)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using GitLab = Pulumi.GitLab;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var agents = GitLab.GetClusterAgents.Invoke(new()
        ///     {
        ///         Project = "12345",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClusterAgentsResult> Invoke(GetClusterAgentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterAgentsResult>("gitlab:index/getClusterAgents:getClusterAgents", args ?? new GetClusterAgentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterAgentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID or full path of the project owned by the authenticated user.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetClusterAgentsArgs()
        {
        }
        public static new GetClusterAgentsArgs Empty => new GetClusterAgentsArgs();
    }

    public sealed class GetClusterAgentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID or full path of the project owned by the authenticated user.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetClusterAgentsInvokeArgs()
        {
        }
        public static new GetClusterAgentsInvokeArgs Empty => new GetClusterAgentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterAgentsResult
    {
        /// <summary>
        /// List of the registered agents.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterAgentsClusterAgentResult> ClusterAgents;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID or full path of the project owned by the authenticated user.
        /// </summary>
        public readonly string Project;

        [OutputConstructor]
        private GetClusterAgentsResult(
            ImmutableArray<Outputs.GetClusterAgentsClusterAgentResult> clusterAgents,

            string id,

            string project)
        {
            ClusterAgents = clusterAgents;
            Id = id;
            Project = project;
        }
    }
}
