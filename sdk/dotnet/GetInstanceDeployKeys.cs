// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    public static class GetInstanceDeployKeys
    {
        /// <summary>
        /// The `gitlab.getInstanceDeployKeys` data source allows to retrieve a list of deploy keys for a GitLab instance.
        /// 
        /// &gt; This data source requires administration privileges.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/deploy_keys.html#list-all-deploy-keys)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using GitLab = Pulumi.GitLab;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(GitLab.GetInstanceDeployKeys.InvokeAsync(new GitLab.GetInstanceDeployKeysArgs
        ///         {
        ///             Public = true,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInstanceDeployKeysResult> InvokeAsync(GetInstanceDeployKeysArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstanceDeployKeysResult>("gitlab:index/getInstanceDeployKeys:getInstanceDeployKeys", args ?? new GetInstanceDeployKeysArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.getInstanceDeployKeys` data source allows to retrieve a list of deploy keys for a GitLab instance.
        /// 
        /// &gt; This data source requires administration privileges.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/deploy_keys.html#list-all-deploy-keys)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using GitLab = Pulumi.GitLab;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(GitLab.GetInstanceDeployKeys.InvokeAsync(new GitLab.GetInstanceDeployKeysArgs
        ///         {
        ///             Public = true,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInstanceDeployKeysResult> Invoke(GetInstanceDeployKeysInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInstanceDeployKeysResult>("gitlab:index/getInstanceDeployKeys:getInstanceDeployKeys", args ?? new GetInstanceDeployKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceDeployKeysArgs : Pulumi.InvokeArgs
    {
        [Input("public")]
        public bool? Public { get; set; }

        public GetInstanceDeployKeysArgs()
        {
        }
    }

    public sealed class GetInstanceDeployKeysInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("public")]
        public Input<bool>? Public { get; set; }

        public GetInstanceDeployKeysInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstanceDeployKeysResult
    {
        public readonly ImmutableArray<Outputs.GetInstanceDeployKeysDeployKeyResult> DeployKeys;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? Public;

        [OutputConstructor]
        private GetInstanceDeployKeysResult(
            ImmutableArray<Outputs.GetInstanceDeployKeysDeployKeyResult> deployKeys,

            string id,

            bool? @public)
        {
            DeployKeys = deployKeys;
            Id = id;
            Public = @public;
        }
    }
}
