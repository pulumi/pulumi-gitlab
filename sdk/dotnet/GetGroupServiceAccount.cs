// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    public static class GetGroupServiceAccount
    {
        /// <summary>
        /// The `gitlab.GroupServiceAccount` data source retrieves information about a gitlab service account for a group.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/group_service_accounts.html#list-service-account-users)
        /// </summary>
        public static Task<GetGroupServiceAccountResult> InvokeAsync(GetGroupServiceAccountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupServiceAccountResult>("gitlab:index/getGroupServiceAccount:getGroupServiceAccount", args ?? new GetGroupServiceAccountArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.GroupServiceAccount` data source retrieves information about a gitlab service account for a group.
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/group_service_accounts.html#list-service-account-users)
        /// </summary>
        public static Output<GetGroupServiceAccountResult> Invoke(GetGroupServiceAccountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupServiceAccountResult>("gitlab:index/getGroupServiceAccount:getGroupServiceAccount", args ?? new GetGroupServiceAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupServiceAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID or URL-encoded path of the target group. Must be a top-level group.
        /// </summary>
        [Input("group", required: true)]
        public string Group { get; set; } = null!;

        /// <summary>
        /// The name of the user. If not specified, the default Service account user name is used.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The service account id.
        /// </summary>
        [Input("serviceAccountId", required: true)]
        public string ServiceAccountId { get; set; } = null!;

        /// <summary>
        /// The username of the user. If not specified, it's automatically generated.
        /// </summary>
        [Input("username")]
        public string? Username { get; set; }

        public GetGroupServiceAccountArgs()
        {
        }
        public static new GetGroupServiceAccountArgs Empty => new GetGroupServiceAccountArgs();
    }

    public sealed class GetGroupServiceAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID or URL-encoded path of the target group. Must be a top-level group.
        /// </summary>
        [Input("group", required: true)]
        public Input<string> Group { get; set; } = null!;

        /// <summary>
        /// The name of the user. If not specified, the default Service account user name is used.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The service account id.
        /// </summary>
        [Input("serviceAccountId", required: true)]
        public Input<string> ServiceAccountId { get; set; } = null!;

        /// <summary>
        /// The username of the user. If not specified, it's automatically generated.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public GetGroupServiceAccountInvokeArgs()
        {
        }
        public static new GetGroupServiceAccountInvokeArgs Empty => new GetGroupServiceAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupServiceAccountResult
    {
        /// <summary>
        /// The ID or URL-encoded path of the target group. Must be a top-level group.
        /// </summary>
        public readonly string Group;
        public readonly string Id;
        /// <summary>
        /// The name of the user. If not specified, the default Service account user name is used.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The service account id.
        /// </summary>
        public readonly string ServiceAccountId;
        /// <summary>
        /// The username of the user. If not specified, it's automatically generated.
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private GetGroupServiceAccountResult(
            string group,

            string id,

            string? name,

            string serviceAccountId,

            string? username)
        {
            Group = group;
            Id = id;
            Name = name;
            ServiceAccountId = serviceAccountId;
            Username = username;
        }
    }
}
