// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReleaseLinksArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReleaseLinksArgs Empty = new ReleaseLinksArgs();

    /**
     * URL of the release&#39;s closed issues.
     * 
     */
    @Import(name="closedIssuesUrl")
    private @Nullable Output<String> closedIssuesUrl;

    /**
     * @return URL of the release&#39;s closed issues.
     * 
     */
    public Optional<Output<String>> closedIssuesUrl() {
        return Optional.ofNullable(this.closedIssuesUrl);
    }

    /**
     * URL of the release&#39;s closed merge requests.
     * 
     */
    @Import(name="closedMergeRequestsUrl")
    private @Nullable Output<String> closedMergeRequestsUrl;

    /**
     * @return URL of the release&#39;s closed merge requests.
     * 
     */
    public Optional<Output<String>> closedMergeRequestsUrl() {
        return Optional.ofNullable(this.closedMergeRequestsUrl);
    }

    /**
     * URL of the release&#39;s edit page.
     * 
     */
    @Import(name="editUrl")
    private @Nullable Output<String> editUrl;

    /**
     * @return URL of the release&#39;s edit page.
     * 
     */
    public Optional<Output<String>> editUrl() {
        return Optional.ofNullable(this.editUrl);
    }

    /**
     * URL of the release&#39;s merged merge requests.
     * 
     */
    @Import(name="mergedMergeRequestsUrl")
    private @Nullable Output<String> mergedMergeRequestsUrl;

    /**
     * @return URL of the release&#39;s merged merge requests.
     * 
     */
    public Optional<Output<String>> mergedMergeRequestsUrl() {
        return Optional.ofNullable(this.mergedMergeRequestsUrl);
    }

    /**
     * URL of the release&#39;s open issues.
     * 
     */
    @Import(name="openedIssuesUrl")
    private @Nullable Output<String> openedIssuesUrl;

    /**
     * @return URL of the release&#39;s open issues.
     * 
     */
    public Optional<Output<String>> openedIssuesUrl() {
        return Optional.ofNullable(this.openedIssuesUrl);
    }

    /**
     * URL of the release&#39;s open merge requests.
     * 
     */
    @Import(name="openedMergeRequestsUrl")
    private @Nullable Output<String> openedMergeRequestsUrl;

    /**
     * @return URL of the release&#39;s open merge requests.
     * 
     */
    public Optional<Output<String>> openedMergeRequestsUrl() {
        return Optional.ofNullable(this.openedMergeRequestsUrl);
    }

    /**
     * URL of the release.
     * 
     */
    @Import(name="self")
    private @Nullable Output<String> self;

    /**
     * @return URL of the release.
     * 
     */
    public Optional<Output<String>> self() {
        return Optional.ofNullable(this.self);
    }

    private ReleaseLinksArgs() {}

    private ReleaseLinksArgs(ReleaseLinksArgs $) {
        this.closedIssuesUrl = $.closedIssuesUrl;
        this.closedMergeRequestsUrl = $.closedMergeRequestsUrl;
        this.editUrl = $.editUrl;
        this.mergedMergeRequestsUrl = $.mergedMergeRequestsUrl;
        this.openedIssuesUrl = $.openedIssuesUrl;
        this.openedMergeRequestsUrl = $.openedMergeRequestsUrl;
        this.self = $.self;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReleaseLinksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReleaseLinksArgs $;

        public Builder() {
            $ = new ReleaseLinksArgs();
        }

        public Builder(ReleaseLinksArgs defaults) {
            $ = new ReleaseLinksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param closedIssuesUrl URL of the release&#39;s closed issues.
         * 
         * @return builder
         * 
         */
        public Builder closedIssuesUrl(@Nullable Output<String> closedIssuesUrl) {
            $.closedIssuesUrl = closedIssuesUrl;
            return this;
        }

        /**
         * @param closedIssuesUrl URL of the release&#39;s closed issues.
         * 
         * @return builder
         * 
         */
        public Builder closedIssuesUrl(String closedIssuesUrl) {
            return closedIssuesUrl(Output.of(closedIssuesUrl));
        }

        /**
         * @param closedMergeRequestsUrl URL of the release&#39;s closed merge requests.
         * 
         * @return builder
         * 
         */
        public Builder closedMergeRequestsUrl(@Nullable Output<String> closedMergeRequestsUrl) {
            $.closedMergeRequestsUrl = closedMergeRequestsUrl;
            return this;
        }

        /**
         * @param closedMergeRequestsUrl URL of the release&#39;s closed merge requests.
         * 
         * @return builder
         * 
         */
        public Builder closedMergeRequestsUrl(String closedMergeRequestsUrl) {
            return closedMergeRequestsUrl(Output.of(closedMergeRequestsUrl));
        }

        /**
         * @param editUrl URL of the release&#39;s edit page.
         * 
         * @return builder
         * 
         */
        public Builder editUrl(@Nullable Output<String> editUrl) {
            $.editUrl = editUrl;
            return this;
        }

        /**
         * @param editUrl URL of the release&#39;s edit page.
         * 
         * @return builder
         * 
         */
        public Builder editUrl(String editUrl) {
            return editUrl(Output.of(editUrl));
        }

        /**
         * @param mergedMergeRequestsUrl URL of the release&#39;s merged merge requests.
         * 
         * @return builder
         * 
         */
        public Builder mergedMergeRequestsUrl(@Nullable Output<String> mergedMergeRequestsUrl) {
            $.mergedMergeRequestsUrl = mergedMergeRequestsUrl;
            return this;
        }

        /**
         * @param mergedMergeRequestsUrl URL of the release&#39;s merged merge requests.
         * 
         * @return builder
         * 
         */
        public Builder mergedMergeRequestsUrl(String mergedMergeRequestsUrl) {
            return mergedMergeRequestsUrl(Output.of(mergedMergeRequestsUrl));
        }

        /**
         * @param openedIssuesUrl URL of the release&#39;s open issues.
         * 
         * @return builder
         * 
         */
        public Builder openedIssuesUrl(@Nullable Output<String> openedIssuesUrl) {
            $.openedIssuesUrl = openedIssuesUrl;
            return this;
        }

        /**
         * @param openedIssuesUrl URL of the release&#39;s open issues.
         * 
         * @return builder
         * 
         */
        public Builder openedIssuesUrl(String openedIssuesUrl) {
            return openedIssuesUrl(Output.of(openedIssuesUrl));
        }

        /**
         * @param openedMergeRequestsUrl URL of the release&#39;s open merge requests.
         * 
         * @return builder
         * 
         */
        public Builder openedMergeRequestsUrl(@Nullable Output<String> openedMergeRequestsUrl) {
            $.openedMergeRequestsUrl = openedMergeRequestsUrl;
            return this;
        }

        /**
         * @param openedMergeRequestsUrl URL of the release&#39;s open merge requests.
         * 
         * @return builder
         * 
         */
        public Builder openedMergeRequestsUrl(String openedMergeRequestsUrl) {
            return openedMergeRequestsUrl(Output.of(openedMergeRequestsUrl));
        }

        /**
         * @param self URL of the release.
         * 
         * @return builder
         * 
         */
        public Builder self(@Nullable Output<String> self) {
            $.self = self;
            return this;
        }

        /**
         * @param self URL of the release.
         * 
         * @return builder
         * 
         */
        public Builder self(String self) {
            return self(Output.of(self));
        }

        public ReleaseLinksArgs build() {
            return $;
        }
    }

}
