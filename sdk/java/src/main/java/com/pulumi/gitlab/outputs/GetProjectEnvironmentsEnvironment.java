// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProjectEnvironmentsEnvironment {
    /**
     * @return Timestamp of when the environment is scheduled to stop, RFC3339 format.
     * 
     */
    private String autoStopAt;
    /**
     * @return The auto stop setting for the environment.
     * 
     */
    private String autoStopSetting;
    /**
     * @return The ID of the environments cluster agent or `null` if none is assigned.
     * 
     */
    private Integer clusterAgentId;
    /**
     * @return Timestamp of the environment creation, RFC3339 format.
     * 
     */
    private String createdAt;
    /**
     * @return The description of the environment.
     * 
     */
    private String description;
    /**
     * @return Place to link to for this environment.
     * 
     */
    private String externalUrl;
    /**
     * @return The Flux resource path to associate with this environment.
     * 
     */
    private String fluxResourcePath;
    /**
     * @return The ID of the environment.
     * 
     */
    private Integer id;
    /**
     * @return The Kubernetes namespace to associate with this environment.
     * 
     */
    private String kubernetesNamespace;
    /**
     * @return The name of the environment.
     * 
     */
    private String name;
    /**
     * @return The simplified version of the environment name, suitable for inclusion in DNS, URLs, Kubernetes labels, and so on. The slug is truncated to 24 characters. A random suffix is automatically added to uppercase environment names.
     * 
     */
    private String slug;
    /**
     * @return The state of the environment. Value can be one of `available`, `stopping`, `stopped`. Returns all environments if not set.
     * 
     */
    private String state;
    /**
     * @return The tier of the environment. Value can be one of `production`, `staging`, `testing`, `development`, `other`. Returns all environments if not set.
     * 
     */
    private String tier;
    /**
     * @return Timestamp of the last environment update, RFC3339 format.
     * 
     */
    private String updatedAt;

    private GetProjectEnvironmentsEnvironment() {}
    /**
     * @return Timestamp of when the environment is scheduled to stop, RFC3339 format.
     * 
     */
    public String autoStopAt() {
        return this.autoStopAt;
    }
    /**
     * @return The auto stop setting for the environment.
     * 
     */
    public String autoStopSetting() {
        return this.autoStopSetting;
    }
    /**
     * @return The ID of the environments cluster agent or `null` if none is assigned.
     * 
     */
    public Integer clusterAgentId() {
        return this.clusterAgentId;
    }
    /**
     * @return Timestamp of the environment creation, RFC3339 format.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The description of the environment.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Place to link to for this environment.
     * 
     */
    public String externalUrl() {
        return this.externalUrl;
    }
    /**
     * @return The Flux resource path to associate with this environment.
     * 
     */
    public String fluxResourcePath() {
        return this.fluxResourcePath;
    }
    /**
     * @return The ID of the environment.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return The Kubernetes namespace to associate with this environment.
     * 
     */
    public String kubernetesNamespace() {
        return this.kubernetesNamespace;
    }
    /**
     * @return The name of the environment.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The simplified version of the environment name, suitable for inclusion in DNS, URLs, Kubernetes labels, and so on. The slug is truncated to 24 characters. A random suffix is automatically added to uppercase environment names.
     * 
     */
    public String slug() {
        return this.slug;
    }
    /**
     * @return The state of the environment. Value can be one of `available`, `stopping`, `stopped`. Returns all environments if not set.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The tier of the environment. Value can be one of `production`, `staging`, `testing`, `development`, `other`. Returns all environments if not set.
     * 
     */
    public String tier() {
        return this.tier;
    }
    /**
     * @return Timestamp of the last environment update, RFC3339 format.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectEnvironmentsEnvironment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String autoStopAt;
        private String autoStopSetting;
        private Integer clusterAgentId;
        private String createdAt;
        private String description;
        private String externalUrl;
        private String fluxResourcePath;
        private Integer id;
        private String kubernetesNamespace;
        private String name;
        private String slug;
        private String state;
        private String tier;
        private String updatedAt;
        public Builder() {}
        public Builder(GetProjectEnvironmentsEnvironment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoStopAt = defaults.autoStopAt;
    	      this.autoStopSetting = defaults.autoStopSetting;
    	      this.clusterAgentId = defaults.clusterAgentId;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.externalUrl = defaults.externalUrl;
    	      this.fluxResourcePath = defaults.fluxResourcePath;
    	      this.id = defaults.id;
    	      this.kubernetesNamespace = defaults.kubernetesNamespace;
    	      this.name = defaults.name;
    	      this.slug = defaults.slug;
    	      this.state = defaults.state;
    	      this.tier = defaults.tier;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder autoStopAt(String autoStopAt) {
            if (autoStopAt == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "autoStopAt");
            }
            this.autoStopAt = autoStopAt;
            return this;
        }
        @CustomType.Setter
        public Builder autoStopSetting(String autoStopSetting) {
            if (autoStopSetting == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "autoStopSetting");
            }
            this.autoStopSetting = autoStopSetting;
            return this;
        }
        @CustomType.Setter
        public Builder clusterAgentId(Integer clusterAgentId) {
            if (clusterAgentId == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "clusterAgentId");
            }
            this.clusterAgentId = clusterAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder externalUrl(String externalUrl) {
            if (externalUrl == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "externalUrl");
            }
            this.externalUrl = externalUrl;
            return this;
        }
        @CustomType.Setter
        public Builder fluxResourcePath(String fluxResourcePath) {
            if (fluxResourcePath == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "fluxResourcePath");
            }
            this.fluxResourcePath = fluxResourcePath;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kubernetesNamespace(String kubernetesNamespace) {
            if (kubernetesNamespace == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "kubernetesNamespace");
            }
            this.kubernetesNamespace = kubernetesNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder slug(String slug) {
            if (slug == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "slug");
            }
            this.slug = slug;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tier(String tier) {
            if (tier == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "tier");
            }
            this.tier = tier;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentsEnvironment", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetProjectEnvironmentsEnvironment build() {
            final var _resultValue = new GetProjectEnvironmentsEnvironment();
            _resultValue.autoStopAt = autoStopAt;
            _resultValue.autoStopSetting = autoStopSetting;
            _resultValue.clusterAgentId = clusterAgentId;
            _resultValue.createdAt = createdAt;
            _resultValue.description = description;
            _resultValue.externalUrl = externalUrl;
            _resultValue.fluxResourcePath = fluxResourcePath;
            _resultValue.id = id;
            _resultValue.kubernetesNamespace = kubernetesNamespace;
            _resultValue.name = name;
            _resultValue.slug = slug;
            _resultValue.state = state;
            _resultValue.tier = tier;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
