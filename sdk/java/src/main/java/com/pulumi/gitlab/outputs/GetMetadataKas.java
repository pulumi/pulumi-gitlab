// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMetadataKas {
    /**
     * @return Indicates whether KAS is enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return URL used by the agents to communicate with KAS. It’s null if kas.enabled is false.
     * 
     */
    private String externalUrl;
    /**
     * @return Version of KAS. It’s null if kas.enabled is false.
     * 
     */
    private String version;

    private GetMetadataKas() {}
    /**
     * @return Indicates whether KAS is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return URL used by the agents to communicate with KAS. It’s null if kas.enabled is false.
     * 
     */
    public String externalUrl() {
        return this.externalUrl;
    }
    /**
     * @return Version of KAS. It’s null if kas.enabled is false.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetadataKas defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private String externalUrl;
        private String version;
        public Builder() {}
        public Builder(GetMetadataKas defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.externalUrl = defaults.externalUrl;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetMetadataKas", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder externalUrl(String externalUrl) {
            if (externalUrl == null) {
              throw new MissingRequiredPropertyException("GetMetadataKas", "externalUrl");
            }
            this.externalUrl = externalUrl;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetMetadataKas", "version");
            }
            this.version = version;
            return this;
        }
        public GetMetadataKas build() {
            final var _resultValue = new GetMetadataKas();
            _resultValue.enabled = enabled;
            _resultValue.externalUrl = externalUrl;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
