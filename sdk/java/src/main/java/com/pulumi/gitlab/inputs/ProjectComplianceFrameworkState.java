// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectComplianceFrameworkState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectComplianceFrameworkState Empty = new ProjectComplianceFrameworkState();

    /**
     * Globally unique ID of the compliance framework to assign to the project.
     * 
     */
    @Import(name="complianceFrameworkId")
    private @Nullable Output<String> complianceFrameworkId;

    /**
     * @return Globally unique ID of the compliance framework to assign to the project.
     * 
     */
    public Optional<Output<String>> complianceFrameworkId() {
        return Optional.ofNullable(this.complianceFrameworkId);
    }

    /**
     * The ID or full path of the project to change the compliance framework of.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID or full path of the project to change the compliance framework of.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private ProjectComplianceFrameworkState() {}

    private ProjectComplianceFrameworkState(ProjectComplianceFrameworkState $) {
        this.complianceFrameworkId = $.complianceFrameworkId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectComplianceFrameworkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectComplianceFrameworkState $;

        public Builder() {
            $ = new ProjectComplianceFrameworkState();
        }

        public Builder(ProjectComplianceFrameworkState defaults) {
            $ = new ProjectComplianceFrameworkState(Objects.requireNonNull(defaults));
        }

        /**
         * @param complianceFrameworkId Globally unique ID of the compliance framework to assign to the project.
         * 
         * @return builder
         * 
         */
        public Builder complianceFrameworkId(@Nullable Output<String> complianceFrameworkId) {
            $.complianceFrameworkId = complianceFrameworkId;
            return this;
        }

        /**
         * @param complianceFrameworkId Globally unique ID of the compliance framework to assign to the project.
         * 
         * @return builder
         * 
         */
        public Builder complianceFrameworkId(String complianceFrameworkId) {
            return complianceFrameworkId(Output.of(complianceFrameworkId));
        }

        /**
         * @param project The ID or full path of the project to change the compliance framework of.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID or full path of the project to change the compliance framework of.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ProjectComplianceFrameworkState build() {
            return $;
        }
    }

}
