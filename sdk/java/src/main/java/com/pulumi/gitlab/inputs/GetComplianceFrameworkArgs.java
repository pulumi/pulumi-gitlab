// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetComplianceFrameworkArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetComplianceFrameworkArgs Empty = new GetComplianceFrameworkArgs();

    /**
     * Name for the compliance framework.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name for the compliance framework.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Full path of the namespace to where the compliance framework is.
     * 
     */
    @Import(name="namespacePath", required=true)
    private Output<String> namespacePath;

    /**
     * @return Full path of the namespace to where the compliance framework is.
     * 
     */
    public Output<String> namespacePath() {
        return this.namespacePath;
    }

    private GetComplianceFrameworkArgs() {}

    private GetComplianceFrameworkArgs(GetComplianceFrameworkArgs $) {
        this.name = $.name;
        this.namespacePath = $.namespacePath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetComplianceFrameworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetComplianceFrameworkArgs $;

        public Builder() {
            $ = new GetComplianceFrameworkArgs();
        }

        public Builder(GetComplianceFrameworkArgs defaults) {
            $ = new GetComplianceFrameworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name for the compliance framework.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name for the compliance framework.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespacePath Full path of the namespace to where the compliance framework is.
         * 
         * @return builder
         * 
         */
        public Builder namespacePath(Output<String> namespacePath) {
            $.namespacePath = namespacePath;
            return this;
        }

        /**
         * @param namespacePath Full path of the namespace to where the compliance framework is.
         * 
         * @return builder
         * 
         */
        public Builder namespacePath(String namespacePath) {
            return namespacePath(Output.of(namespacePath));
        }

        public GetComplianceFrameworkArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetComplianceFrameworkArgs", "name");
            }
            if ($.namespacePath == null) {
                throw new MissingRequiredPropertyException("GetComplianceFrameworkArgs", "namespacePath");
            }
            return $;
        }
    }

}
