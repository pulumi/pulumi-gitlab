// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess {
    private String createdAt;
    private String description;
    private Integer id;
    private String name;
    private String nameWithNamespace;
    private String path;
    private String pathWithNamespace;

    private GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess() {}
    public String createdAt() {
        return this.createdAt;
    }
    public String description() {
        return this.description;
    }
    public Integer id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String nameWithNamespace() {
        return this.nameWithNamespace;
    }
    public String path() {
        return this.path;
    }
    public String pathWithNamespace() {
        return this.pathWithNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private String description;
        private Integer id;
        private String name;
        private String nameWithNamespace;
        private String path;
        private String pathWithNamespace;
        public Builder() {}
        public Builder(GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.nameWithNamespace = defaults.nameWithNamespace;
    	      this.path = defaults.path;
    	      this.pathWithNamespace = defaults.pathWithNamespace;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nameWithNamespace(String nameWithNamespace) {
            this.nameWithNamespace = Objects.requireNonNull(nameWithNamespace);
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        @CustomType.Setter
        public Builder pathWithNamespace(String pathWithNamespace) {
            this.pathWithNamespace = Objects.requireNonNull(pathWithNamespace);
            return this;
        }
        public GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess build() {
            final var o = new GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess();
            o.createdAt = createdAt;
            o.description = description;
            o.id = id;
            o.name = name;
            o.nameWithNamespace = nameWithNamespace;
            o.path = path;
            o.pathWithNamespace = pathWithNamespace;
            return o;
        }
    }
}
