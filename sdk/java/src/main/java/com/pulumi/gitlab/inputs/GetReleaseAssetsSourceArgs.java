// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetReleaseAssetsSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetReleaseAssetsSourceArgs Empty = new GetReleaseAssetsSourceArgs();

    /**
     * The format of the source
     * 
     */
    @Import(name="format", required=true)
    private Output<String> format;

    /**
     * @return The format of the source
     * 
     */
    public Output<String> format() {
        return this.format;
    }

    /**
     * The URL of the link
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return The URL of the link
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    private GetReleaseAssetsSourceArgs() {}

    private GetReleaseAssetsSourceArgs(GetReleaseAssetsSourceArgs $) {
        this.format = $.format;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetReleaseAssetsSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetReleaseAssetsSourceArgs $;

        public Builder() {
            $ = new GetReleaseAssetsSourceArgs();
        }

        public Builder(GetReleaseAssetsSourceArgs defaults) {
            $ = new GetReleaseAssetsSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param format The format of the source
         * 
         * @return builder
         * 
         */
        public Builder format(Output<String> format) {
            $.format = format;
            return this;
        }

        /**
         * @param format The format of the source
         * 
         * @return builder
         * 
         */
        public Builder format(String format) {
            return format(Output.of(format));
        }

        /**
         * @param url The URL of the link
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The URL of the link
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public GetReleaseAssetsSourceArgs build() {
            if ($.format == null) {
                throw new MissingRequiredPropertyException("GetReleaseAssetsSourceArgs", "format");
            }
            if ($.url == null) {
                throw new MissingRequiredPropertyException("GetReleaseAssetsSourceArgs", "url");
            }
            return $;
        }
    }

}
