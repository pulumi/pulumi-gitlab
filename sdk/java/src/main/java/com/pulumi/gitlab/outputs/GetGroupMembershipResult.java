// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gitlab.outputs.GetGroupMembershipMember;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGroupMembershipResult {
    /**
     * @return Only return members with the desired access level. Acceptable values are: `guest`, `reporter`, `developer`, `maintainer`, `owner`.
     * 
     */
    private String accessLevel;
    /**
     * @return The full path of the group.
     * 
     */
    private String fullPath;
    /**
     * @return The ID of the group.
     * 
     */
    private Integer groupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Return all project members including members through ancestor groups.
     * 
     */
    private @Nullable Boolean inherited;
    /**
     * @return The list of group members.
     * 
     */
    private List<GetGroupMembershipMember> members;

    private GetGroupMembershipResult() {}
    /**
     * @return Only return members with the desired access level. Acceptable values are: `guest`, `reporter`, `developer`, `maintainer`, `owner`.
     * 
     */
    public String accessLevel() {
        return this.accessLevel;
    }
    /**
     * @return The full path of the group.
     * 
     */
    public String fullPath() {
        return this.fullPath;
    }
    /**
     * @return The ID of the group.
     * 
     */
    public Integer groupId() {
        return this.groupId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Return all project members including members through ancestor groups.
     * 
     */
    public Optional<Boolean> inherited() {
        return Optional.ofNullable(this.inherited);
    }
    /**
     * @return The list of group members.
     * 
     */
    public List<GetGroupMembershipMember> members() {
        return this.members;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupMembershipResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessLevel;
        private String fullPath;
        private Integer groupId;
        private String id;
        private @Nullable Boolean inherited;
        private List<GetGroupMembershipMember> members;
        public Builder() {}
        public Builder(GetGroupMembershipResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.fullPath = defaults.fullPath;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.inherited = defaults.inherited;
    	      this.members = defaults.members;
        }

        @CustomType.Setter
        public Builder accessLevel(String accessLevel) {
            this.accessLevel = Objects.requireNonNull(accessLevel);
            return this;
        }
        @CustomType.Setter
        public Builder fullPath(String fullPath) {
            this.fullPath = Objects.requireNonNull(fullPath);
            return this;
        }
        @CustomType.Setter
        public Builder groupId(Integer groupId) {
            this.groupId = Objects.requireNonNull(groupId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inherited(@Nullable Boolean inherited) {
            this.inherited = inherited;
            return this;
        }
        @CustomType.Setter
        public Builder members(List<GetGroupMembershipMember> members) {
            this.members = Objects.requireNonNull(members);
            return this;
        }
        public Builder members(GetGroupMembershipMember... members) {
            return members(List.of(members));
        }
        public GetGroupMembershipResult build() {
            final var o = new GetGroupMembershipResult();
            o.accessLevel = accessLevel;
            o.fullPath = fullPath;
            o.groupId = groupId;
            o.id = id;
            o.inherited = inherited;
            o.members = members;
            return o;
        }
    }
}
