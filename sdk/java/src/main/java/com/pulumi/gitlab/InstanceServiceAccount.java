// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gitlab.InstanceServiceAccountArgs;
import com.pulumi.gitlab.Utilities;
import com.pulumi.gitlab.inputs.InstanceServiceAccountState;
import com.pulumi.gitlab.outputs.InstanceServiceAccountTimeouts;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The `gitlab.InstanceServiceAccount` resource allows creating a GitLab instance service account.
 * 
 * &gt; In order for a user to create a user account, they must have admin privileges at the instance level. This makes this feature unavailable on `gitlab.com`
 * 
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/user_service_accounts/)
 * 
 * ## Import
 * 
 * Starting in Terraform v1.5.0 you can use an import block to import `gitlab_instance_service_account`. For example:
 * 
 * terraform
 * 
 * import {
 * 
 *   to = gitlab_instance_service_account.example
 * 
 *   id = &#34;see CLI command below for ID&#34;
 * 
 * }
 * 
 * Import using the CLI is supported using the following syntax:
 * 
 * ```sh
 * $ pulumi import gitlab:index/instanceServiceAccount:InstanceServiceAccount You can import a group service account using `&lt;resource&gt; &lt;id&gt;`. The
 * ```
 * 
 * `id` is the id of the service account
 * 
 * ```sh
 * $ pulumi import gitlab:index/instanceServiceAccount:InstanceServiceAccount example example
 * ```
 * 
 */
@ResourceType(type="gitlab:index/instanceServiceAccount:InstanceServiceAccount")
public class InstanceServiceAccount extends com.pulumi.resources.CustomResource {
    /**
     * The name of the user. If not specified, the default Service account user name is used.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the user. If not specified, the default Service account user name is used.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The service account id.
     * 
     */
    @Export(name="serviceAccountId", refs={String.class}, tree="[0]")
    private Output<String> serviceAccountId;

    /**
     * @return The service account id.
     * 
     */
    public Output<String> serviceAccountId() {
        return this.serviceAccountId;
    }
    @Export(name="timeouts", refs={InstanceServiceAccountTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ InstanceServiceAccountTimeouts> timeouts;

    public Output<Optional<InstanceServiceAccountTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * The username of the user. If not specified, it’s automatically generated.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> username;

    /**
     * @return The username of the user. If not specified, it’s automatically generated.
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceServiceAccount(java.lang.String name) {
        this(name, InstanceServiceAccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceServiceAccount(java.lang.String name, @Nullable InstanceServiceAccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceServiceAccount(java.lang.String name, @Nullable InstanceServiceAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/instanceServiceAccount:InstanceServiceAccount", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InstanceServiceAccount(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceServiceAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/instanceServiceAccount:InstanceServiceAccount", name, state, makeResourceOptions(options, id), false);
    }

    private static InstanceServiceAccountArgs makeArgs(@Nullable InstanceServiceAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InstanceServiceAccountArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceServiceAccount get(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceServiceAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstanceServiceAccount(name, id, state, options);
    }
}
