// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAgentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAgentArgs Empty = new ClusterAgentArgs();

    /**
     * The Name of the agent.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name of the agent.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ID or full path of the project maintained by the authenticated user.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return ID or full path of the project maintained by the authenticated user.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private ClusterAgentArgs() {}

    private ClusterAgentArgs(ClusterAgentArgs $) {
        this.name = $.name;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAgentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAgentArgs $;

        public Builder() {
            $ = new ClusterAgentArgs();
        }

        public Builder(ClusterAgentArgs defaults) {
            $ = new ClusterAgentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The Name of the agent.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name of the agent.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project ID or full path of the project maintained by the authenticated user.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project ID or full path of the project maintained by the authenticated user.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ClusterAgentArgs build() {
            if ($.project == null) {
                throw new MissingRequiredPropertyException("ClusterAgentArgs", "project");
            }
            return $;
        }
    }

}
