// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectTagReleaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectTagReleaseArgs Empty = new ProjectTagReleaseArgs();

    /**
     * The description of release.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of release.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the tag.
     * 
     */
    @Import(name="tagName")
    private @Nullable Output<String> tagName;

    /**
     * @return The name of the tag.
     * 
     */
    public Optional<Output<String>> tagName() {
        return Optional.ofNullable(this.tagName);
    }

    private ProjectTagReleaseArgs() {}

    private ProjectTagReleaseArgs(ProjectTagReleaseArgs $) {
        this.description = $.description;
        this.tagName = $.tagName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectTagReleaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectTagReleaseArgs $;

        public Builder() {
            $ = new ProjectTagReleaseArgs();
        }

        public Builder(ProjectTagReleaseArgs defaults) {
            $ = new ProjectTagReleaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of release.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of release.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param tagName The name of the tag.
         * 
         * @return builder
         * 
         */
        public Builder tagName(@Nullable Output<String> tagName) {
            $.tagName = tagName;
            return this;
        }

        /**
         * @param tagName The name of the tag.
         * 
         * @return builder
         * 
         */
        public Builder tagName(String tagName) {
            return tagName(Output.of(tagName));
        }

        public ProjectTagReleaseArgs build() {
            return $;
        }
    }

}
