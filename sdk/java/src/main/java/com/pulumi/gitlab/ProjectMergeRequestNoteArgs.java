// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectMergeRequestNoteArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectMergeRequestNoteArgs Empty = new ProjectMergeRequestNoteArgs();

    /**
     * The body of the merge request note.
     * 
     */
    @Import(name="body", required=true)
    private Output<String> body;

    /**
     * @return The body of the merge request note.
     * 
     */
    public Output<String> body() {
        return this.body;
    }

    /**
     * The creation date of the merge request note. Using this field requires the token used with the provider to either be an Admin, or hava a Project or Group Owner role.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The creation date of the merge request note. Using this field requires the token used with the provider to either be an Admin, or hava a Project or Group Owner role.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Indicates if the merge request note is internal.
     * 
     */
    @Import(name="internal")
    private @Nullable Output<Boolean> internal;

    /**
     * @return Indicates if the merge request note is internal.
     * 
     */
    public Optional<Output<Boolean>> internal() {
        return Optional.ofNullable(this.internal);
    }

    /**
     * The diff head SHA of the merge request when the note was created.
     * 
     */
    @Import(name="mergeRequestDiffHeadSha")
    private @Nullable Output<String> mergeRequestDiffHeadSha;

    /**
     * @return The diff head SHA of the merge request when the note was created.
     * 
     */
    public Optional<Output<String>> mergeRequestDiffHeadSha() {
        return Optional.ofNullable(this.mergeRequestDiffHeadSha);
    }

    /**
     * The IID of the merge request to add the note to.
     * 
     */
    @Import(name="mergeRequestIid", required=true)
    private Output<Integer> mergeRequestIid;

    /**
     * @return The IID of the merge request to add the note to.
     * 
     */
    public Output<Integer> mergeRequestIid() {
        return this.mergeRequestIid;
    }

    /**
     * The ID or path of the project to add the note to.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The ID or path of the project to add the note to.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private ProjectMergeRequestNoteArgs() {}

    private ProjectMergeRequestNoteArgs(ProjectMergeRequestNoteArgs $) {
        this.body = $.body;
        this.createdAt = $.createdAt;
        this.internal = $.internal;
        this.mergeRequestDiffHeadSha = $.mergeRequestDiffHeadSha;
        this.mergeRequestIid = $.mergeRequestIid;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectMergeRequestNoteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectMergeRequestNoteArgs $;

        public Builder() {
            $ = new ProjectMergeRequestNoteArgs();
        }

        public Builder(ProjectMergeRequestNoteArgs defaults) {
            $ = new ProjectMergeRequestNoteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param body The body of the merge request note.
         * 
         * @return builder
         * 
         */
        public Builder body(Output<String> body) {
            $.body = body;
            return this;
        }

        /**
         * @param body The body of the merge request note.
         * 
         * @return builder
         * 
         */
        public Builder body(String body) {
            return body(Output.of(body));
        }

        /**
         * @param createdAt The creation date of the merge request note. Using this field requires the token used with the provider to either be an Admin, or hava a Project or Group Owner role.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The creation date of the merge request note. Using this field requires the token used with the provider to either be an Admin, or hava a Project or Group Owner role.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param internal Indicates if the merge request note is internal.
         * 
         * @return builder
         * 
         */
        public Builder internal(@Nullable Output<Boolean> internal) {
            $.internal = internal;
            return this;
        }

        /**
         * @param internal Indicates if the merge request note is internal.
         * 
         * @return builder
         * 
         */
        public Builder internal(Boolean internal) {
            return internal(Output.of(internal));
        }

        /**
         * @param mergeRequestDiffHeadSha The diff head SHA of the merge request when the note was created.
         * 
         * @return builder
         * 
         */
        public Builder mergeRequestDiffHeadSha(@Nullable Output<String> mergeRequestDiffHeadSha) {
            $.mergeRequestDiffHeadSha = mergeRequestDiffHeadSha;
            return this;
        }

        /**
         * @param mergeRequestDiffHeadSha The diff head SHA of the merge request when the note was created.
         * 
         * @return builder
         * 
         */
        public Builder mergeRequestDiffHeadSha(String mergeRequestDiffHeadSha) {
            return mergeRequestDiffHeadSha(Output.of(mergeRequestDiffHeadSha));
        }

        /**
         * @param mergeRequestIid The IID of the merge request to add the note to.
         * 
         * @return builder
         * 
         */
        public Builder mergeRequestIid(Output<Integer> mergeRequestIid) {
            $.mergeRequestIid = mergeRequestIid;
            return this;
        }

        /**
         * @param mergeRequestIid The IID of the merge request to add the note to.
         * 
         * @return builder
         * 
         */
        public Builder mergeRequestIid(Integer mergeRequestIid) {
            return mergeRequestIid(Output.of(mergeRequestIid));
        }

        /**
         * @param project The ID or path of the project to add the note to.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID or path of the project to add the note to.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ProjectMergeRequestNoteArgs build() {
            if ($.body == null) {
                throw new MissingRequiredPropertyException("ProjectMergeRequestNoteArgs", "body");
            }
            if ($.mergeRequestIid == null) {
                throw new MissingRequiredPropertyException("ProjectMergeRequestNoteArgs", "mergeRequestIid");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("ProjectMergeRequestNoteArgs", "project");
            }
            return $;
        }
    }

}
