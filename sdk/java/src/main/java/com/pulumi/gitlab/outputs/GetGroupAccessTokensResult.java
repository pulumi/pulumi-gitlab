// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.outputs.GetGroupAccessTokensAccessToken;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGroupAccessTokensResult {
    /**
     * @return The list of access tokens returned by the search
     * 
     */
    private List<GetGroupAccessTokensAccessToken> accessTokens;
    /**
     * @return The name or id of the group.
     * 
     */
    private String group;
    private String id;

    private GetGroupAccessTokensResult() {}
    /**
     * @return The list of access tokens returned by the search
     * 
     */
    public List<GetGroupAccessTokensAccessToken> accessTokens() {
        return this.accessTokens;
    }
    /**
     * @return The name or id of the group.
     * 
     */
    public String group() {
        return this.group;
    }
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupAccessTokensResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetGroupAccessTokensAccessToken> accessTokens;
        private String group;
        private String id;
        public Builder() {}
        public Builder(GetGroupAccessTokensResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessTokens = defaults.accessTokens;
    	      this.group = defaults.group;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder accessTokens(List<GetGroupAccessTokensAccessToken> accessTokens) {
            if (accessTokens == null) {
              throw new MissingRequiredPropertyException("GetGroupAccessTokensResult", "accessTokens");
            }
            this.accessTokens = accessTokens;
            return this;
        }
        public Builder accessTokens(GetGroupAccessTokensAccessToken... accessTokens) {
            return accessTokens(List.of(accessTokens));
        }
        @CustomType.Setter
        public Builder group(String group) {
            if (group == null) {
              throw new MissingRequiredPropertyException("GetGroupAccessTokensResult", "group");
            }
            this.group = group;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupAccessTokensResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetGroupAccessTokensResult build() {
            final var _resultValue = new GetGroupAccessTokensResult();
            _resultValue.accessTokens = accessTokens;
            _resultValue.group = group;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
