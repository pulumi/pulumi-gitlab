// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetClusterAgentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterAgentArgs Empty = new GetClusterAgentArgs();

    /**
     * The ID of the agent.
     * 
     */
    @Import(name="agentId", required=true)
    private Output<Integer> agentId;

    /**
     * @return The ID of the agent.
     * 
     */
    public Output<Integer> agentId() {
        return this.agentId;
    }

    /**
     * ID or full path of the project maintained by the authenticated user.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return ID or full path of the project maintained by the authenticated user.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private GetClusterAgentArgs() {}

    private GetClusterAgentArgs(GetClusterAgentArgs $) {
        this.agentId = $.agentId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterAgentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterAgentArgs $;

        public Builder() {
            $ = new GetClusterAgentArgs();
        }

        public Builder(GetClusterAgentArgs defaults) {
            $ = new GetClusterAgentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId The ID of the agent.
         * 
         * @return builder
         * 
         */
        public Builder agentId(Output<Integer> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId The ID of the agent.
         * 
         * @return builder
         * 
         */
        public Builder agentId(Integer agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param project ID or full path of the project maintained by the authenticated user.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project ID or full path of the project maintained by the authenticated user.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetClusterAgentArgs build() {
            if ($.agentId == null) {
                throw new MissingRequiredPropertyException("GetClusterAgentArgs", "agentId");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("GetClusterAgentArgs", "project");
            }
            return $;
        }
    }

}
