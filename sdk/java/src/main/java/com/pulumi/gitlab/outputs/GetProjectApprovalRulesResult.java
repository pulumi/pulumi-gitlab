// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.outputs.GetProjectApprovalRulesApprovalRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetProjectApprovalRulesResult {
    /**
     * @return A list of project approval rules, as defined below.
     * 
     */
    private @Nullable List<GetProjectApprovalRulesApprovalRule> approvalRules;
    private String id;
    /**
     * @return The ID or path with namespace that identifies the project.
     * 
     */
    private String project;

    private GetProjectApprovalRulesResult() {}
    /**
     * @return A list of project approval rules, as defined below.
     * 
     */
    public List<GetProjectApprovalRulesApprovalRule> approvalRules() {
        return this.approvalRules == null ? List.of() : this.approvalRules;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The ID or path with namespace that identifies the project.
     * 
     */
    public String project() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectApprovalRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetProjectApprovalRulesApprovalRule> approvalRules;
        private String id;
        private String project;
        public Builder() {}
        public Builder(GetProjectApprovalRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approvalRules = defaults.approvalRules;
    	      this.id = defaults.id;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder approvalRules(@Nullable List<GetProjectApprovalRulesApprovalRule> approvalRules) {

            this.approvalRules = approvalRules;
            return this;
        }
        public Builder approvalRules(GetProjectApprovalRulesApprovalRule... approvalRules) {
            return approvalRules(List.of(approvalRules));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProjectApprovalRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetProjectApprovalRulesResult", "project");
            }
            this.project = project;
            return this;
        }
        public GetProjectApprovalRulesResult build() {
            final var _resultValue = new GetProjectApprovalRulesResult();
            _resultValue.approvalRules = approvalRules;
            _resultValue.id = id;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
