// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupSecurityPolicyAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final GroupSecurityPolicyAttachmentState Empty = new GroupSecurityPolicyAttachmentState();

    /**
     * The ID or Full Path of the group which will have the security policy project assigned to it.
     * 
     */
    @Import(name="group")
    private @Nullable Output<String> group;

    /**
     * @return The ID or Full Path of the group which will have the security policy project assigned to it.
     * 
     */
    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * The GraphQL ID of the group to which the security policty project will be attached.
     * 
     */
    @Import(name="groupGraphqlId")
    private @Nullable Output<String> groupGraphqlId;

    /**
     * @return The GraphQL ID of the group to which the security policty project will be attached.
     * 
     */
    public Optional<Output<String>> groupGraphqlId() {
        return Optional.ofNullable(this.groupGraphqlId);
    }

    /**
     * The ID or Full Path of the security policy project.
     * 
     */
    @Import(name="policyProject")
    private @Nullable Output<String> policyProject;

    /**
     * @return The ID or Full Path of the security policy project.
     * 
     */
    public Optional<Output<String>> policyProject() {
        return Optional.ofNullable(this.policyProject);
    }

    /**
     * The GraphQL ID of the security policy project.
     * 
     */
    @Import(name="policyProjectGraphqlId")
    private @Nullable Output<String> policyProjectGraphqlId;

    /**
     * @return The GraphQL ID of the security policy project.
     * 
     */
    public Optional<Output<String>> policyProjectGraphqlId() {
        return Optional.ofNullable(this.policyProjectGraphqlId);
    }

    private GroupSecurityPolicyAttachmentState() {}

    private GroupSecurityPolicyAttachmentState(GroupSecurityPolicyAttachmentState $) {
        this.group = $.group;
        this.groupGraphqlId = $.groupGraphqlId;
        this.policyProject = $.policyProject;
        this.policyProjectGraphqlId = $.policyProjectGraphqlId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupSecurityPolicyAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupSecurityPolicyAttachmentState $;

        public Builder() {
            $ = new GroupSecurityPolicyAttachmentState();
        }

        public Builder(GroupSecurityPolicyAttachmentState defaults) {
            $ = new GroupSecurityPolicyAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param group The ID or Full Path of the group which will have the security policy project assigned to it.
         * 
         * @return builder
         * 
         */
        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group The ID or Full Path of the group which will have the security policy project assigned to it.
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param groupGraphqlId The GraphQL ID of the group to which the security policty project will be attached.
         * 
         * @return builder
         * 
         */
        public Builder groupGraphqlId(@Nullable Output<String> groupGraphqlId) {
            $.groupGraphqlId = groupGraphqlId;
            return this;
        }

        /**
         * @param groupGraphqlId The GraphQL ID of the group to which the security policty project will be attached.
         * 
         * @return builder
         * 
         */
        public Builder groupGraphqlId(String groupGraphqlId) {
            return groupGraphqlId(Output.of(groupGraphqlId));
        }

        /**
         * @param policyProject The ID or Full Path of the security policy project.
         * 
         * @return builder
         * 
         */
        public Builder policyProject(@Nullable Output<String> policyProject) {
            $.policyProject = policyProject;
            return this;
        }

        /**
         * @param policyProject The ID or Full Path of the security policy project.
         * 
         * @return builder
         * 
         */
        public Builder policyProject(String policyProject) {
            return policyProject(Output.of(policyProject));
        }

        /**
         * @param policyProjectGraphqlId The GraphQL ID of the security policy project.
         * 
         * @return builder
         * 
         */
        public Builder policyProjectGraphqlId(@Nullable Output<String> policyProjectGraphqlId) {
            $.policyProjectGraphqlId = policyProjectGraphqlId;
            return this;
        }

        /**
         * @param policyProjectGraphqlId The GraphQL ID of the security policy project.
         * 
         * @return builder
         * 
         */
        public Builder policyProjectGraphqlId(String policyProjectGraphqlId) {
            return policyProjectGraphqlId(Output.of(policyProjectGraphqlId));
        }

        public GroupSecurityPolicyAttachmentState build() {
            return $;
        }
    }

}
