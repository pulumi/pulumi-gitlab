// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGroupBillableMemberMembershipsMembership {
    /**
     * @return Access-level of the member. For details see: https://docs.gitlab.com/ee/api/access_requests.html#valid-access-levels
     * 
     */
    private String accessLevel;
    /**
     * @return Datetime when the membership was first added.
     * 
     */
    private String createdAt;
    /**
     * @return Date when the membership will end.
     * 
     */
    private String expiresAt;
    /**
     * @return The id of the membership.
     * 
     */
    private Integer id;
    /**
     * @return Breadcrumb-style, full display-name of the group or project.
     * 
     */
    private String sourceFullName;
    /**
     * @return The id of the group or project, the user is a (direct) member of.
     * 
     */
    private Integer sourceId;
    /**
     * @return URL to the members-page of the group or project.
     * 
     */
    private String sourceMembersUrl;

    private GetGroupBillableMemberMembershipsMembership() {}
    /**
     * @return Access-level of the member. For details see: https://docs.gitlab.com/ee/api/access_requests.html#valid-access-levels
     * 
     */
    public String accessLevel() {
        return this.accessLevel;
    }
    /**
     * @return Datetime when the membership was first added.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Date when the membership will end.
     * 
     */
    public String expiresAt() {
        return this.expiresAt;
    }
    /**
     * @return The id of the membership.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return Breadcrumb-style, full display-name of the group or project.
     * 
     */
    public String sourceFullName() {
        return this.sourceFullName;
    }
    /**
     * @return The id of the group or project, the user is a (direct) member of.
     * 
     */
    public Integer sourceId() {
        return this.sourceId;
    }
    /**
     * @return URL to the members-page of the group or project.
     * 
     */
    public String sourceMembersUrl() {
        return this.sourceMembersUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupBillableMemberMembershipsMembership defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessLevel;
        private String createdAt;
        private String expiresAt;
        private Integer id;
        private String sourceFullName;
        private Integer sourceId;
        private String sourceMembersUrl;
        public Builder() {}
        public Builder(GetGroupBillableMemberMembershipsMembership defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.createdAt = defaults.createdAt;
    	      this.expiresAt = defaults.expiresAt;
    	      this.id = defaults.id;
    	      this.sourceFullName = defaults.sourceFullName;
    	      this.sourceId = defaults.sourceId;
    	      this.sourceMembersUrl = defaults.sourceMembersUrl;
        }

        @CustomType.Setter
        public Builder accessLevel(String accessLevel) {
            if (accessLevel == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsMembership", "accessLevel");
            }
            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsMembership", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder expiresAt(String expiresAt) {
            if (expiresAt == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsMembership", "expiresAt");
            }
            this.expiresAt = expiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsMembership", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder sourceFullName(String sourceFullName) {
            if (sourceFullName == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsMembership", "sourceFullName");
            }
            this.sourceFullName = sourceFullName;
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(Integer sourceId) {
            if (sourceId == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsMembership", "sourceId");
            }
            this.sourceId = sourceId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceMembersUrl(String sourceMembersUrl) {
            if (sourceMembersUrl == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsMembership", "sourceMembersUrl");
            }
            this.sourceMembersUrl = sourceMembersUrl;
            return this;
        }
        public GetGroupBillableMemberMembershipsMembership build() {
            final var _resultValue = new GetGroupBillableMemberMembershipsMembership();
            _resultValue.accessLevel = accessLevel;
            _resultValue.createdAt = createdAt;
            _resultValue.expiresAt = expiresAt;
            _resultValue.id = id;
            _resultValue.sourceFullName = sourceFullName;
            _resultValue.sourceId = sourceId;
            _resultValue.sourceMembersUrl = sourceMembersUrl;
            return _resultValue;
        }
    }
}
