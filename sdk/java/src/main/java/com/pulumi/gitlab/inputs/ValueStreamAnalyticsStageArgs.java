// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ValueStreamAnalyticsStageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ValueStreamAnalyticsStageArgs Empty = new ValueStreamAnalyticsStageArgs();

    /**
     * Boolean whether the stage is customized. If false, it assigns a built-in default stage by name.
     * 
     */
    @Import(name="custom")
    private @Nullable Output<Boolean> custom;

    /**
     * @return Boolean whether the stage is customized. If false, it assigns a built-in default stage by name.
     * 
     */
    public Optional<Output<Boolean>> custom() {
        return Optional.ofNullable(this.custom);
    }

    /**
     * End event identifier. Valid values are: `CODE_STAGE_START`, `ISSUE_CLOSED`, `ISSUE_CREATED`, `ISSUE_DEPLOYED_TO_PRODUCTION`, `ISSUE_FIRST_ADDED_TO_BOARD`, `ISSUE_FIRST_ADDED_TO_ITERATION`, `ISSUE_FIRST_ASSIGNED_AT`, `ISSUE_FIRST_ASSOCIATED_WITH_MILESTONE`, `ISSUE_FIRST_MENTIONED_IN_COMMIT`, `ISSUE_LABEL_ADDED`, `ISSUE_LABEL_REMOVED`, `ISSUE_LAST_EDITED`, `ISSUE_STAGE_END`, `MERGE_REQUEST_CLOSED`, `MERGE_REQUEST_CREATED`, `MERGE_REQUEST_FIRST_ASSIGNED_AT`, `MERGE_REQUEST_FIRST_COMMIT_AT`, `MERGE_REQUEST_FIRST_DEPLOYED_TO_PRODUCTION`, `MERGE_REQUEST_LABEL_ADDED`, `MERGE_REQUEST_LABEL_REMOVED`, `MERGE_REQUEST_LAST_BUILD_FINISHED`, `MERGE_REQUEST_LAST_BUILD_STARTED`, `MERGE_REQUEST_LAST_EDITED`, `MERGE_REQUEST_MERGED`, `MERGE_REQUEST_REVIEWER_FIRST_ASSIGNED`, `MERGE_REQUEST_PLAN_STAGE_START`
     * 
     */
    @Import(name="endEventIdentifier")
    private @Nullable Output<String> endEventIdentifier;

    /**
     * @return End event identifier. Valid values are: `CODE_STAGE_START`, `ISSUE_CLOSED`, `ISSUE_CREATED`, `ISSUE_DEPLOYED_TO_PRODUCTION`, `ISSUE_FIRST_ADDED_TO_BOARD`, `ISSUE_FIRST_ADDED_TO_ITERATION`, `ISSUE_FIRST_ASSIGNED_AT`, `ISSUE_FIRST_ASSOCIATED_WITH_MILESTONE`, `ISSUE_FIRST_MENTIONED_IN_COMMIT`, `ISSUE_LABEL_ADDED`, `ISSUE_LABEL_REMOVED`, `ISSUE_LAST_EDITED`, `ISSUE_STAGE_END`, `MERGE_REQUEST_CLOSED`, `MERGE_REQUEST_CREATED`, `MERGE_REQUEST_FIRST_ASSIGNED_AT`, `MERGE_REQUEST_FIRST_COMMIT_AT`, `MERGE_REQUEST_FIRST_DEPLOYED_TO_PRODUCTION`, `MERGE_REQUEST_LABEL_ADDED`, `MERGE_REQUEST_LABEL_REMOVED`, `MERGE_REQUEST_LAST_BUILD_FINISHED`, `MERGE_REQUEST_LAST_BUILD_STARTED`, `MERGE_REQUEST_LAST_EDITED`, `MERGE_REQUEST_MERGED`, `MERGE_REQUEST_REVIEWER_FIRST_ASSIGNED`, `MERGE_REQUEST_PLAN_STAGE_START`
     * 
     */
    public Optional<Output<String>> endEventIdentifier() {
        return Optional.ofNullable(this.endEventIdentifier);
    }

    /**
     * Label ID associated with the end event identifier. In the format of `gid://gitlab/GroupLabel/&lt;id&gt;` or `gid://gitlab/ProjectLabel/&lt;id&gt;`
     * 
     */
    @Import(name="endEventLabelId")
    private @Nullable Output<String> endEventLabelId;

    /**
     * @return Label ID associated with the end event identifier. In the format of `gid://gitlab/GroupLabel/&lt;id&gt;` or `gid://gitlab/ProjectLabel/&lt;id&gt;`
     * 
     */
    public Optional<Output<String>> endEventLabelId() {
        return Optional.ofNullable(this.endEventLabelId);
    }

    /**
     * Boolean whether the stage is hidden, GitLab provided default stages are hidden by default.
     * 
     */
    @Import(name="hidden")
    private @Nullable Output<Boolean> hidden;

    /**
     * @return Boolean whether the stage is hidden, GitLab provided default stages are hidden by default.
     * 
     */
    public Optional<Output<Boolean>> hidden() {
        return Optional.ofNullable(this.hidden);
    }

    /**
     * The ID of the value stream stage.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the value stream stage.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the value stream stage.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the value stream stage.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Start event identifier. Valid values are: `CODE_STAGE_START`, `ISSUE_CLOSED`, `ISSUE_CREATED`, `ISSUE_DEPLOYED_TO_PRODUCTION`, `ISSUE_FIRST_ADDED_TO_BOARD`, `ISSUE_FIRST_ADDED_TO_ITERATION`, `ISSUE_FIRST_ASSIGNED_AT`, `ISSUE_FIRST_ASSOCIATED_WITH_MILESTONE`, `ISSUE_FIRST_MENTIONED_IN_COMMIT`, `ISSUE_LABEL_ADDED`, `ISSUE_LABEL_REMOVED`, `ISSUE_LAST_EDITED`, `ISSUE_STAGE_END`, `MERGE_REQUEST_CLOSED`, `MERGE_REQUEST_CREATED`, `MERGE_REQUEST_FIRST_ASSIGNED_AT`, `MERGE_REQUEST_FIRST_COMMIT_AT`, `MERGE_REQUEST_FIRST_DEPLOYED_TO_PRODUCTION`, `MERGE_REQUEST_LABEL_ADDED`, `MERGE_REQUEST_LABEL_REMOVED`, `MERGE_REQUEST_LAST_BUILD_FINISHED`, `MERGE_REQUEST_LAST_BUILD_STARTED`, `MERGE_REQUEST_LAST_EDITED`, `MERGE_REQUEST_MERGED`, `MERGE_REQUEST_REVIEWER_FIRST_ASSIGNED`, `MERGE_REQUEST_PLAN_STAGE_START`
     * 
     */
    @Import(name="startEventIdentifier")
    private @Nullable Output<String> startEventIdentifier;

    /**
     * @return Start event identifier. Valid values are: `CODE_STAGE_START`, `ISSUE_CLOSED`, `ISSUE_CREATED`, `ISSUE_DEPLOYED_TO_PRODUCTION`, `ISSUE_FIRST_ADDED_TO_BOARD`, `ISSUE_FIRST_ADDED_TO_ITERATION`, `ISSUE_FIRST_ASSIGNED_AT`, `ISSUE_FIRST_ASSOCIATED_WITH_MILESTONE`, `ISSUE_FIRST_MENTIONED_IN_COMMIT`, `ISSUE_LABEL_ADDED`, `ISSUE_LABEL_REMOVED`, `ISSUE_LAST_EDITED`, `ISSUE_STAGE_END`, `MERGE_REQUEST_CLOSED`, `MERGE_REQUEST_CREATED`, `MERGE_REQUEST_FIRST_ASSIGNED_AT`, `MERGE_REQUEST_FIRST_COMMIT_AT`, `MERGE_REQUEST_FIRST_DEPLOYED_TO_PRODUCTION`, `MERGE_REQUEST_LABEL_ADDED`, `MERGE_REQUEST_LABEL_REMOVED`, `MERGE_REQUEST_LAST_BUILD_FINISHED`, `MERGE_REQUEST_LAST_BUILD_STARTED`, `MERGE_REQUEST_LAST_EDITED`, `MERGE_REQUEST_MERGED`, `MERGE_REQUEST_REVIEWER_FIRST_ASSIGNED`, `MERGE_REQUEST_PLAN_STAGE_START`
     * 
     */
    public Optional<Output<String>> startEventIdentifier() {
        return Optional.ofNullable(this.startEventIdentifier);
    }

    /**
     * Label ID associated with the start event identifier. In the format of `gid://gitlab/GroupLabel/&lt;id&gt;` or `gid://gitlab/ProjectLabel/&lt;id&gt;`
     * 
     */
    @Import(name="startEventLabelId")
    private @Nullable Output<String> startEventLabelId;

    /**
     * @return Label ID associated with the start event identifier. In the format of `gid://gitlab/GroupLabel/&lt;id&gt;` or `gid://gitlab/ProjectLabel/&lt;id&gt;`
     * 
     */
    public Optional<Output<String>> startEventLabelId() {
        return Optional.ofNullable(this.startEventLabelId);
    }

    private ValueStreamAnalyticsStageArgs() {}

    private ValueStreamAnalyticsStageArgs(ValueStreamAnalyticsStageArgs $) {
        this.custom = $.custom;
        this.endEventIdentifier = $.endEventIdentifier;
        this.endEventLabelId = $.endEventLabelId;
        this.hidden = $.hidden;
        this.id = $.id;
        this.name = $.name;
        this.startEventIdentifier = $.startEventIdentifier;
        this.startEventLabelId = $.startEventLabelId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ValueStreamAnalyticsStageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ValueStreamAnalyticsStageArgs $;

        public Builder() {
            $ = new ValueStreamAnalyticsStageArgs();
        }

        public Builder(ValueStreamAnalyticsStageArgs defaults) {
            $ = new ValueStreamAnalyticsStageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param custom Boolean whether the stage is customized. If false, it assigns a built-in default stage by name.
         * 
         * @return builder
         * 
         */
        public Builder custom(@Nullable Output<Boolean> custom) {
            $.custom = custom;
            return this;
        }

        /**
         * @param custom Boolean whether the stage is customized. If false, it assigns a built-in default stage by name.
         * 
         * @return builder
         * 
         */
        public Builder custom(Boolean custom) {
            return custom(Output.of(custom));
        }

        /**
         * @param endEventIdentifier End event identifier. Valid values are: `CODE_STAGE_START`, `ISSUE_CLOSED`, `ISSUE_CREATED`, `ISSUE_DEPLOYED_TO_PRODUCTION`, `ISSUE_FIRST_ADDED_TO_BOARD`, `ISSUE_FIRST_ADDED_TO_ITERATION`, `ISSUE_FIRST_ASSIGNED_AT`, `ISSUE_FIRST_ASSOCIATED_WITH_MILESTONE`, `ISSUE_FIRST_MENTIONED_IN_COMMIT`, `ISSUE_LABEL_ADDED`, `ISSUE_LABEL_REMOVED`, `ISSUE_LAST_EDITED`, `ISSUE_STAGE_END`, `MERGE_REQUEST_CLOSED`, `MERGE_REQUEST_CREATED`, `MERGE_REQUEST_FIRST_ASSIGNED_AT`, `MERGE_REQUEST_FIRST_COMMIT_AT`, `MERGE_REQUEST_FIRST_DEPLOYED_TO_PRODUCTION`, `MERGE_REQUEST_LABEL_ADDED`, `MERGE_REQUEST_LABEL_REMOVED`, `MERGE_REQUEST_LAST_BUILD_FINISHED`, `MERGE_REQUEST_LAST_BUILD_STARTED`, `MERGE_REQUEST_LAST_EDITED`, `MERGE_REQUEST_MERGED`, `MERGE_REQUEST_REVIEWER_FIRST_ASSIGNED`, `MERGE_REQUEST_PLAN_STAGE_START`
         * 
         * @return builder
         * 
         */
        public Builder endEventIdentifier(@Nullable Output<String> endEventIdentifier) {
            $.endEventIdentifier = endEventIdentifier;
            return this;
        }

        /**
         * @param endEventIdentifier End event identifier. Valid values are: `CODE_STAGE_START`, `ISSUE_CLOSED`, `ISSUE_CREATED`, `ISSUE_DEPLOYED_TO_PRODUCTION`, `ISSUE_FIRST_ADDED_TO_BOARD`, `ISSUE_FIRST_ADDED_TO_ITERATION`, `ISSUE_FIRST_ASSIGNED_AT`, `ISSUE_FIRST_ASSOCIATED_WITH_MILESTONE`, `ISSUE_FIRST_MENTIONED_IN_COMMIT`, `ISSUE_LABEL_ADDED`, `ISSUE_LABEL_REMOVED`, `ISSUE_LAST_EDITED`, `ISSUE_STAGE_END`, `MERGE_REQUEST_CLOSED`, `MERGE_REQUEST_CREATED`, `MERGE_REQUEST_FIRST_ASSIGNED_AT`, `MERGE_REQUEST_FIRST_COMMIT_AT`, `MERGE_REQUEST_FIRST_DEPLOYED_TO_PRODUCTION`, `MERGE_REQUEST_LABEL_ADDED`, `MERGE_REQUEST_LABEL_REMOVED`, `MERGE_REQUEST_LAST_BUILD_FINISHED`, `MERGE_REQUEST_LAST_BUILD_STARTED`, `MERGE_REQUEST_LAST_EDITED`, `MERGE_REQUEST_MERGED`, `MERGE_REQUEST_REVIEWER_FIRST_ASSIGNED`, `MERGE_REQUEST_PLAN_STAGE_START`
         * 
         * @return builder
         * 
         */
        public Builder endEventIdentifier(String endEventIdentifier) {
            return endEventIdentifier(Output.of(endEventIdentifier));
        }

        /**
         * @param endEventLabelId Label ID associated with the end event identifier. In the format of `gid://gitlab/GroupLabel/&lt;id&gt;` or `gid://gitlab/ProjectLabel/&lt;id&gt;`
         * 
         * @return builder
         * 
         */
        public Builder endEventLabelId(@Nullable Output<String> endEventLabelId) {
            $.endEventLabelId = endEventLabelId;
            return this;
        }

        /**
         * @param endEventLabelId Label ID associated with the end event identifier. In the format of `gid://gitlab/GroupLabel/&lt;id&gt;` or `gid://gitlab/ProjectLabel/&lt;id&gt;`
         * 
         * @return builder
         * 
         */
        public Builder endEventLabelId(String endEventLabelId) {
            return endEventLabelId(Output.of(endEventLabelId));
        }

        /**
         * @param hidden Boolean whether the stage is hidden, GitLab provided default stages are hidden by default.
         * 
         * @return builder
         * 
         */
        public Builder hidden(@Nullable Output<Boolean> hidden) {
            $.hidden = hidden;
            return this;
        }

        /**
         * @param hidden Boolean whether the stage is hidden, GitLab provided default stages are hidden by default.
         * 
         * @return builder
         * 
         */
        public Builder hidden(Boolean hidden) {
            return hidden(Output.of(hidden));
        }

        /**
         * @param id The ID of the value stream stage.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the value stream stage.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name The name of the value stream stage.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the value stream stage.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param startEventIdentifier Start event identifier. Valid values are: `CODE_STAGE_START`, `ISSUE_CLOSED`, `ISSUE_CREATED`, `ISSUE_DEPLOYED_TO_PRODUCTION`, `ISSUE_FIRST_ADDED_TO_BOARD`, `ISSUE_FIRST_ADDED_TO_ITERATION`, `ISSUE_FIRST_ASSIGNED_AT`, `ISSUE_FIRST_ASSOCIATED_WITH_MILESTONE`, `ISSUE_FIRST_MENTIONED_IN_COMMIT`, `ISSUE_LABEL_ADDED`, `ISSUE_LABEL_REMOVED`, `ISSUE_LAST_EDITED`, `ISSUE_STAGE_END`, `MERGE_REQUEST_CLOSED`, `MERGE_REQUEST_CREATED`, `MERGE_REQUEST_FIRST_ASSIGNED_AT`, `MERGE_REQUEST_FIRST_COMMIT_AT`, `MERGE_REQUEST_FIRST_DEPLOYED_TO_PRODUCTION`, `MERGE_REQUEST_LABEL_ADDED`, `MERGE_REQUEST_LABEL_REMOVED`, `MERGE_REQUEST_LAST_BUILD_FINISHED`, `MERGE_REQUEST_LAST_BUILD_STARTED`, `MERGE_REQUEST_LAST_EDITED`, `MERGE_REQUEST_MERGED`, `MERGE_REQUEST_REVIEWER_FIRST_ASSIGNED`, `MERGE_REQUEST_PLAN_STAGE_START`
         * 
         * @return builder
         * 
         */
        public Builder startEventIdentifier(@Nullable Output<String> startEventIdentifier) {
            $.startEventIdentifier = startEventIdentifier;
            return this;
        }

        /**
         * @param startEventIdentifier Start event identifier. Valid values are: `CODE_STAGE_START`, `ISSUE_CLOSED`, `ISSUE_CREATED`, `ISSUE_DEPLOYED_TO_PRODUCTION`, `ISSUE_FIRST_ADDED_TO_BOARD`, `ISSUE_FIRST_ADDED_TO_ITERATION`, `ISSUE_FIRST_ASSIGNED_AT`, `ISSUE_FIRST_ASSOCIATED_WITH_MILESTONE`, `ISSUE_FIRST_MENTIONED_IN_COMMIT`, `ISSUE_LABEL_ADDED`, `ISSUE_LABEL_REMOVED`, `ISSUE_LAST_EDITED`, `ISSUE_STAGE_END`, `MERGE_REQUEST_CLOSED`, `MERGE_REQUEST_CREATED`, `MERGE_REQUEST_FIRST_ASSIGNED_AT`, `MERGE_REQUEST_FIRST_COMMIT_AT`, `MERGE_REQUEST_FIRST_DEPLOYED_TO_PRODUCTION`, `MERGE_REQUEST_LABEL_ADDED`, `MERGE_REQUEST_LABEL_REMOVED`, `MERGE_REQUEST_LAST_BUILD_FINISHED`, `MERGE_REQUEST_LAST_BUILD_STARTED`, `MERGE_REQUEST_LAST_EDITED`, `MERGE_REQUEST_MERGED`, `MERGE_REQUEST_REVIEWER_FIRST_ASSIGNED`, `MERGE_REQUEST_PLAN_STAGE_START`
         * 
         * @return builder
         * 
         */
        public Builder startEventIdentifier(String startEventIdentifier) {
            return startEventIdentifier(Output.of(startEventIdentifier));
        }

        /**
         * @param startEventLabelId Label ID associated with the start event identifier. In the format of `gid://gitlab/GroupLabel/&lt;id&gt;` or `gid://gitlab/ProjectLabel/&lt;id&gt;`
         * 
         * @return builder
         * 
         */
        public Builder startEventLabelId(@Nullable Output<String> startEventLabelId) {
            $.startEventLabelId = startEventLabelId;
            return this;
        }

        /**
         * @param startEventLabelId Label ID associated with the start event identifier. In the format of `gid://gitlab/GroupLabel/&lt;id&gt;` or `gid://gitlab/ProjectLabel/&lt;id&gt;`
         * 
         * @return builder
         * 
         */
        public Builder startEventLabelId(String startEventLabelId) {
            return startEventLabelId(Output.of(startEventLabelId));
        }

        public ValueStreamAnalyticsStageArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ValueStreamAnalyticsStageArgs", "name");
            }
            return $;
        }
    }

}
