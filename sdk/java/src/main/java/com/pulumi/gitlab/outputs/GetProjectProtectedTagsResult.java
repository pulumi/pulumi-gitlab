// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.outputs.GetProjectProtectedTagsProtectedTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProjectProtectedTagsResult {
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    /**
     * @return The integer or path with namespace that uniquely identifies the project.
     * 
     */
    private String project;
    /**
     * @return A list of protected tags, as defined below.
     * 
     */
    private List<GetProjectProtectedTagsProtectedTag> protectedTags;

    private GetProjectProtectedTagsResult() {}
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The integer or path with namespace that uniquely identifies the project.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return A list of protected tags, as defined below.
     * 
     */
    public List<GetProjectProtectedTagsProtectedTag> protectedTags() {
        return this.protectedTags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectProtectedTagsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String project;
        private List<GetProjectProtectedTagsProtectedTag> protectedTags;
        public Builder() {}
        public Builder(GetProjectProtectedTagsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.project = defaults.project;
    	      this.protectedTags = defaults.protectedTags;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProjectProtectedTagsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetProjectProtectedTagsResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder protectedTags(List<GetProjectProtectedTagsProtectedTag> protectedTags) {
            if (protectedTags == null) {
              throw new MissingRequiredPropertyException("GetProjectProtectedTagsResult", "protectedTags");
            }
            this.protectedTags = protectedTags;
            return this;
        }
        public Builder protectedTags(GetProjectProtectedTagsProtectedTag... protectedTags) {
            return protectedTags(List.of(protectedTags));
        }
        public GetProjectProtectedTagsResult build() {
            final var _resultValue = new GetProjectProtectedTagsResult();
            _resultValue.id = id;
            _resultValue.project = project;
            _resultValue.protectedTags = protectedTags;
            return _resultValue;
        }
    }
}
