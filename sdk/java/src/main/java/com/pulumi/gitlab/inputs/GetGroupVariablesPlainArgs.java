// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGroupVariablesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupVariablesPlainArgs Empty = new GetGroupVariablesPlainArgs();

    /**
     * The environment scope of the variable. Defaults to all environment (`*`).
     * 
     */
    @Import(name="environmentScope")
    private @Nullable String environmentScope;

    /**
     * @return The environment scope of the variable. Defaults to all environment (`*`).
     * 
     */
    public Optional<String> environmentScope() {
        return Optional.ofNullable(this.environmentScope);
    }

    /**
     * The name or id of the group.
     * 
     */
    @Import(name="group", required=true)
    private String group;

    /**
     * @return The name or id of the group.
     * 
     */
    public String group() {
        return this.group;
    }

    private GetGroupVariablesPlainArgs() {}

    private GetGroupVariablesPlainArgs(GetGroupVariablesPlainArgs $) {
        this.environmentScope = $.environmentScope;
        this.group = $.group;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupVariablesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupVariablesPlainArgs $;

        public Builder() {
            $ = new GetGroupVariablesPlainArgs();
        }

        public Builder(GetGroupVariablesPlainArgs defaults) {
            $ = new GetGroupVariablesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentScope The environment scope of the variable. Defaults to all environment (`*`).
         * 
         * @return builder
         * 
         */
        public Builder environmentScope(@Nullable String environmentScope) {
            $.environmentScope = environmentScope;
            return this;
        }

        /**
         * @param group The name or id of the group.
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            $.group = group;
            return this;
        }

        public GetGroupVariablesPlainArgs build() {
            if ($.group == null) {
                throw new MissingRequiredPropertyException("GetGroupVariablesPlainArgs", "group");
            }
            return $;
        }
    }

}
