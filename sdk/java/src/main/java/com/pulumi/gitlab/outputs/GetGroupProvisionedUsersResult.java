// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.outputs.GetGroupProvisionedUsersProvisionedUser;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGroupProvisionedUsersResult {
    /**
     * @return Return only active provisioned users.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return Return only blocked provisioned users.
     * 
     */
    private @Nullable Boolean blocked;
    /**
     * @return Return only provisioned users created on or after the specified date. Expected in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ).
     * 
     */
    private @Nullable String createdAfter;
    /**
     * @return Return only provisioned users created on or before the specified date. Expected in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ).
     * 
     */
    private @Nullable String createdBefore;
    /**
     * @return The ID or URL-encoded path of the group.
     * 
     */
    private String id;
    /**
     * @return The list of provisioned users.
     * 
     */
    private @Nullable List<GetGroupProvisionedUsersProvisionedUser> provisionedUsers;
    /**
     * @return The search query to filter the provisioned users.
     * 
     */
    private @Nullable String search;
    /**
     * @return The username of the provisioned user.
     * 
     */
    private @Nullable String username;

    private GetGroupProvisionedUsersResult() {}
    /**
     * @return Return only active provisioned users.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return Return only blocked provisioned users.
     * 
     */
    public Optional<Boolean> blocked() {
        return Optional.ofNullable(this.blocked);
    }
    /**
     * @return Return only provisioned users created on or after the specified date. Expected in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ).
     * 
     */
    public Optional<String> createdAfter() {
        return Optional.ofNullable(this.createdAfter);
    }
    /**
     * @return Return only provisioned users created on or before the specified date. Expected in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ).
     * 
     */
    public Optional<String> createdBefore() {
        return Optional.ofNullable(this.createdBefore);
    }
    /**
     * @return The ID or URL-encoded path of the group.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of provisioned users.
     * 
     */
    public List<GetGroupProvisionedUsersProvisionedUser> provisionedUsers() {
        return this.provisionedUsers == null ? List.of() : this.provisionedUsers;
    }
    /**
     * @return The search query to filter the provisioned users.
     * 
     */
    public Optional<String> search() {
        return Optional.ofNullable(this.search);
    }
    /**
     * @return The username of the provisioned user.
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupProvisionedUsersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean active;
        private @Nullable Boolean blocked;
        private @Nullable String createdAfter;
        private @Nullable String createdBefore;
        private String id;
        private @Nullable List<GetGroupProvisionedUsersProvisionedUser> provisionedUsers;
        private @Nullable String search;
        private @Nullable String username;
        public Builder() {}
        public Builder(GetGroupProvisionedUsersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.blocked = defaults.blocked;
    	      this.createdAfter = defaults.createdAfter;
    	      this.createdBefore = defaults.createdBefore;
    	      this.id = defaults.id;
    	      this.provisionedUsers = defaults.provisionedUsers;
    	      this.search = defaults.search;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {

            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder blocked(@Nullable Boolean blocked) {

            this.blocked = blocked;
            return this;
        }
        @CustomType.Setter
        public Builder createdAfter(@Nullable String createdAfter) {

            this.createdAfter = createdAfter;
            return this;
        }
        @CustomType.Setter
        public Builder createdBefore(@Nullable String createdBefore) {

            this.createdBefore = createdBefore;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupProvisionedUsersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedUsers(@Nullable List<GetGroupProvisionedUsersProvisionedUser> provisionedUsers) {

            this.provisionedUsers = provisionedUsers;
            return this;
        }
        public Builder provisionedUsers(GetGroupProvisionedUsersProvisionedUser... provisionedUsers) {
            return provisionedUsers(List.of(provisionedUsers));
        }
        @CustomType.Setter
        public Builder search(@Nullable String search) {

            this.search = search;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {

            this.username = username;
            return this;
        }
        public GetGroupProvisionedUsersResult build() {
            final var _resultValue = new GetGroupProvisionedUsersResult();
            _resultValue.active = active;
            _resultValue.blocked = blocked;
            _resultValue.createdAfter = createdAfter;
            _resultValue.createdBefore = createdBefore;
            _resultValue.id = id;
            _resultValue.provisionedUsers = provisionedUsers;
            _resultValue.search = search;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
