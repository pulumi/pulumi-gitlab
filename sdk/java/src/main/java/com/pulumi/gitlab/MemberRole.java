// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gitlab.MemberRoleArgs;
import com.pulumi.gitlab.Utilities;
import com.pulumi.gitlab.inputs.MemberRoleState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The `gitlab.MemberRole` resource allows to manage the lifecycle of a custom member role.
 * 
 * Custom roles allow an organization to create user roles with the precise privileges and permissions required for that organizationâ€™s needs.
 * 
 * &gt; This resource requires an Ultimate license.
 * 
 * &gt; Most custom roles are considered billable users that use a seat. [Custom roles billing and seat usage](https://docs.gitlab.com/user/custom_roles/#billing-and-seat-usage)
 * 
 * &gt; There can be only 10 custom roles on your instance or namespace. See [issue 450929](https://gitlab.com/gitlab-org/gitlab/-/issues/450929) for more details.
 * 
 * **Upstream API**: [GitLab GraphQL API docs](https://docs.gitlab.com/api/graphql/reference/#mutationmemberrolecreate)
 * 
 * ## Import
 * 
 * Starting in Terraform v1.5.0 you can use an import block to import `gitlab_member_role`. For example:
 * 
 * terraform
 * 
 * import {
 * 
 *   to = gitlab_member_role.example
 * 
 *   id = &#34;see CLI command below for ID&#34;
 * 
 * }
 * 
 * Import using the CLI is supported using the following syntax:
 * 
 * GitLab member role can be imported using the id made up of `gid://gitlab/MemberRole/&lt;ID&gt;` e.g.
 * 
 * ```sh
 * $ pulumi import gitlab:index/memberRole:MemberRole example &#39;gid://gitlab/MemberRole/123&#39;
 * ```
 * 
 */
@ResourceType(type="gitlab:index/memberRole:MemberRole")
public class MemberRole extends com.pulumi.resources.CustomResource {
    /**
     * The base access level for the custom role. Valid values are: `DEVELOPER`, `GUEST`, `MAINTAINER`, `MINIMAL_ACCESS`, `OWNER`, `REPORTER`
     * 
     */
    @Export(name="baseAccessLevel", refs={String.class}, tree="[0]")
    private Output<String> baseAccessLevel;

    /**
     * @return The base access level for the custom role. Valid values are: `DEVELOPER`, `GUEST`, `MAINTAINER`, `MINIMAL_ACCESS`, `OWNER`, `REPORTER`
     * 
     */
    public Output<String> baseAccessLevel() {
        return this.baseAccessLevel;
    }
    /**
     * Timestamp of when the member role was created. Only available with GitLab version 17.3 or higher.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return Timestamp of when the member role was created. Only available with GitLab version 17.3 or higher.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Description for the member role.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Description for the member role.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The Web UI path to edit the member role
     * 
     */
    @Export(name="editPath", refs={String.class}, tree="[0]")
    private Output<String> editPath;

    /**
     * @return The Web UI path to edit the member role
     * 
     */
    public Output<String> editPath() {
        return this.editPath;
    }
    /**
     * All permissions enabled for the custom role. Valid values are: `ADMIN_CICD_VARIABLES`, `ADMIN_COMPLIANCE_FRAMEWORK`, `ADMIN_GROUP_MEMBER`, `ADMIN_INTEGRATIONS`, `ADMIN_MERGE_REQUEST`, `ADMIN_PROTECTED_BRANCH`, `ADMIN_PUSH_RULES`, `ADMIN_RUNNERS`, `ADMIN_TERRAFORM_STATE`, `ADMIN_VULNERABILITY`, `ADMIN_WEB_HOOK`, `ARCHIVE_PROJECT`, `MANAGE_DEPLOY_TOKENS`, `MANAGE_GROUP_ACCESS_TOKENS`, `MANAGE_MERGE_REQUEST_SETTINGS`, `MANAGE_PROJECT_ACCESS_TOKENS`, `MANAGE_SECURITY_POLICY_LINK`, `READ_ADMIN_CICD`, `READ_ADMIN_DASHBOARD`, `READ_CODE`, `READ_COMPLIANCE_DASHBOARD`, `READ_CRM_CONTACT`, `READ_DEPENDENCY`, `READ_RUNNERS`, `READ_VULNERABILITY`, `REMOVE_GROUP`, `REMOVE_PROJECT`
     * 
     */
    @Export(name="enabledPermissions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> enabledPermissions;

    /**
     * @return All permissions enabled for the custom role. Valid values are: `ADMIN_CICD_VARIABLES`, `ADMIN_COMPLIANCE_FRAMEWORK`, `ADMIN_GROUP_MEMBER`, `ADMIN_INTEGRATIONS`, `ADMIN_MERGE_REQUEST`, `ADMIN_PROTECTED_BRANCH`, `ADMIN_PUSH_RULES`, `ADMIN_RUNNERS`, `ADMIN_TERRAFORM_STATE`, `ADMIN_VULNERABILITY`, `ADMIN_WEB_HOOK`, `ARCHIVE_PROJECT`, `MANAGE_DEPLOY_TOKENS`, `MANAGE_GROUP_ACCESS_TOKENS`, `MANAGE_MERGE_REQUEST_SETTINGS`, `MANAGE_PROJECT_ACCESS_TOKENS`, `MANAGE_SECURITY_POLICY_LINK`, `READ_ADMIN_CICD`, `READ_ADMIN_DASHBOARD`, `READ_CODE`, `READ_COMPLIANCE_DASHBOARD`, `READ_CRM_CONTACT`, `READ_DEPENDENCY`, `READ_RUNNERS`, `READ_VULNERABILITY`, `REMOVE_GROUP`, `REMOVE_PROJECT`
     * 
     */
    public Output<List<String>> enabledPermissions() {
        return this.enabledPermissions;
    }
    /**
     * Full path of the namespace to create the member role in. **Required for SAAS** **Not allowed for self-managed**
     * 
     */
    @Export(name="groupPath", refs={String.class}, tree="[0]")
    private Output<String> groupPath;

    /**
     * @return Full path of the namespace to create the member role in. **Required for SAAS** **Not allowed for self-managed**
     * 
     */
    public Output<String> groupPath() {
        return this.groupPath;
    }
    /**
     * The id integer value extracted from the `id` attribute
     * 
     */
    @Export(name="iid", refs={Integer.class}, tree="[0]")
    private Output<Integer> iid;

    /**
     * @return The id integer value extracted from the `id` attribute
     * 
     */
    public Output<Integer> iid() {
        return this.iid;
    }
    /**
     * Name for the member role.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name for the member role.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MemberRole(java.lang.String name) {
        this(name, MemberRoleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MemberRole(java.lang.String name, MemberRoleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MemberRole(java.lang.String name, MemberRoleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/memberRole:MemberRole", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MemberRole(java.lang.String name, Output<java.lang.String> id, @Nullable MemberRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/memberRole:MemberRole", name, state, makeResourceOptions(options, id), false);
    }

    private static MemberRoleArgs makeArgs(MemberRoleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MemberRoleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MemberRole get(java.lang.String name, Output<java.lang.String> id, @Nullable MemberRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MemberRole(name, id, state, options);
    }
}
