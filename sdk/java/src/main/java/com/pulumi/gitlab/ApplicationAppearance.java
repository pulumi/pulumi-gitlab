// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gitlab.ApplicationAppearanceArgs;
import com.pulumi.gitlab.Utilities;
import com.pulumi.gitlab.inputs.ApplicationAppearanceState;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ## Import
 * 
 * Starting in Terraform v1.5.0, you can use an import block to import `gitlab_application_appearance`. For example:
 * 
 * terraform
 * 
 * import {
 * 
 *   to = gitlab_application_appearance.example
 * 
 *   id = &#34;see CLI command below for ID&#34;
 * 
 * }
 * 
 * Importing using the CLI is supported with the following syntax:
 * 
 * Gitlab application appearance can be imported with the hard-coded key `gitlab`, for example:
 * 
 * ```sh
 * $ pulumi import gitlab:index/applicationAppearance:ApplicationAppearance example &#34;gitlab&#34;
 * ```
 * 
 */
@ResourceType(type="gitlab:index/applicationAppearance:ApplicationAppearance")
public class ApplicationAppearance extends com.pulumi.resources.CustomResource {
    /**
     * Markdown text shown on the sign-in and sign-up page.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Markdown text shown on the sign-in and sign-up page.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Add header and footer to all outgoing emails if enabled.
     * 
     */
    @Export(name="emailHeaderAndFooterEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> emailHeaderAndFooterEnabled;

    /**
     * @return Add header and footer to all outgoing emails if enabled.
     * 
     */
    public Output<Boolean> emailHeaderAndFooterEnabled() {
        return this.emailHeaderAndFooterEnabled;
    }
    /**
     * Message in the system footer bar.
     * 
     */
    @Export(name="footerMessage", refs={String.class}, tree="[0]")
    private Output<String> footerMessage;

    /**
     * @return Message in the system footer bar.
     * 
     */
    public Output<String> footerMessage() {
        return this.footerMessage;
    }
    /**
     * Message in the system header bar.
     * 
     */
    @Export(name="headerMessage", refs={String.class}, tree="[0]")
    private Output<String> headerMessage;

    /**
     * @return Message in the system header bar.
     * 
     */
    public Output<String> headerMessage() {
        return this.headerMessage;
    }
    @Export(name="keepSettingsOnDestroy", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> keepSettingsOnDestroy;

    public Output<Boolean> keepSettingsOnDestroy() {
        return this.keepSettingsOnDestroy;
    }
    /**
     * Markdown text shown on the group or project member page for users with permission to change members.
     * 
     */
    @Export(name="memberGuidelines", refs={String.class}, tree="[0]")
    private Output<String> memberGuidelines;

    /**
     * @return Markdown text shown on the group or project member page for users with permission to change members.
     * 
     */
    public Output<String> memberGuidelines() {
        return this.memberGuidelines;
    }
    /**
     * Background color for the system header or footer bar, in CSS hex notation.
     * 
     */
    @Export(name="messageBackgroundColor", refs={String.class}, tree="[0]")
    private Output<String> messageBackgroundColor;

    /**
     * @return Background color for the system header or footer bar, in CSS hex notation.
     * 
     */
    public Output<String> messageBackgroundColor() {
        return this.messageBackgroundColor;
    }
    /**
     * Font color for the system header or footer bar, in CSS hex notation.
     * 
     */
    @Export(name="messageFontColor", refs={String.class}, tree="[0]")
    private Output<String> messageFontColor;

    /**
     * @return Font color for the system header or footer bar, in CSS hex notation.
     * 
     */
    public Output<String> messageFontColor() {
        return this.messageFontColor;
    }
    /**
     * Markdown text shown on the new project page.
     * 
     */
    @Export(name="newProjectGuidelines", refs={String.class}, tree="[0]")
    private Output<String> newProjectGuidelines;

    /**
     * @return Markdown text shown on the new project page.
     * 
     */
    public Output<String> newProjectGuidelines() {
        return this.newProjectGuidelines;
    }
    /**
     * Markdown text shown on the profile page below the Public Avatar.
     * 
     */
    @Export(name="profileImageGuidelines", refs={String.class}, tree="[0]")
    private Output<String> profileImageGuidelines;

    /**
     * @return Markdown text shown on the profile page below the Public Avatar.
     * 
     */
    public Output<String> profileImageGuidelines() {
        return this.profileImageGuidelines;
    }
    /**
     * An explanation of what the Progressive Web App does. Used for the attribute `description` in `manifest.json`.
     * 
     */
    @Export(name="pwaDescription", refs={String.class}, tree="[0]")
    private Output<String> pwaDescription;

    /**
     * @return An explanation of what the Progressive Web App does. Used for the attribute `description` in `manifest.json`.
     * 
     */
    public Output<String> pwaDescription() {
        return this.pwaDescription;
    }
    /**
     * Full name of the Progressive Web App. Used for the attribute `name` in `manifest.json`.
     * 
     */
    @Export(name="pwaName", refs={String.class}, tree="[0]")
    private Output<String> pwaName;

    /**
     * @return Full name of the Progressive Web App. Used for the attribute `name` in `manifest.json`.
     * 
     */
    public Output<String> pwaName() {
        return this.pwaName;
    }
    /**
     * Short name for Progressive Web App.
     * 
     */
    @Export(name="pwaShortName", refs={String.class}, tree="[0]")
    private Output<String> pwaShortName;

    /**
     * @return Short name for Progressive Web App.
     * 
     */
    public Output<String> pwaShortName() {
        return this.pwaShortName;
    }
    /**
     * Application title on the sign-in and sign-up page.
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output<String> title;

    /**
     * @return Application title on the sign-in and sign-up page.
     * 
     */
    public Output<String> title() {
        return this.title;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApplicationAppearance(java.lang.String name) {
        this(name, ApplicationAppearanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApplicationAppearance(java.lang.String name, @Nullable ApplicationAppearanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApplicationAppearance(java.lang.String name, @Nullable ApplicationAppearanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/applicationAppearance:ApplicationAppearance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ApplicationAppearance(java.lang.String name, Output<java.lang.String> id, @Nullable ApplicationAppearanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/applicationAppearance:ApplicationAppearance", name, state, makeResourceOptions(options, id), false);
    }

    private static ApplicationAppearanceArgs makeArgs(@Nullable ApplicationAppearanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ApplicationAppearanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApplicationAppearance get(java.lang.String name, Output<java.lang.String> id, @Nullable ApplicationAppearanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApplicationAppearance(name, id, state, options);
    }
}
