// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectEnvironmentState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectEnvironmentState Empty = new ProjectEnvironmentState();

    /**
     * The ISO8601 date/time that this environment will be automatically stopped at in UTC.
     * 
     */
    @Import(name="autoStopAt")
    private @Nullable Output<String> autoStopAt;

    /**
     * @return The ISO8601 date/time that this environment will be automatically stopped at in UTC.
     * 
     */
    public Optional<Output<String>> autoStopAt() {
        return Optional.ofNullable(this.autoStopAt);
    }

    /**
     * The auto stop setting for the environment. Allowed values are `always`, `with_action`. If this is set to `with_action` and `stop_before_destroy` is `true`, the environment will be force-stopped.
     * 
     */
    @Import(name="autoStopSetting")
    private @Nullable Output<String> autoStopSetting;

    /**
     * @return The auto stop setting for the environment. Allowed values are `always`, `with_action`. If this is set to `with_action` and `stop_before_destroy` is `true`, the environment will be force-stopped.
     * 
     */
    public Optional<Output<String>> autoStopSetting() {
        return Optional.ofNullable(this.autoStopSetting);
    }

    /**
     * The cluster agent to associate with this environment.
     * 
     */
    @Import(name="clusterAgentId")
    private @Nullable Output<Integer> clusterAgentId;

    /**
     * @return The cluster agent to associate with this environment.
     * 
     */
    public Optional<Output<Integer>> clusterAgentId() {
        return Optional.ofNullable(this.clusterAgentId);
    }

    /**
     * The ISO8601 date/time that this environment was created at in UTC.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The ISO8601 date/time that this environment was created at in UTC.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The description of the environment.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the environment.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Place to link to for this environment.
     * 
     */
    @Import(name="externalUrl")
    private @Nullable Output<String> externalUrl;

    /**
     * @return Place to link to for this environment.
     * 
     */
    public Optional<Output<String>> externalUrl() {
        return Optional.ofNullable(this.externalUrl);
    }

    /**
     * The Flux resource path to associate with this environment.
     * 
     */
    @Import(name="fluxResourcePath")
    private @Nullable Output<String> fluxResourcePath;

    /**
     * @return The Flux resource path to associate with this environment.
     * 
     */
    public Optional<Output<String>> fluxResourcePath() {
        return Optional.ofNullable(this.fluxResourcePath);
    }

    /**
     * The Kubernetes namespace to associate with this environment.
     * 
     */
    @Import(name="kubernetesNamespace")
    private @Nullable Output<String> kubernetesNamespace;

    /**
     * @return The Kubernetes namespace to associate with this environment.
     * 
     */
    public Optional<Output<String>> kubernetesNamespace() {
        return Optional.ofNullable(this.kubernetesNamespace);
    }

    /**
     * The name of the environment.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the environment.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID or full path of the project to environment is created for.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID or full path of the project to environment is created for.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The name of the environment in lowercase, shortened to 63 bytes, and with everything except 0-9 and a-z replaced with -. No leading / trailing -. Use in URLs, host names and domain names.
     * 
     */
    @Import(name="slug")
    private @Nullable Output<String> slug;

    /**
     * @return The name of the environment in lowercase, shortened to 63 bytes, and with everything except 0-9 and a-z replaced with -. No leading / trailing -. Use in URLs, host names and domain names.
     * 
     */
    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    /**
     * State the environment is in. Valid values are `available`, `stopped`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return State the environment is in. Valid values are `available`, `stopped`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Determines whether the environment is attempted to be stopped before the environment is deleted. If `auto_stop_setting` is set to `with_action`, this will perform a force stop.
     * 
     */
    @Import(name="stopBeforeDestroy")
    private @Nullable Output<Boolean> stopBeforeDestroy;

    /**
     * @return Determines whether the environment is attempted to be stopped before the environment is deleted. If `auto_stop_setting` is set to `with_action`, this will perform a force stop.
     * 
     */
    public Optional<Output<Boolean>> stopBeforeDestroy() {
        return Optional.ofNullable(this.stopBeforeDestroy);
    }

    /**
     * The tier of the new environment. Valid values are `production`, `staging`, `testing`, `development`, `other`.
     * 
     */
    @Import(name="tier")
    private @Nullable Output<String> tier;

    /**
     * @return The tier of the new environment. Valid values are `production`, `staging`, `testing`, `development`, `other`.
     * 
     */
    public Optional<Output<String>> tier() {
        return Optional.ofNullable(this.tier);
    }

    /**
     * The ISO8601 date/time that this environment was last updated at in UTC.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return The ISO8601 date/time that this environment was last updated at in UTC.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private ProjectEnvironmentState() {}

    private ProjectEnvironmentState(ProjectEnvironmentState $) {
        this.autoStopAt = $.autoStopAt;
        this.autoStopSetting = $.autoStopSetting;
        this.clusterAgentId = $.clusterAgentId;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.externalUrl = $.externalUrl;
        this.fluxResourcePath = $.fluxResourcePath;
        this.kubernetesNamespace = $.kubernetesNamespace;
        this.name = $.name;
        this.project = $.project;
        this.slug = $.slug;
        this.state = $.state;
        this.stopBeforeDestroy = $.stopBeforeDestroy;
        this.tier = $.tier;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectEnvironmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectEnvironmentState $;

        public Builder() {
            $ = new ProjectEnvironmentState();
        }

        public Builder(ProjectEnvironmentState defaults) {
            $ = new ProjectEnvironmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoStopAt The ISO8601 date/time that this environment will be automatically stopped at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder autoStopAt(@Nullable Output<String> autoStopAt) {
            $.autoStopAt = autoStopAt;
            return this;
        }

        /**
         * @param autoStopAt The ISO8601 date/time that this environment will be automatically stopped at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder autoStopAt(String autoStopAt) {
            return autoStopAt(Output.of(autoStopAt));
        }

        /**
         * @param autoStopSetting The auto stop setting for the environment. Allowed values are `always`, `with_action`. If this is set to `with_action` and `stop_before_destroy` is `true`, the environment will be force-stopped.
         * 
         * @return builder
         * 
         */
        public Builder autoStopSetting(@Nullable Output<String> autoStopSetting) {
            $.autoStopSetting = autoStopSetting;
            return this;
        }

        /**
         * @param autoStopSetting The auto stop setting for the environment. Allowed values are `always`, `with_action`. If this is set to `with_action` and `stop_before_destroy` is `true`, the environment will be force-stopped.
         * 
         * @return builder
         * 
         */
        public Builder autoStopSetting(String autoStopSetting) {
            return autoStopSetting(Output.of(autoStopSetting));
        }

        /**
         * @param clusterAgentId The cluster agent to associate with this environment.
         * 
         * @return builder
         * 
         */
        public Builder clusterAgentId(@Nullable Output<Integer> clusterAgentId) {
            $.clusterAgentId = clusterAgentId;
            return this;
        }

        /**
         * @param clusterAgentId The cluster agent to associate with this environment.
         * 
         * @return builder
         * 
         */
        public Builder clusterAgentId(Integer clusterAgentId) {
            return clusterAgentId(Output.of(clusterAgentId));
        }

        /**
         * @param createdAt The ISO8601 date/time that this environment was created at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The ISO8601 date/time that this environment was created at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description The description of the environment.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the environment.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param externalUrl Place to link to for this environment.
         * 
         * @return builder
         * 
         */
        public Builder externalUrl(@Nullable Output<String> externalUrl) {
            $.externalUrl = externalUrl;
            return this;
        }

        /**
         * @param externalUrl Place to link to for this environment.
         * 
         * @return builder
         * 
         */
        public Builder externalUrl(String externalUrl) {
            return externalUrl(Output.of(externalUrl));
        }

        /**
         * @param fluxResourcePath The Flux resource path to associate with this environment.
         * 
         * @return builder
         * 
         */
        public Builder fluxResourcePath(@Nullable Output<String> fluxResourcePath) {
            $.fluxResourcePath = fluxResourcePath;
            return this;
        }

        /**
         * @param fluxResourcePath The Flux resource path to associate with this environment.
         * 
         * @return builder
         * 
         */
        public Builder fluxResourcePath(String fluxResourcePath) {
            return fluxResourcePath(Output.of(fluxResourcePath));
        }

        /**
         * @param kubernetesNamespace The Kubernetes namespace to associate with this environment.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesNamespace(@Nullable Output<String> kubernetesNamespace) {
            $.kubernetesNamespace = kubernetesNamespace;
            return this;
        }

        /**
         * @param kubernetesNamespace The Kubernetes namespace to associate with this environment.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesNamespace(String kubernetesNamespace) {
            return kubernetesNamespace(Output.of(kubernetesNamespace));
        }

        /**
         * @param name The name of the environment.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the environment.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID or full path of the project to environment is created for.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID or full path of the project to environment is created for.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param slug The name of the environment in lowercase, shortened to 63 bytes, and with everything except 0-9 and a-z replaced with -. No leading / trailing -. Use in URLs, host names and domain names.
         * 
         * @return builder
         * 
         */
        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        /**
         * @param slug The name of the environment in lowercase, shortened to 63 bytes, and with everything except 0-9 and a-z replaced with -. No leading / trailing -. Use in URLs, host names and domain names.
         * 
         * @return builder
         * 
         */
        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        /**
         * @param state State the environment is in. Valid values are `available`, `stopped`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state State the environment is in. Valid values are `available`, `stopped`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param stopBeforeDestroy Determines whether the environment is attempted to be stopped before the environment is deleted. If `auto_stop_setting` is set to `with_action`, this will perform a force stop.
         * 
         * @return builder
         * 
         */
        public Builder stopBeforeDestroy(@Nullable Output<Boolean> stopBeforeDestroy) {
            $.stopBeforeDestroy = stopBeforeDestroy;
            return this;
        }

        /**
         * @param stopBeforeDestroy Determines whether the environment is attempted to be stopped before the environment is deleted. If `auto_stop_setting` is set to `with_action`, this will perform a force stop.
         * 
         * @return builder
         * 
         */
        public Builder stopBeforeDestroy(Boolean stopBeforeDestroy) {
            return stopBeforeDestroy(Output.of(stopBeforeDestroy));
        }

        /**
         * @param tier The tier of the new environment. Valid values are `production`, `staging`, `testing`, `development`, `other`.
         * 
         * @return builder
         * 
         */
        public Builder tier(@Nullable Output<String> tier) {
            $.tier = tier;
            return this;
        }

        /**
         * @param tier The tier of the new environment. Valid values are `production`, `staging`, `testing`, `development`, `other`.
         * 
         * @return builder
         * 
         */
        public Builder tier(String tier) {
            return tier(Output.of(tier));
        }

        /**
         * @param updatedAt The ISO8601 date/time that this environment was last updated at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt The ISO8601 date/time that this environment was last updated at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public ProjectEnvironmentState build() {
            return $;
        }
    }

}
