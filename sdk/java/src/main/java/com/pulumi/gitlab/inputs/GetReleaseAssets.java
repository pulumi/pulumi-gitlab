// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.inputs.GetReleaseAssetsLink;
import com.pulumi.gitlab.inputs.GetReleaseAssetsSource;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetReleaseAssets extends com.pulumi.resources.InvokeArgs {

    public static final GetReleaseAssets Empty = new GetReleaseAssets();

    /**
     * The number of assets for a release
     * 
     */
    @Import(name="count", required=true)
    private Integer count;

    /**
     * @return The number of assets for a release
     * 
     */
    public Integer count() {
        return this.count;
    }

    /**
     * The links for a release
     * 
     */
    @Import(name="links")
    private @Nullable List<GetReleaseAssetsLink> links;

    /**
     * @return The links for a release
     * 
     */
    public Optional<List<GetReleaseAssetsLink>> links() {
        return Optional.ofNullable(this.links);
    }

    /**
     * The sources for a release
     * 
     */
    @Import(name="sources")
    private @Nullable List<GetReleaseAssetsSource> sources;

    /**
     * @return The sources for a release
     * 
     */
    public Optional<List<GetReleaseAssetsSource>> sources() {
        return Optional.ofNullable(this.sources);
    }

    private GetReleaseAssets() {}

    private GetReleaseAssets(GetReleaseAssets $) {
        this.count = $.count;
        this.links = $.links;
        this.sources = $.sources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetReleaseAssets defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetReleaseAssets $;

        public Builder() {
            $ = new GetReleaseAssets();
        }

        public Builder(GetReleaseAssets defaults) {
            $ = new GetReleaseAssets(Objects.requireNonNull(defaults));
        }

        /**
         * @param count The number of assets for a release
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            $.count = count;
            return this;
        }

        /**
         * @param links The links for a release
         * 
         * @return builder
         * 
         */
        public Builder links(@Nullable List<GetReleaseAssetsLink> links) {
            $.links = links;
            return this;
        }

        /**
         * @param links The links for a release
         * 
         * @return builder
         * 
         */
        public Builder links(GetReleaseAssetsLink... links) {
            return links(List.of(links));
        }

        /**
         * @param sources The sources for a release
         * 
         * @return builder
         * 
         */
        public Builder sources(@Nullable List<GetReleaseAssetsSource> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources The sources for a release
         * 
         * @return builder
         * 
         */
        public Builder sources(GetReleaseAssetsSource... sources) {
            return sources(List.of(sources));
        }

        public GetReleaseAssets build() {
            if ($.count == null) {
                throw new MissingRequiredPropertyException("GetReleaseAssets", "count");
            }
            return $;
        }
    }

}
