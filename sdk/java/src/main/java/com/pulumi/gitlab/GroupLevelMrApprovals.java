// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gitlab.GroupLevelMrApprovalsArgs;
import com.pulumi.gitlab.Utilities;
import com.pulumi.gitlab.inputs.GroupLevelMrApprovalsState;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gitlab.Group;
 * import com.pulumi.gitlab.GroupArgs;
 * import com.pulumi.gitlab.GroupLevelMrApprovals;
 * import com.pulumi.gitlab.GroupLevelMrApprovalsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new Group("foo", GroupArgs.builder()
 *             .name("test_group")
 *             .path("test_group")
 *             .description("An example group")
 *             .build());
 * 
 *         var fooGroupLevelMrApprovals = new GroupLevelMrApprovals("fooGroupLevelMrApprovals", GroupLevelMrApprovalsArgs.builder()
 *             .group(foo.id())
 *             .allowAuthorApproval(true)
 *             .allowCommitterApproval(true)
 *             .allowOverridesToApproverListPerMergeRequest(true)
 *             .retainApprovalsOnPush(true)
 *             .selectiveCodeOwnerRemovals(false)
 *             .requireReauthenticationToApprove(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Starting in Terraform v1.5.0, you can use an import block to import `gitlab_group_level_mr_approvals`. For example:
 * 
 * terraform
 * 
 * import {
 * 
 *   to = gitlab_group_level_mr_approvals.example
 * 
 *   id = &#34;see CLI command below for ID&#34;
 * 
 * }
 * 
 * Importing using the CLI is supported with the following syntax:
 * 
 * ```sh
 * $ pulumi import gitlab:index/groupLevelMrApprovals:GroupLevelMrApprovals You can import an approval configuration state using `&lt;resource&gt; &lt;group_id&gt;`.
 * ```
 * 
 * For example:
 * 
 * ```sh
 * $ pulumi import gitlab:index/groupLevelMrApprovals:GroupLevelMrApprovals foo 1234
 * ```
 * 
 */
@ResourceType(type="gitlab:index/groupLevelMrApprovals:GroupLevelMrApprovals")
public class GroupLevelMrApprovals extends com.pulumi.resources.CustomResource {
    /**
     * Allow or prevent authors from self approving merge requests; `true` means authors can self approve.
     * 
     */
    @Export(name="allowAuthorApproval", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowAuthorApproval;

    /**
     * @return Allow or prevent authors from self approving merge requests; `true` means authors can self approve.
     * 
     */
    public Output<Boolean> allowAuthorApproval() {
        return this.allowAuthorApproval;
    }
    /**
     * Allow or prevent committers from self approving merge requests.
     * 
     */
    @Export(name="allowCommitterApproval", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowCommitterApproval;

    /**
     * @return Allow or prevent committers from self approving merge requests.
     * 
     */
    public Output<Boolean> allowCommitterApproval() {
        return this.allowCommitterApproval;
    }
    /**
     * Allow or prevent overriding approvers per merge request.
     * 
     */
    @Export(name="allowOverridesToApproverListPerMergeRequest", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> allowOverridesToApproverListPerMergeRequest;

    /**
     * @return Allow or prevent overriding approvers per merge request.
     * 
     */
    public Output<Boolean> allowOverridesToApproverListPerMergeRequest() {
        return this.allowOverridesToApproverListPerMergeRequest;
    }
    /**
     * The ID or URL-encoded path of the group.
     * 
     */
    @Export(name="group", refs={String.class}, tree="[0]")
    private Output<String> group;

    /**
     * @return The ID or URL-encoded path of the group.
     * 
     */
    public Output<String> group() {
        return this.group;
    }
    @Export(name="keepSettingsOnDestroy", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> keepSettingsOnDestroy;

    public Output<Boolean> keepSettingsOnDestroy() {
        return this.keepSettingsOnDestroy;
    }
    /**
     * Require approver to authenticate before adding the approval.
     * 
     */
    @Export(name="requireReauthenticationToApprove", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> requireReauthenticationToApprove;

    /**
     * @return Require approver to authenticate before adding the approval.
     * 
     */
    public Output<Boolean> requireReauthenticationToApprove() {
        return this.requireReauthenticationToApprove;
    }
    /**
     * Retain approval count on a new push.
     * 
     */
    @Export(name="retainApprovalsOnPush", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> retainApprovalsOnPush;

    /**
     * @return Retain approval count on a new push.
     * 
     */
    public Output<Boolean> retainApprovalsOnPush() {
        return this.retainApprovalsOnPush;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GroupLevelMrApprovals(java.lang.String name) {
        this(name, GroupLevelMrApprovalsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GroupLevelMrApprovals(java.lang.String name, GroupLevelMrApprovalsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GroupLevelMrApprovals(java.lang.String name, GroupLevelMrApprovalsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/groupLevelMrApprovals:GroupLevelMrApprovals", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GroupLevelMrApprovals(java.lang.String name, Output<java.lang.String> id, @Nullable GroupLevelMrApprovalsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/groupLevelMrApprovals:GroupLevelMrApprovals", name, state, makeResourceOptions(options, id), false);
    }

    private static GroupLevelMrApprovalsArgs makeArgs(GroupLevelMrApprovalsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GroupLevelMrApprovalsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GroupLevelMrApprovals get(java.lang.String name, Output<java.lang.String> id, @Nullable GroupLevelMrApprovalsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GroupLevelMrApprovals(name, id, state, options);
    }
}
