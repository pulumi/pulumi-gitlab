// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ProjectIntegrationExternalWikiArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectIntegrationExternalWikiArgs Empty = new ProjectIntegrationExternalWikiArgs();

    /**
     * The URL of the external wiki.
     * 
     */
    @Import(name="externalWikiUrl", required=true)
    private Output<String> externalWikiUrl;

    /**
     * @return The URL of the external wiki.
     * 
     */
    public Output<String> externalWikiUrl() {
        return this.externalWikiUrl;
    }

    /**
     * ID of the project you want to activate integration on.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return ID of the project you want to activate integration on.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private ProjectIntegrationExternalWikiArgs() {}

    private ProjectIntegrationExternalWikiArgs(ProjectIntegrationExternalWikiArgs $) {
        this.externalWikiUrl = $.externalWikiUrl;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectIntegrationExternalWikiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectIntegrationExternalWikiArgs $;

        public Builder() {
            $ = new ProjectIntegrationExternalWikiArgs();
        }

        public Builder(ProjectIntegrationExternalWikiArgs defaults) {
            $ = new ProjectIntegrationExternalWikiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalWikiUrl The URL of the external wiki.
         * 
         * @return builder
         * 
         */
        public Builder externalWikiUrl(Output<String> externalWikiUrl) {
            $.externalWikiUrl = externalWikiUrl;
            return this;
        }

        /**
         * @param externalWikiUrl The URL of the external wiki.
         * 
         * @return builder
         * 
         */
        public Builder externalWikiUrl(String externalWikiUrl) {
            return externalWikiUrl(Output.of(externalWikiUrl));
        }

        /**
         * @param project ID of the project you want to activate integration on.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project ID of the project you want to activate integration on.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ProjectIntegrationExternalWikiArgs build() {
            if ($.externalWikiUrl == null) {
                throw new MissingRequiredPropertyException("ProjectIntegrationExternalWikiArgs", "externalWikiUrl");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("ProjectIntegrationExternalWikiArgs", "project");
            }
            return $;
        }
    }

}
