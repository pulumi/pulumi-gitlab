// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MemberRoleState extends com.pulumi.resources.ResourceArgs {

    public static final MemberRoleState Empty = new MemberRoleState();

    /**
     * The base access level for the custom role. Valid values are: `DEVELOPER`, `GUEST`, `MAINTAINER`, `MINIMAL_ACCESS`, `OWNER`, `REPORTER`
     * 
     */
    @Import(name="baseAccessLevel")
    private @Nullable Output<String> baseAccessLevel;

    /**
     * @return The base access level for the custom role. Valid values are: `DEVELOPER`, `GUEST`, `MAINTAINER`, `MINIMAL_ACCESS`, `OWNER`, `REPORTER`
     * 
     */
    public Optional<Output<String>> baseAccessLevel() {
        return Optional.ofNullable(this.baseAccessLevel);
    }

    /**
     * Timestamp of when the member role was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Timestamp of when the member role was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Description for the member role.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description for the member role.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The Web UI path to edit the member role
     * 
     */
    @Import(name="editPath")
    private @Nullable Output<String> editPath;

    /**
     * @return The Web UI path to edit the member role
     * 
     */
    public Optional<Output<String>> editPath() {
        return Optional.ofNullable(this.editPath);
    }

    /**
     * All permissions enabled for the custom role. Valid values are: `ADMIN_CICD_VARIABLES`, `ADMIN_COMPLIANCE_FRAMEWORK`, `ADMIN_GROUP_MEMBER`, `ADMIN_INTEGRATIONS`, `ADMIN_MERGE_REQUEST`, `ADMIN_PROTECTED_BRANCH`, `ADMIN_PUSH_RULES`, `ADMIN_RUNNERS`, `ADMIN_TERRAFORM_STATE`, `ADMIN_VULNERABILITY`, `ADMIN_WEB_HOOK`, `ARCHIVE_PROJECT`, `MANAGE_DEPLOY_TOKENS`, `MANAGE_GROUP_ACCESS_TOKENS`, `MANAGE_MERGE_REQUEST_SETTINGS`, `MANAGE_PROJECT_ACCESS_TOKENS`, `MANAGE_SECURITY_POLICY_LINK`, `READ_ADMIN_CICD`, `READ_ADMIN_DASHBOARD`, `READ_CODE`, `READ_COMPLIANCE_DASHBOARD`, `READ_CRM_CONTACT`, `READ_DEPENDENCY`, `READ_RUNNERS`, `READ_VULNERABILITY`, `REMOVE_GROUP`, `REMOVE_PROJECT`
     * 
     */
    @Import(name="enabledPermissions")
    private @Nullable Output<List<String>> enabledPermissions;

    /**
     * @return All permissions enabled for the custom role. Valid values are: `ADMIN_CICD_VARIABLES`, `ADMIN_COMPLIANCE_FRAMEWORK`, `ADMIN_GROUP_MEMBER`, `ADMIN_INTEGRATIONS`, `ADMIN_MERGE_REQUEST`, `ADMIN_PROTECTED_BRANCH`, `ADMIN_PUSH_RULES`, `ADMIN_RUNNERS`, `ADMIN_TERRAFORM_STATE`, `ADMIN_VULNERABILITY`, `ADMIN_WEB_HOOK`, `ARCHIVE_PROJECT`, `MANAGE_DEPLOY_TOKENS`, `MANAGE_GROUP_ACCESS_TOKENS`, `MANAGE_MERGE_REQUEST_SETTINGS`, `MANAGE_PROJECT_ACCESS_TOKENS`, `MANAGE_SECURITY_POLICY_LINK`, `READ_ADMIN_CICD`, `READ_ADMIN_DASHBOARD`, `READ_CODE`, `READ_COMPLIANCE_DASHBOARD`, `READ_CRM_CONTACT`, `READ_DEPENDENCY`, `READ_RUNNERS`, `READ_VULNERABILITY`, `REMOVE_GROUP`, `REMOVE_PROJECT`
     * 
     */
    public Optional<Output<List<String>>> enabledPermissions() {
        return Optional.ofNullable(this.enabledPermissions);
    }

    /**
     * Full path of the namespace to create the member role in. **Required for SAAS** **Not allowed for self-managed**
     * 
     */
    @Import(name="groupPath")
    private @Nullable Output<String> groupPath;

    /**
     * @return Full path of the namespace to create the member role in. **Required for SAAS** **Not allowed for self-managed**
     * 
     */
    public Optional<Output<String>> groupPath() {
        return Optional.ofNullable(this.groupPath);
    }

    /**
     * The id integer value extracted from the `id` attribute
     * 
     */
    @Import(name="iid")
    private @Nullable Output<Integer> iid;

    /**
     * @return The id integer value extracted from the `id` attribute
     * 
     */
    public Optional<Output<Integer>> iid() {
        return Optional.ofNullable(this.iid);
    }

    /**
     * Name for the member role.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name for the member role.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private MemberRoleState() {}

    private MemberRoleState(MemberRoleState $) {
        this.baseAccessLevel = $.baseAccessLevel;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.editPath = $.editPath;
        this.enabledPermissions = $.enabledPermissions;
        this.groupPath = $.groupPath;
        this.iid = $.iid;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MemberRoleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MemberRoleState $;

        public Builder() {
            $ = new MemberRoleState();
        }

        public Builder(MemberRoleState defaults) {
            $ = new MemberRoleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseAccessLevel The base access level for the custom role. Valid values are: `DEVELOPER`, `GUEST`, `MAINTAINER`, `MINIMAL_ACCESS`, `OWNER`, `REPORTER`
         * 
         * @return builder
         * 
         */
        public Builder baseAccessLevel(@Nullable Output<String> baseAccessLevel) {
            $.baseAccessLevel = baseAccessLevel;
            return this;
        }

        /**
         * @param baseAccessLevel The base access level for the custom role. Valid values are: `DEVELOPER`, `GUEST`, `MAINTAINER`, `MINIMAL_ACCESS`, `OWNER`, `REPORTER`
         * 
         * @return builder
         * 
         */
        public Builder baseAccessLevel(String baseAccessLevel) {
            return baseAccessLevel(Output.of(baseAccessLevel));
        }

        /**
         * @param createdAt Timestamp of when the member role was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Timestamp of when the member role was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description Description for the member role.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description for the member role.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param editPath The Web UI path to edit the member role
         * 
         * @return builder
         * 
         */
        public Builder editPath(@Nullable Output<String> editPath) {
            $.editPath = editPath;
            return this;
        }

        /**
         * @param editPath The Web UI path to edit the member role
         * 
         * @return builder
         * 
         */
        public Builder editPath(String editPath) {
            return editPath(Output.of(editPath));
        }

        /**
         * @param enabledPermissions All permissions enabled for the custom role. Valid values are: `ADMIN_CICD_VARIABLES`, `ADMIN_COMPLIANCE_FRAMEWORK`, `ADMIN_GROUP_MEMBER`, `ADMIN_INTEGRATIONS`, `ADMIN_MERGE_REQUEST`, `ADMIN_PROTECTED_BRANCH`, `ADMIN_PUSH_RULES`, `ADMIN_RUNNERS`, `ADMIN_TERRAFORM_STATE`, `ADMIN_VULNERABILITY`, `ADMIN_WEB_HOOK`, `ARCHIVE_PROJECT`, `MANAGE_DEPLOY_TOKENS`, `MANAGE_GROUP_ACCESS_TOKENS`, `MANAGE_MERGE_REQUEST_SETTINGS`, `MANAGE_PROJECT_ACCESS_TOKENS`, `MANAGE_SECURITY_POLICY_LINK`, `READ_ADMIN_CICD`, `READ_ADMIN_DASHBOARD`, `READ_CODE`, `READ_COMPLIANCE_DASHBOARD`, `READ_CRM_CONTACT`, `READ_DEPENDENCY`, `READ_RUNNERS`, `READ_VULNERABILITY`, `REMOVE_GROUP`, `REMOVE_PROJECT`
         * 
         * @return builder
         * 
         */
        public Builder enabledPermissions(@Nullable Output<List<String>> enabledPermissions) {
            $.enabledPermissions = enabledPermissions;
            return this;
        }

        /**
         * @param enabledPermissions All permissions enabled for the custom role. Valid values are: `ADMIN_CICD_VARIABLES`, `ADMIN_COMPLIANCE_FRAMEWORK`, `ADMIN_GROUP_MEMBER`, `ADMIN_INTEGRATIONS`, `ADMIN_MERGE_REQUEST`, `ADMIN_PROTECTED_BRANCH`, `ADMIN_PUSH_RULES`, `ADMIN_RUNNERS`, `ADMIN_TERRAFORM_STATE`, `ADMIN_VULNERABILITY`, `ADMIN_WEB_HOOK`, `ARCHIVE_PROJECT`, `MANAGE_DEPLOY_TOKENS`, `MANAGE_GROUP_ACCESS_TOKENS`, `MANAGE_MERGE_REQUEST_SETTINGS`, `MANAGE_PROJECT_ACCESS_TOKENS`, `MANAGE_SECURITY_POLICY_LINK`, `READ_ADMIN_CICD`, `READ_ADMIN_DASHBOARD`, `READ_CODE`, `READ_COMPLIANCE_DASHBOARD`, `READ_CRM_CONTACT`, `READ_DEPENDENCY`, `READ_RUNNERS`, `READ_VULNERABILITY`, `REMOVE_GROUP`, `REMOVE_PROJECT`
         * 
         * @return builder
         * 
         */
        public Builder enabledPermissions(List<String> enabledPermissions) {
            return enabledPermissions(Output.of(enabledPermissions));
        }

        /**
         * @param enabledPermissions All permissions enabled for the custom role. Valid values are: `ADMIN_CICD_VARIABLES`, `ADMIN_COMPLIANCE_FRAMEWORK`, `ADMIN_GROUP_MEMBER`, `ADMIN_INTEGRATIONS`, `ADMIN_MERGE_REQUEST`, `ADMIN_PROTECTED_BRANCH`, `ADMIN_PUSH_RULES`, `ADMIN_RUNNERS`, `ADMIN_TERRAFORM_STATE`, `ADMIN_VULNERABILITY`, `ADMIN_WEB_HOOK`, `ARCHIVE_PROJECT`, `MANAGE_DEPLOY_TOKENS`, `MANAGE_GROUP_ACCESS_TOKENS`, `MANAGE_MERGE_REQUEST_SETTINGS`, `MANAGE_PROJECT_ACCESS_TOKENS`, `MANAGE_SECURITY_POLICY_LINK`, `READ_ADMIN_CICD`, `READ_ADMIN_DASHBOARD`, `READ_CODE`, `READ_COMPLIANCE_DASHBOARD`, `READ_CRM_CONTACT`, `READ_DEPENDENCY`, `READ_RUNNERS`, `READ_VULNERABILITY`, `REMOVE_GROUP`, `REMOVE_PROJECT`
         * 
         * @return builder
         * 
         */
        public Builder enabledPermissions(String... enabledPermissions) {
            return enabledPermissions(List.of(enabledPermissions));
        }

        /**
         * @param groupPath Full path of the namespace to create the member role in. **Required for SAAS** **Not allowed for self-managed**
         * 
         * @return builder
         * 
         */
        public Builder groupPath(@Nullable Output<String> groupPath) {
            $.groupPath = groupPath;
            return this;
        }

        /**
         * @param groupPath Full path of the namespace to create the member role in. **Required for SAAS** **Not allowed for self-managed**
         * 
         * @return builder
         * 
         */
        public Builder groupPath(String groupPath) {
            return groupPath(Output.of(groupPath));
        }

        /**
         * @param iid The id integer value extracted from the `id` attribute
         * 
         * @return builder
         * 
         */
        public Builder iid(@Nullable Output<Integer> iid) {
            $.iid = iid;
            return this;
        }

        /**
         * @param iid The id integer value extracted from the `id` attribute
         * 
         * @return builder
         * 
         */
        public Builder iid(Integer iid) {
            return iid(Output.of(iid));
        }

        /**
         * @param name Name for the member role.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name for the member role.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public MemberRoleState build() {
            return $;
        }
    }

}
