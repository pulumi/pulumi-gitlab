// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserSshkeysKey {
    private String createdAt;
    private String expiresAt;
    private String key;
    private Integer keyId;
    private String title;
    private Integer userId;

    private GetUserSshkeysKey() {}
    public String createdAt() {
        return this.createdAt;
    }
    public String expiresAt() {
        return this.expiresAt;
    }
    public String key() {
        return this.key;
    }
    public Integer keyId() {
        return this.keyId;
    }
    public String title() {
        return this.title;
    }
    public Integer userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserSshkeysKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private String expiresAt;
        private String key;
        private Integer keyId;
        private String title;
        private Integer userId;
        public Builder() {}
        public Builder(GetUserSshkeysKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.expiresAt = defaults.expiresAt;
    	      this.key = defaults.key;
    	      this.keyId = defaults.keyId;
    	      this.title = defaults.title;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetUserSshkeysKey", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder expiresAt(String expiresAt) {
            if (expiresAt == null) {
              throw new MissingRequiredPropertyException("GetUserSshkeysKey", "expiresAt");
            }
            this.expiresAt = expiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetUserSshkeysKey", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(Integer keyId) {
            if (keyId == null) {
              throw new MissingRequiredPropertyException("GetUserSshkeysKey", "keyId");
            }
            this.keyId = keyId;
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            if (title == null) {
              throw new MissingRequiredPropertyException("GetUserSshkeysKey", "title");
            }
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder userId(Integer userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetUserSshkeysKey", "userId");
            }
            this.userId = userId;
            return this;
        }
        public GetUserSshkeysKey build() {
            final var _resultValue = new GetUserSshkeysKey();
            _resultValue.createdAt = createdAt;
            _resultValue.expiresAt = expiresAt;
            _resultValue.key = key;
            _resultValue.keyId = keyId;
            _resultValue.title = title;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
