// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.inputs.GroupServiceAccountTimeoutsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupServiceAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupServiceAccountArgs Empty = new GroupServiceAccountArgs();

    /**
     * User account email. If not specified, generates an email prepended with `service_account_group_`. Custom email addresses require confirmation before the account is active, unless the group has a matching verified domain.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return User account email. If not specified, generates an email prepended with `service_account_group_`. Custom email addresses require confirmation before the account is active, unless the group has a matching verified domain.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * The ID or URL-encoded path of the group that the service account is created in. Must be a top level group.
     * 
     */
    @Import(name="group", required=true)
    private Output<String> group;

    /**
     * @return The ID or URL-encoded path of the group that the service account is created in. Must be a top level group.
     * 
     */
    public Output<String> group() {
        return this.group;
    }

    /**
     * The name of the user. If not specified, the default Service account user name is used.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the user. If not specified, the default Service account user name is used.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="timeouts")
    private @Nullable Output<GroupServiceAccountTimeoutsArgs> timeouts;

    public Optional<Output<GroupServiceAccountTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The username of the user. If not specified, it’s automatically generated.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return The username of the user. If not specified, it’s automatically generated.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private GroupServiceAccountArgs() {}

    private GroupServiceAccountArgs(GroupServiceAccountArgs $) {
        this.email = $.email;
        this.group = $.group;
        this.name = $.name;
        this.timeouts = $.timeouts;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupServiceAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupServiceAccountArgs $;

        public Builder() {
            $ = new GroupServiceAccountArgs();
        }

        public Builder(GroupServiceAccountArgs defaults) {
            $ = new GroupServiceAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param email User account email. If not specified, generates an email prepended with `service_account_group_`. Custom email addresses require confirmation before the account is active, unless the group has a matching verified domain.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email User account email. If not specified, generates an email prepended with `service_account_group_`. Custom email addresses require confirmation before the account is active, unless the group has a matching verified domain.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param group The ID or URL-encoded path of the group that the service account is created in. Must be a top level group.
         * 
         * @return builder
         * 
         */
        public Builder group(Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group The ID or URL-encoded path of the group that the service account is created in. Must be a top level group.
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param name The name of the user. If not specified, the default Service account user name is used.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the user. If not specified, the default Service account user name is used.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder timeouts(@Nullable Output<GroupServiceAccountTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(GroupServiceAccountTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param username The username of the user. If not specified, it’s automatically generated.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The username of the user. If not specified, it’s automatically generated.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public GroupServiceAccountArgs build() {
            if ($.group == null) {
                throw new MissingRequiredPropertyException("GroupServiceAccountArgs", "group");
            }
            return $;
        }
    }

}
