// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.inputs.ValueStreamAnalyticsStageArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ValueStreamAnalyticsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ValueStreamAnalyticsArgs Empty = new ValueStreamAnalyticsArgs();

    /**
     * Full path of the group the value stream is created in. **One of `group_full_path` OR `project_full_path` is required.**
     * 
     */
    @Import(name="groupFullPath")
    private @Nullable Output<String> groupFullPath;

    /**
     * @return Full path of the group the value stream is created in. **One of `group_full_path` OR `project_full_path` is required.**
     * 
     */
    public Optional<Output<String>> groupFullPath() {
        return Optional.ofNullable(this.groupFullPath);
    }

    /**
     * The name of the value stream
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the value stream
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Full path of the project the value stream is created in. **One of `group_full_path` OR `project_full_path` is required.**
     * 
     */
    @Import(name="projectFullPath")
    private @Nullable Output<String> projectFullPath;

    /**
     * @return Full path of the project the value stream is created in. **One of `group_full_path` OR `project_full_path` is required.**
     * 
     */
    public Optional<Output<String>> projectFullPath() {
        return Optional.ofNullable(this.projectFullPath);
    }

    /**
     * Stages of the value stream
     * 
     */
    @Import(name="stages", required=true)
    private Output<List<ValueStreamAnalyticsStageArgs>> stages;

    /**
     * @return Stages of the value stream
     * 
     */
    public Output<List<ValueStreamAnalyticsStageArgs>> stages() {
        return this.stages;
    }

    private ValueStreamAnalyticsArgs() {}

    private ValueStreamAnalyticsArgs(ValueStreamAnalyticsArgs $) {
        this.groupFullPath = $.groupFullPath;
        this.name = $.name;
        this.projectFullPath = $.projectFullPath;
        this.stages = $.stages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ValueStreamAnalyticsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ValueStreamAnalyticsArgs $;

        public Builder() {
            $ = new ValueStreamAnalyticsArgs();
        }

        public Builder(ValueStreamAnalyticsArgs defaults) {
            $ = new ValueStreamAnalyticsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupFullPath Full path of the group the value stream is created in. **One of `group_full_path` OR `project_full_path` is required.**
         * 
         * @return builder
         * 
         */
        public Builder groupFullPath(@Nullable Output<String> groupFullPath) {
            $.groupFullPath = groupFullPath;
            return this;
        }

        /**
         * @param groupFullPath Full path of the group the value stream is created in. **One of `group_full_path` OR `project_full_path` is required.**
         * 
         * @return builder
         * 
         */
        public Builder groupFullPath(String groupFullPath) {
            return groupFullPath(Output.of(groupFullPath));
        }

        /**
         * @param name The name of the value stream
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the value stream
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectFullPath Full path of the project the value stream is created in. **One of `group_full_path` OR `project_full_path` is required.**
         * 
         * @return builder
         * 
         */
        public Builder projectFullPath(@Nullable Output<String> projectFullPath) {
            $.projectFullPath = projectFullPath;
            return this;
        }

        /**
         * @param projectFullPath Full path of the project the value stream is created in. **One of `group_full_path` OR `project_full_path` is required.**
         * 
         * @return builder
         * 
         */
        public Builder projectFullPath(String projectFullPath) {
            return projectFullPath(Output.of(projectFullPath));
        }

        /**
         * @param stages Stages of the value stream
         * 
         * @return builder
         * 
         */
        public Builder stages(Output<List<ValueStreamAnalyticsStageArgs>> stages) {
            $.stages = stages;
            return this;
        }

        /**
         * @param stages Stages of the value stream
         * 
         * @return builder
         * 
         */
        public Builder stages(List<ValueStreamAnalyticsStageArgs> stages) {
            return stages(Output.of(stages));
        }

        /**
         * @param stages Stages of the value stream
         * 
         * @return builder
         * 
         */
        public Builder stages(ValueStreamAnalyticsStageArgs... stages) {
            return stages(List.of(stages));
        }

        public ValueStreamAnalyticsArgs build() {
            if ($.stages == null) {
                throw new MissingRequiredPropertyException("ValueStreamAnalyticsArgs", "stages");
            }
            return $;
        }
    }

}
