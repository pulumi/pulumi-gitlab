// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.outputs.GetReleaseAssetsLink;
import com.pulumi.gitlab.outputs.GetReleaseAssetsSource;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetReleaseAssets {
    /**
     * @return The number of assets for a release
     * 
     */
    private Integer count;
    /**
     * @return The links for a release
     * 
     */
    private @Nullable List<GetReleaseAssetsLink> links;
    /**
     * @return The sources for a release
     * 
     */
    private @Nullable List<GetReleaseAssetsSource> sources;

    private GetReleaseAssets() {}
    /**
     * @return The number of assets for a release
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return The links for a release
     * 
     */
    public List<GetReleaseAssetsLink> links() {
        return this.links == null ? List.of() : this.links;
    }
    /**
     * @return The sources for a release
     * 
     */
    public List<GetReleaseAssetsSource> sources() {
        return this.sources == null ? List.of() : this.sources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReleaseAssets defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer count;
        private @Nullable List<GetReleaseAssetsLink> links;
        private @Nullable List<GetReleaseAssetsSource> sources;
        public Builder() {}
        public Builder(GetReleaseAssets defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.links = defaults.links;
    	      this.sources = defaults.sources;
        }

        @CustomType.Setter
        public Builder count(Integer count) {
            if (count == null) {
              throw new MissingRequiredPropertyException("GetReleaseAssets", "count");
            }
            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder links(@Nullable List<GetReleaseAssetsLink> links) {

            this.links = links;
            return this;
        }
        public Builder links(GetReleaseAssetsLink... links) {
            return links(List.of(links));
        }
        @CustomType.Setter
        public Builder sources(@Nullable List<GetReleaseAssetsSource> sources) {

            this.sources = sources;
            return this;
        }
        public Builder sources(GetReleaseAssetsSource... sources) {
            return sources(List.of(sources));
        }
        public GetReleaseAssets build() {
            final var _resultValue = new GetReleaseAssets();
            _resultValue.count = count;
            _resultValue.links = links;
            _resultValue.sources = sources;
            return _resultValue;
        }
    }
}
