// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.outputs.GetPipelineSchedulesPipelineSchedule;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPipelineSchedulesResult {
    private String id;
    /**
     * @return The list of pipeline schedules.
     * 
     */
    private List<GetPipelineSchedulesPipelineSchedule> pipelineSchedules;
    /**
     * @return The name or id of the project to add the schedule to.
     * 
     */
    private String project;

    private GetPipelineSchedulesResult() {}
    public String id() {
        return this.id;
    }
    /**
     * @return The list of pipeline schedules.
     * 
     */
    public List<GetPipelineSchedulesPipelineSchedule> pipelineSchedules() {
        return this.pipelineSchedules;
    }
    /**
     * @return The name or id of the project to add the schedule to.
     * 
     */
    public String project() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineSchedulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetPipelineSchedulesPipelineSchedule> pipelineSchedules;
        private String project;
        public Builder() {}
        public Builder(GetPipelineSchedulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.pipelineSchedules = defaults.pipelineSchedules;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPipelineSchedulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineSchedules(List<GetPipelineSchedulesPipelineSchedule> pipelineSchedules) {
            if (pipelineSchedules == null) {
              throw new MissingRequiredPropertyException("GetPipelineSchedulesResult", "pipelineSchedules");
            }
            this.pipelineSchedules = pipelineSchedules;
            return this;
        }
        public Builder pipelineSchedules(GetPipelineSchedulesPipelineSchedule... pipelineSchedules) {
            return pipelineSchedules(List.of(pipelineSchedules));
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetPipelineSchedulesResult", "project");
            }
            this.project = project;
            return this;
        }
        public GetPipelineSchedulesResult build() {
            final var _resultValue = new GetPipelineSchedulesResult();
            _resultValue.id = id;
            _resultValue.pipelineSchedules = pipelineSchedules;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
