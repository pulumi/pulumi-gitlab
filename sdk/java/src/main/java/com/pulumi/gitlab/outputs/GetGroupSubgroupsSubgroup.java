// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetGroupSubgroupsSubgroup {
    private Boolean autoDevopsEnabled;
    private String avatarUrl;
    private String createdAt;
    private Integer defaultBranchProtection;
    private String description;
    private Boolean emailsEnabled;
    private Integer fileTemplateProjectId;
    private String fullName;
    private String fullPath;
    private Integer groupId;
    private String ipRestrictionRanges;
    private Boolean lfsEnabled;
    private Boolean mentionsDisabled;
    private String name;
    private Integer parentId;
    private String path;
    private String projectCreationLevel;
    private Boolean requestAccessEnabled;
    private Boolean requireTwoFactorAuthentication;
    private Boolean shareWithGroupLock;
    private String sharedRunnersSetting;
    private Map<String,String> statistics;
    private String subgroupCreationLevel;
    private Integer twoFactorGracePeriod;
    private String visibility;
    private String webUrl;
    private String wikiAccessLevel;

    private GetGroupSubgroupsSubgroup() {}
    public Boolean autoDevopsEnabled() {
        return this.autoDevopsEnabled;
    }
    public String avatarUrl() {
        return this.avatarUrl;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public Integer defaultBranchProtection() {
        return this.defaultBranchProtection;
    }
    public String description() {
        return this.description;
    }
    public Boolean emailsEnabled() {
        return this.emailsEnabled;
    }
    public Integer fileTemplateProjectId() {
        return this.fileTemplateProjectId;
    }
    public String fullName() {
        return this.fullName;
    }
    public String fullPath() {
        return this.fullPath;
    }
    public Integer groupId() {
        return this.groupId;
    }
    public String ipRestrictionRanges() {
        return this.ipRestrictionRanges;
    }
    public Boolean lfsEnabled() {
        return this.lfsEnabled;
    }
    public Boolean mentionsDisabled() {
        return this.mentionsDisabled;
    }
    public String name() {
        return this.name;
    }
    public Integer parentId() {
        return this.parentId;
    }
    public String path() {
        return this.path;
    }
    public String projectCreationLevel() {
        return this.projectCreationLevel;
    }
    public Boolean requestAccessEnabled() {
        return this.requestAccessEnabled;
    }
    public Boolean requireTwoFactorAuthentication() {
        return this.requireTwoFactorAuthentication;
    }
    public Boolean shareWithGroupLock() {
        return this.shareWithGroupLock;
    }
    public String sharedRunnersSetting() {
        return this.sharedRunnersSetting;
    }
    public Map<String,String> statistics() {
        return this.statistics;
    }
    public String subgroupCreationLevel() {
        return this.subgroupCreationLevel;
    }
    public Integer twoFactorGracePeriod() {
        return this.twoFactorGracePeriod;
    }
    public String visibility() {
        return this.visibility;
    }
    public String webUrl() {
        return this.webUrl;
    }
    public String wikiAccessLevel() {
        return this.wikiAccessLevel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupSubgroupsSubgroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoDevopsEnabled;
        private String avatarUrl;
        private String createdAt;
        private Integer defaultBranchProtection;
        private String description;
        private Boolean emailsEnabled;
        private Integer fileTemplateProjectId;
        private String fullName;
        private String fullPath;
        private Integer groupId;
        private String ipRestrictionRanges;
        private Boolean lfsEnabled;
        private Boolean mentionsDisabled;
        private String name;
        private Integer parentId;
        private String path;
        private String projectCreationLevel;
        private Boolean requestAccessEnabled;
        private Boolean requireTwoFactorAuthentication;
        private Boolean shareWithGroupLock;
        private String sharedRunnersSetting;
        private Map<String,String> statistics;
        private String subgroupCreationLevel;
        private Integer twoFactorGracePeriod;
        private String visibility;
        private String webUrl;
        private String wikiAccessLevel;
        public Builder() {}
        public Builder(GetGroupSubgroupsSubgroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoDevopsEnabled = defaults.autoDevopsEnabled;
    	      this.avatarUrl = defaults.avatarUrl;
    	      this.createdAt = defaults.createdAt;
    	      this.defaultBranchProtection = defaults.defaultBranchProtection;
    	      this.description = defaults.description;
    	      this.emailsEnabled = defaults.emailsEnabled;
    	      this.fileTemplateProjectId = defaults.fileTemplateProjectId;
    	      this.fullName = defaults.fullName;
    	      this.fullPath = defaults.fullPath;
    	      this.groupId = defaults.groupId;
    	      this.ipRestrictionRanges = defaults.ipRestrictionRanges;
    	      this.lfsEnabled = defaults.lfsEnabled;
    	      this.mentionsDisabled = defaults.mentionsDisabled;
    	      this.name = defaults.name;
    	      this.parentId = defaults.parentId;
    	      this.path = defaults.path;
    	      this.projectCreationLevel = defaults.projectCreationLevel;
    	      this.requestAccessEnabled = defaults.requestAccessEnabled;
    	      this.requireTwoFactorAuthentication = defaults.requireTwoFactorAuthentication;
    	      this.shareWithGroupLock = defaults.shareWithGroupLock;
    	      this.sharedRunnersSetting = defaults.sharedRunnersSetting;
    	      this.statistics = defaults.statistics;
    	      this.subgroupCreationLevel = defaults.subgroupCreationLevel;
    	      this.twoFactorGracePeriod = defaults.twoFactorGracePeriod;
    	      this.visibility = defaults.visibility;
    	      this.webUrl = defaults.webUrl;
    	      this.wikiAccessLevel = defaults.wikiAccessLevel;
        }

        @CustomType.Setter
        public Builder autoDevopsEnabled(Boolean autoDevopsEnabled) {
            if (autoDevopsEnabled == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "autoDevopsEnabled");
            }
            this.autoDevopsEnabled = autoDevopsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder avatarUrl(String avatarUrl) {
            if (avatarUrl == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "avatarUrl");
            }
            this.avatarUrl = avatarUrl;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder defaultBranchProtection(Integer defaultBranchProtection) {
            if (defaultBranchProtection == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "defaultBranchProtection");
            }
            this.defaultBranchProtection = defaultBranchProtection;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder emailsEnabled(Boolean emailsEnabled) {
            if (emailsEnabled == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "emailsEnabled");
            }
            this.emailsEnabled = emailsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder fileTemplateProjectId(Integer fileTemplateProjectId) {
            if (fileTemplateProjectId == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "fileTemplateProjectId");
            }
            this.fileTemplateProjectId = fileTemplateProjectId;
            return this;
        }
        @CustomType.Setter
        public Builder fullName(String fullName) {
            if (fullName == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "fullName");
            }
            this.fullName = fullName;
            return this;
        }
        @CustomType.Setter
        public Builder fullPath(String fullPath) {
            if (fullPath == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "fullPath");
            }
            this.fullPath = fullPath;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(Integer groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder ipRestrictionRanges(String ipRestrictionRanges) {
            if (ipRestrictionRanges == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "ipRestrictionRanges");
            }
            this.ipRestrictionRanges = ipRestrictionRanges;
            return this;
        }
        @CustomType.Setter
        public Builder lfsEnabled(Boolean lfsEnabled) {
            if (lfsEnabled == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "lfsEnabled");
            }
            this.lfsEnabled = lfsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder mentionsDisabled(Boolean mentionsDisabled) {
            if (mentionsDisabled == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "mentionsDisabled");
            }
            this.mentionsDisabled = mentionsDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parentId(Integer parentId) {
            if (parentId == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "parentId");
            }
            this.parentId = parentId;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder projectCreationLevel(String projectCreationLevel) {
            if (projectCreationLevel == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "projectCreationLevel");
            }
            this.projectCreationLevel = projectCreationLevel;
            return this;
        }
        @CustomType.Setter
        public Builder requestAccessEnabled(Boolean requestAccessEnabled) {
            if (requestAccessEnabled == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "requestAccessEnabled");
            }
            this.requestAccessEnabled = requestAccessEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder requireTwoFactorAuthentication(Boolean requireTwoFactorAuthentication) {
            if (requireTwoFactorAuthentication == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "requireTwoFactorAuthentication");
            }
            this.requireTwoFactorAuthentication = requireTwoFactorAuthentication;
            return this;
        }
        @CustomType.Setter
        public Builder shareWithGroupLock(Boolean shareWithGroupLock) {
            if (shareWithGroupLock == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "shareWithGroupLock");
            }
            this.shareWithGroupLock = shareWithGroupLock;
            return this;
        }
        @CustomType.Setter
        public Builder sharedRunnersSetting(String sharedRunnersSetting) {
            if (sharedRunnersSetting == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "sharedRunnersSetting");
            }
            this.sharedRunnersSetting = sharedRunnersSetting;
            return this;
        }
        @CustomType.Setter
        public Builder statistics(Map<String,String> statistics) {
            if (statistics == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "statistics");
            }
            this.statistics = statistics;
            return this;
        }
        @CustomType.Setter
        public Builder subgroupCreationLevel(String subgroupCreationLevel) {
            if (subgroupCreationLevel == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "subgroupCreationLevel");
            }
            this.subgroupCreationLevel = subgroupCreationLevel;
            return this;
        }
        @CustomType.Setter
        public Builder twoFactorGracePeriod(Integer twoFactorGracePeriod) {
            if (twoFactorGracePeriod == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "twoFactorGracePeriod");
            }
            this.twoFactorGracePeriod = twoFactorGracePeriod;
            return this;
        }
        @CustomType.Setter
        public Builder visibility(String visibility) {
            if (visibility == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "visibility");
            }
            this.visibility = visibility;
            return this;
        }
        @CustomType.Setter
        public Builder webUrl(String webUrl) {
            if (webUrl == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "webUrl");
            }
            this.webUrl = webUrl;
            return this;
        }
        @CustomType.Setter
        public Builder wikiAccessLevel(String wikiAccessLevel) {
            if (wikiAccessLevel == null) {
              throw new MissingRequiredPropertyException("GetGroupSubgroupsSubgroup", "wikiAccessLevel");
            }
            this.wikiAccessLevel = wikiAccessLevel;
            return this;
        }
        public GetGroupSubgroupsSubgroup build() {
            final var _resultValue = new GetGroupSubgroupsSubgroup();
            _resultValue.autoDevopsEnabled = autoDevopsEnabled;
            _resultValue.avatarUrl = avatarUrl;
            _resultValue.createdAt = createdAt;
            _resultValue.defaultBranchProtection = defaultBranchProtection;
            _resultValue.description = description;
            _resultValue.emailsEnabled = emailsEnabled;
            _resultValue.fileTemplateProjectId = fileTemplateProjectId;
            _resultValue.fullName = fullName;
            _resultValue.fullPath = fullPath;
            _resultValue.groupId = groupId;
            _resultValue.ipRestrictionRanges = ipRestrictionRanges;
            _resultValue.lfsEnabled = lfsEnabled;
            _resultValue.mentionsDisabled = mentionsDisabled;
            _resultValue.name = name;
            _resultValue.parentId = parentId;
            _resultValue.path = path;
            _resultValue.projectCreationLevel = projectCreationLevel;
            _resultValue.requestAccessEnabled = requestAccessEnabled;
            _resultValue.requireTwoFactorAuthentication = requireTwoFactorAuthentication;
            _resultValue.shareWithGroupLock = shareWithGroupLock;
            _resultValue.sharedRunnersSetting = sharedRunnersSetting;
            _resultValue.statistics = statistics;
            _resultValue.subgroupCreationLevel = subgroupCreationLevel;
            _resultValue.twoFactorGracePeriod = twoFactorGracePeriod;
            _resultValue.visibility = visibility;
            _resultValue.webUrl = webUrl;
            _resultValue.wikiAccessLevel = wikiAccessLevel;
            return _resultValue;
        }
    }
}
