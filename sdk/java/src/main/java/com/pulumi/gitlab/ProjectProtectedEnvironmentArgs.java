// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.inputs.ProjectProtectedEnvironmentApprovalRuleArgs;
import com.pulumi.gitlab.inputs.ProjectProtectedEnvironmentDeployAccessLevelArgs;
import com.pulumi.gitlab.inputs.ProjectProtectedEnvironmentDeployAccessLevelsAttributeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectProtectedEnvironmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectProtectedEnvironmentArgs Empty = new ProjectProtectedEnvironmentArgs();

    /**
     * Array of approval rules to deploy, with each described by a hash. Elements in the `approval_rules` should be one of `user_id`, `group_id` or `access_level`.
     * 
     */
    @Import(name="approvalRules")
    private @Nullable Output<List<ProjectProtectedEnvironmentApprovalRuleArgs>> approvalRules;

    /**
     * @return Array of approval rules to deploy, with each described by a hash. Elements in the `approval_rules` should be one of `user_id`, `group_id` or `access_level`.
     * 
     */
    public Optional<Output<List<ProjectProtectedEnvironmentApprovalRuleArgs>>> approvalRules() {
        return Optional.ofNullable(this.approvalRules);
    }

    /**
     * Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
     * 
     * @deprecated
     * This attribute is deprecated. Use `deploy_access_levels_attribute` instead.
     * 
     */
    @Deprecated /* This attribute is deprecated. Use `deploy_access_levels_attribute` instead. */
    @Import(name="deployAccessLevels")
    private @Nullable Output<List<ProjectProtectedEnvironmentDeployAccessLevelArgs>> deployAccessLevels;

    /**
     * @return Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
     * 
     * @deprecated
     * This attribute is deprecated. Use `deploy_access_levels_attribute` instead.
     * 
     */
    @Deprecated /* This attribute is deprecated. Use `deploy_access_levels_attribute` instead. */
    public Optional<Output<List<ProjectProtectedEnvironmentDeployAccessLevelArgs>>> deployAccessLevels() {
        return Optional.ofNullable(this.deployAccessLevels);
    }

    /**
     * Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
     * 
     */
    @Import(name="deployAccessLevelsAttributes")
    private @Nullable Output<List<ProjectProtectedEnvironmentDeployAccessLevelsAttributeArgs>> deployAccessLevelsAttributes;

    /**
     * @return Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
     * 
     */
    public Optional<Output<List<ProjectProtectedEnvironmentDeployAccessLevelsAttributeArgs>>> deployAccessLevelsAttributes() {
        return Optional.ofNullable(this.deployAccessLevelsAttributes);
    }

    /**
     * The name of the environment.
     * 
     */
    @Import(name="environment", required=true)
    private Output<String> environment;

    /**
     * @return The name of the environment.
     * 
     */
    public Output<String> environment() {
        return this.environment;
    }

    /**
     * The ID or full path of the project which the protected environment is created against.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The ID or full path of the project which the protected environment is created against.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private ProjectProtectedEnvironmentArgs() {}

    private ProjectProtectedEnvironmentArgs(ProjectProtectedEnvironmentArgs $) {
        this.approvalRules = $.approvalRules;
        this.deployAccessLevels = $.deployAccessLevels;
        this.deployAccessLevelsAttributes = $.deployAccessLevelsAttributes;
        this.environment = $.environment;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectProtectedEnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectProtectedEnvironmentArgs $;

        public Builder() {
            $ = new ProjectProtectedEnvironmentArgs();
        }

        public Builder(ProjectProtectedEnvironmentArgs defaults) {
            $ = new ProjectProtectedEnvironmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param approvalRules Array of approval rules to deploy, with each described by a hash. Elements in the `approval_rules` should be one of `user_id`, `group_id` or `access_level`.
         * 
         * @return builder
         * 
         */
        public Builder approvalRules(@Nullable Output<List<ProjectProtectedEnvironmentApprovalRuleArgs>> approvalRules) {
            $.approvalRules = approvalRules;
            return this;
        }

        /**
         * @param approvalRules Array of approval rules to deploy, with each described by a hash. Elements in the `approval_rules` should be one of `user_id`, `group_id` or `access_level`.
         * 
         * @return builder
         * 
         */
        public Builder approvalRules(List<ProjectProtectedEnvironmentApprovalRuleArgs> approvalRules) {
            return approvalRules(Output.of(approvalRules));
        }

        /**
         * @param approvalRules Array of approval rules to deploy, with each described by a hash. Elements in the `approval_rules` should be one of `user_id`, `group_id` or `access_level`.
         * 
         * @return builder
         * 
         */
        public Builder approvalRules(ProjectProtectedEnvironmentApprovalRuleArgs... approvalRules) {
            return approvalRules(List.of(approvalRules));
        }

        /**
         * @param deployAccessLevels Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated. Use `deploy_access_levels_attribute` instead.
         * 
         */
        @Deprecated /* This attribute is deprecated. Use `deploy_access_levels_attribute` instead. */
        public Builder deployAccessLevels(@Nullable Output<List<ProjectProtectedEnvironmentDeployAccessLevelArgs>> deployAccessLevels) {
            $.deployAccessLevels = deployAccessLevels;
            return this;
        }

        /**
         * @param deployAccessLevels Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated. Use `deploy_access_levels_attribute` instead.
         * 
         */
        @Deprecated /* This attribute is deprecated. Use `deploy_access_levels_attribute` instead. */
        public Builder deployAccessLevels(List<ProjectProtectedEnvironmentDeployAccessLevelArgs> deployAccessLevels) {
            return deployAccessLevels(Output.of(deployAccessLevels));
        }

        /**
         * @param deployAccessLevels Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute is deprecated. Use `deploy_access_levels_attribute` instead.
         * 
         */
        @Deprecated /* This attribute is deprecated. Use `deploy_access_levels_attribute` instead. */
        public Builder deployAccessLevels(ProjectProtectedEnvironmentDeployAccessLevelArgs... deployAccessLevels) {
            return deployAccessLevels(List.of(deployAccessLevels));
        }

        /**
         * @param deployAccessLevelsAttributes Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
         * 
         * @return builder
         * 
         */
        public Builder deployAccessLevelsAttributes(@Nullable Output<List<ProjectProtectedEnvironmentDeployAccessLevelsAttributeArgs>> deployAccessLevelsAttributes) {
            $.deployAccessLevelsAttributes = deployAccessLevelsAttributes;
            return this;
        }

        /**
         * @param deployAccessLevelsAttributes Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
         * 
         * @return builder
         * 
         */
        public Builder deployAccessLevelsAttributes(List<ProjectProtectedEnvironmentDeployAccessLevelsAttributeArgs> deployAccessLevelsAttributes) {
            return deployAccessLevelsAttributes(Output.of(deployAccessLevelsAttributes));
        }

        /**
         * @param deployAccessLevelsAttributes Array of access levels allowed to deploy, with each described by a hash.  Elements in the `deploy_access_levels` should be one of `user_id`, `group_id` or `access_level`.
         * 
         * @return builder
         * 
         */
        public Builder deployAccessLevelsAttributes(ProjectProtectedEnvironmentDeployAccessLevelsAttributeArgs... deployAccessLevelsAttributes) {
            return deployAccessLevelsAttributes(List.of(deployAccessLevelsAttributes));
        }

        /**
         * @param environment The name of the environment.
         * 
         * @return builder
         * 
         */
        public Builder environment(Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment The name of the environment.
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param project The ID or full path of the project which the protected environment is created against.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID or full path of the project which the protected environment is created against.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ProjectProtectedEnvironmentArgs build() {
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("ProjectProtectedEnvironmentArgs", "environment");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("ProjectProtectedEnvironmentArgs", "project");
            }
            return $;
        }
    }

}
