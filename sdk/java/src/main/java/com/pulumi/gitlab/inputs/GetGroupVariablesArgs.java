// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGroupVariablesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupVariablesArgs Empty = new GetGroupVariablesArgs();

    @Import(name="environmentScope")
    private @Nullable Output<String> environmentScope;

    public Optional<Output<String>> environmentScope() {
        return Optional.ofNullable(this.environmentScope);
    }

    @Import(name="group", required=true)
    private Output<String> group;

    public Output<String> group() {
        return this.group;
    }

    private GetGroupVariablesArgs() {}

    private GetGroupVariablesArgs(GetGroupVariablesArgs $) {
        this.environmentScope = $.environmentScope;
        this.group = $.group;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupVariablesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupVariablesArgs $;

        public Builder() {
            $ = new GetGroupVariablesArgs();
        }

        public Builder(GetGroupVariablesArgs defaults) {
            $ = new GetGroupVariablesArgs(Objects.requireNonNull(defaults));
        }

        public Builder environmentScope(@Nullable Output<String> environmentScope) {
            $.environmentScope = environmentScope;
            return this;
        }

        public Builder environmentScope(String environmentScope) {
            return environmentScope(Output.of(environmentScope));
        }

        public Builder group(Output<String> group) {
            $.group = group;
            return this;
        }

        public Builder group(String group) {
            return group(Output.of(group));
        }

        public GetGroupVariablesArgs build() {
            $.group = Objects.requireNonNull($.group, "expected parameter 'group' to be non-null");
            return $;
        }
    }

}
