// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.outputs.GetProjectBranchesBranchCommit;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProjectBranchesBranch {
    private Boolean canPush;
    private List<GetProjectBranchesBranchCommit> commits;
    private Boolean default_;
    private Boolean developersCanMerge;
    private Boolean developersCanPush;
    private Boolean merged;
    private String name;
    private Boolean protected_;
    private String webUrl;

    private GetProjectBranchesBranch() {}
    public Boolean canPush() {
        return this.canPush;
    }
    public List<GetProjectBranchesBranchCommit> commits() {
        return this.commits;
    }
    public Boolean default_() {
        return this.default_;
    }
    public Boolean developersCanMerge() {
        return this.developersCanMerge;
    }
    public Boolean developersCanPush() {
        return this.developersCanPush;
    }
    public Boolean merged() {
        return this.merged;
    }
    public String name() {
        return this.name;
    }
    public Boolean protected_() {
        return this.protected_;
    }
    public String webUrl() {
        return this.webUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectBranchesBranch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean canPush;
        private List<GetProjectBranchesBranchCommit> commits;
        private Boolean default_;
        private Boolean developersCanMerge;
        private Boolean developersCanPush;
        private Boolean merged;
        private String name;
        private Boolean protected_;
        private String webUrl;
        public Builder() {}
        public Builder(GetProjectBranchesBranch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.canPush = defaults.canPush;
    	      this.commits = defaults.commits;
    	      this.default_ = defaults.default_;
    	      this.developersCanMerge = defaults.developersCanMerge;
    	      this.developersCanPush = defaults.developersCanPush;
    	      this.merged = defaults.merged;
    	      this.name = defaults.name;
    	      this.protected_ = defaults.protected_;
    	      this.webUrl = defaults.webUrl;
        }

        @CustomType.Setter
        public Builder canPush(Boolean canPush) {
            if (canPush == null) {
              throw new MissingRequiredPropertyException("GetProjectBranchesBranch", "canPush");
            }
            this.canPush = canPush;
            return this;
        }
        @CustomType.Setter
        public Builder commits(List<GetProjectBranchesBranchCommit> commits) {
            if (commits == null) {
              throw new MissingRequiredPropertyException("GetProjectBranchesBranch", "commits");
            }
            this.commits = commits;
            return this;
        }
        public Builder commits(GetProjectBranchesBranchCommit... commits) {
            return commits(List.of(commits));
        }
        @CustomType.Setter("default")
        public Builder default_(Boolean default_) {
            if (default_ == null) {
              throw new MissingRequiredPropertyException("GetProjectBranchesBranch", "default_");
            }
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder developersCanMerge(Boolean developersCanMerge) {
            if (developersCanMerge == null) {
              throw new MissingRequiredPropertyException("GetProjectBranchesBranch", "developersCanMerge");
            }
            this.developersCanMerge = developersCanMerge;
            return this;
        }
        @CustomType.Setter
        public Builder developersCanPush(Boolean developersCanPush) {
            if (developersCanPush == null) {
              throw new MissingRequiredPropertyException("GetProjectBranchesBranch", "developersCanPush");
            }
            this.developersCanPush = developersCanPush;
            return this;
        }
        @CustomType.Setter
        public Builder merged(Boolean merged) {
            if (merged == null) {
              throw new MissingRequiredPropertyException("GetProjectBranchesBranch", "merged");
            }
            this.merged = merged;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetProjectBranchesBranch", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter("protected")
        public Builder protected_(Boolean protected_) {
            if (protected_ == null) {
              throw new MissingRequiredPropertyException("GetProjectBranchesBranch", "protected_");
            }
            this.protected_ = protected_;
            return this;
        }
        @CustomType.Setter
        public Builder webUrl(String webUrl) {
            if (webUrl == null) {
              throw new MissingRequiredPropertyException("GetProjectBranchesBranch", "webUrl");
            }
            this.webUrl = webUrl;
            return this;
        }
        public GetProjectBranchesBranch build() {
            final var _resultValue = new GetProjectBranchesBranch();
            _resultValue.canPush = canPush;
            _resultValue.commits = commits;
            _resultValue.default_ = default_;
            _resultValue.developersCanMerge = developersCanMerge;
            _resultValue.developersCanPush = developersCanPush;
            _resultValue.merged = merged;
            _resultValue.name = name;
            _resultValue.protected_ = protected_;
            _resultValue.webUrl = webUrl;
            return _resultValue;
        }
    }
}
