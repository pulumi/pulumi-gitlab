// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProjectIdsResult {
    private String id;
    /**
     * @return The ID or URL-encoded path of the project.
     * 
     */
    private String project;
    /**
     * @return The full path of the project.
     * 
     */
    private String projectFullPath;
    /**
     * @return The GraphQL ID of the project.
     * 
     */
    private String projectGraphqlId;
    /**
     * @return The ID of the project.
     * 
     */
    private String projectId;

    private GetProjectIdsResult() {}
    public String id() {
        return this.id;
    }
    /**
     * @return The ID or URL-encoded path of the project.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return The full path of the project.
     * 
     */
    public String projectFullPath() {
        return this.projectFullPath;
    }
    /**
     * @return The GraphQL ID of the project.
     * 
     */
    public String projectGraphqlId() {
        return this.projectGraphqlId;
    }
    /**
     * @return The ID of the project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectIdsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String project;
        private String projectFullPath;
        private String projectGraphqlId;
        private String projectId;
        public Builder() {}
        public Builder(GetProjectIdsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.project = defaults.project;
    	      this.projectFullPath = defaults.projectFullPath;
    	      this.projectGraphqlId = defaults.projectGraphqlId;
    	      this.projectId = defaults.projectId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProjectIdsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetProjectIdsResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder projectFullPath(String projectFullPath) {
            if (projectFullPath == null) {
              throw new MissingRequiredPropertyException("GetProjectIdsResult", "projectFullPath");
            }
            this.projectFullPath = projectFullPath;
            return this;
        }
        @CustomType.Setter
        public Builder projectGraphqlId(String projectGraphqlId) {
            if (projectGraphqlId == null) {
              throw new MissingRequiredPropertyException("GetProjectIdsResult", "projectGraphqlId");
            }
            this.projectGraphqlId = projectGraphqlId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetProjectIdsResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        public GetProjectIdsResult build() {
            final var _resultValue = new GetProjectIdsResult();
            _resultValue.id = id;
            _resultValue.project = project;
            _resultValue.projectFullPath = projectFullPath;
            _resultValue.projectGraphqlId = projectGraphqlId;
            _resultValue.projectId = projectId;
            return _resultValue;
        }
    }
}
