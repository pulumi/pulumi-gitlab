// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gitlab.ProjectPagesSettingsArgs;
import com.pulumi.gitlab.Utilities;
import com.pulumi.gitlab.inputs.ProjectPagesSettingsState;
import com.pulumi.gitlab.outputs.ProjectPagesSettingsDeployment;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ## Import
 * 
 * Starting in Terraform v1.5.0, you can use an import block to import `gitlab_project_pages_settings`. For example:
 * 
 * terraform
 * 
 * import {
 * 
 *   to = gitlab_project_pages_settings.example
 * 
 *   id = &#34;see CLI command below for ID&#34;
 * 
 * }
 * 
 * Importing using the CLI is supported with the following syntax:
 * 
 * Gitlab project pages settings can be imported using the project ID, for example:
 * 
 * ```sh
 * $ pulumi import gitlab:index/projectPagesSettings:ProjectPagesSettings example 12345
 * ```
 * 
 */
@ResourceType(type="gitlab:index/projectPagesSettings:ProjectPagesSettings")
public class ProjectPagesSettings extends com.pulumi.resources.CustomResource {
    /**
     * List of current active deployments.
     * 
     */
    @Export(name="deployments", refs={List.class,ProjectPagesSettingsDeployment.class}, tree="[0,1]")
    private Output<List<ProjectPagesSettingsDeployment>> deployments;

    /**
     * @return List of current active deployments.
     * 
     */
    public Output<List<ProjectPagesSettingsDeployment>> deployments() {
        return this.deployments;
    }
    /**
     * Boolean indicating if the project is set to force https. Requires `external_https` to be configured in the GitLab instance: https://docs.gitlab.com/administration/pages/#custom-domains-with-tls-support.
     * 
     */
    @Export(name="forceHttps", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> forceHttps;

    /**
     * @return Boolean indicating if the project is set to force https. Requires `external_https` to be configured in the GitLab instance: https://docs.gitlab.com/administration/pages/#custom-domains-with-tls-support.
     * 
     */
    public Output<Boolean> forceHttps() {
        return this.forceHttps;
    }
    /**
     * Boolean indicating if a unique domain is enabled.
     * 
     */
    @Export(name="isUniqueDomainEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isUniqueDomainEnabled;

    /**
     * @return Boolean indicating if a unique domain is enabled.
     * 
     */
    public Output<Boolean> isUniqueDomainEnabled() {
        return this.isUniqueDomainEnabled;
    }
    @Export(name="keepSettingsOnDestroy", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> keepSettingsOnDestroy;

    public Output<Boolean> keepSettingsOnDestroy() {
        return this.keepSettingsOnDestroy;
    }
    /**
     * The project ID or path.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The project ID or path.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The URL to access the project pages.
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The URL to access the project pages.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProjectPagesSettings(java.lang.String name) {
        this(name, ProjectPagesSettingsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProjectPagesSettings(java.lang.String name, ProjectPagesSettingsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProjectPagesSettings(java.lang.String name, ProjectPagesSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/projectPagesSettings:ProjectPagesSettings", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ProjectPagesSettings(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectPagesSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/projectPagesSettings:ProjectPagesSettings", name, state, makeResourceOptions(options, id), false);
    }

    private static ProjectPagesSettingsArgs makeArgs(ProjectPagesSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ProjectPagesSettingsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProjectPagesSettings get(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectPagesSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProjectPagesSettings(name, id, state, options);
    }
}
