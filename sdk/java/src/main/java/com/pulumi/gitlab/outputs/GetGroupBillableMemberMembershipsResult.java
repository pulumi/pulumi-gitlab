// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gitlab.outputs.GetGroupBillableMemberMembershipsMembership;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGroupBillableMemberMembershipsResult {
    /**
     * @return The ID of the group.
     * 
     */
    private String groupId;
    /**
     * @return The id of the data source. It will always be equal to the user_id
     * 
     */
    private String id;
    /**
     * @return group- and/or project-memberships of the user.
     * 
     */
    private List<GetGroupBillableMemberMembershipsMembership> memberships;
    /**
     * @return The ID of the user.
     * 
     */
    private Integer userId;

    private GetGroupBillableMemberMembershipsResult() {}
    /**
     * @return The ID of the group.
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The id of the data source. It will always be equal to the user_id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return group- and/or project-memberships of the user.
     * 
     */
    public List<GetGroupBillableMemberMembershipsMembership> memberships() {
        return this.memberships;
    }
    /**
     * @return The ID of the user.
     * 
     */
    public Integer userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupBillableMemberMembershipsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String groupId;
        private String id;
        private List<GetGroupBillableMemberMembershipsMembership> memberships;
        private Integer userId;
        public Builder() {}
        public Builder(GetGroupBillableMemberMembershipsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.memberships = defaults.memberships;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsResult", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder memberships(List<GetGroupBillableMemberMembershipsMembership> memberships) {
            if (memberships == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsResult", "memberships");
            }
            this.memberships = memberships;
            return this;
        }
        public Builder memberships(GetGroupBillableMemberMembershipsMembership... memberships) {
            return memberships(List.of(memberships));
        }
        @CustomType.Setter
        public Builder userId(Integer userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetGroupBillableMemberMembershipsResult", "userId");
            }
            this.userId = userId;
            return this;
        }
        public GetGroupBillableMemberMembershipsResult build() {
            final var _resultValue = new GetGroupBillableMemberMembershipsResult();
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.memberships = memberships;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
