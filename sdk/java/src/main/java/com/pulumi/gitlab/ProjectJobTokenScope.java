// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gitlab.ProjectJobTokenScopeArgs;
import com.pulumi.gitlab.Utilities;
import com.pulumi.gitlab.inputs.ProjectJobTokenScopeState;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * The `gitlab.ProjectJobTokenScope` resource allows to manage the CI/CD Job Token scope in a project.
 * Any projects added to the CI/CD Job Token scope outside of TF will be untouched by the resource.
 * 
 * &gt; Conflicts with the use of `gitlab.ProjectJobTokenScopes` when used on the same project. Use one or the other to ensure the desired state.
 * 
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/project_job_token_scopes.html)
 * 
 * ## Import
 * 
 * GitLab project job token scopes can be imported using an id made up of `projectId:targetProjectId`, e.g.
 * 
 * ```sh
 * $ pulumi import gitlab:index/projectJobTokenScope:ProjectJobTokenScope bar 123:321
 * ```
 * 
 */
@ResourceType(type="gitlab:index/projectJobTokenScope:ProjectJobTokenScope")
public class ProjectJobTokenScope extends com.pulumi.resources.CustomResource {
    /**
     * The ID or full path of the project.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID or full path of the project.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The ID of the project that is in the CI/CD job token inbound allowlist.
     * 
     */
    @Export(name="targetProjectId", refs={Integer.class}, tree="[0]")
    private Output<Integer> targetProjectId;

    /**
     * @return The ID of the project that is in the CI/CD job token inbound allowlist.
     * 
     */
    public Output<Integer> targetProjectId() {
        return this.targetProjectId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProjectJobTokenScope(String name) {
        this(name, ProjectJobTokenScopeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProjectJobTokenScope(String name, ProjectJobTokenScopeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProjectJobTokenScope(String name, ProjectJobTokenScopeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/projectJobTokenScope:ProjectJobTokenScope", name, args == null ? ProjectJobTokenScopeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ProjectJobTokenScope(String name, Output<String> id, @Nullable ProjectJobTokenScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/projectJobTokenScope:ProjectJobTokenScope", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProjectJobTokenScope get(String name, Output<String> id, @Nullable ProjectJobTokenScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProjectJobTokenScope(name, id, state, options);
    }
}
