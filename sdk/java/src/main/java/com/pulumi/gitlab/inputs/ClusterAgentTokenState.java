// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAgentTokenState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAgentTokenState Empty = new ClusterAgentTokenState();

    /**
     * The ID of the agent.
     * 
     */
    @Import(name="agentId")
    private @Nullable Output<Integer> agentId;

    /**
     * @return The ID of the agent.
     * 
     */
    public Optional<Output<Integer>> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * The ISO8601 datetime when the agent was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The ISO8601 datetime when the agent was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The ID of the user who created the agent.
     * 
     */
    @Import(name="createdByUserId")
    private @Nullable Output<Integer> createdByUserId;

    /**
     * @return The ID of the user who created the agent.
     * 
     */
    public Optional<Output<Integer>> createdByUserId() {
        return Optional.ofNullable(this.createdByUserId);
    }

    /**
     * The Description for the agent.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The Description for the agent.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The ISO8601 datetime when the token was last used.
     * 
     */
    @Import(name="lastUsedAt")
    private @Nullable Output<String> lastUsedAt;

    /**
     * @return The ISO8601 datetime when the token was last used.
     * 
     */
    public Optional<Output<String>> lastUsedAt() {
        return Optional.ofNullable(this.lastUsedAt);
    }

    /**
     * The Name of the agent.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name of the agent.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ID or full path of the project maintained by the authenticated user.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return ID or full path of the project maintained by the authenticated user.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The status of the token. Valid values are `active`, `revoked`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the token. Valid values are `active`, `revoked`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The secret token for the agent. The `token` is not available in imported resources.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return The secret token for the agent. The `token` is not available in imported resources.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    /**
     * The ID of the token.
     * 
     */
    @Import(name="tokenId")
    private @Nullable Output<Integer> tokenId;

    /**
     * @return The ID of the token.
     * 
     */
    public Optional<Output<Integer>> tokenId() {
        return Optional.ofNullable(this.tokenId);
    }

    private ClusterAgentTokenState() {}

    private ClusterAgentTokenState(ClusterAgentTokenState $) {
        this.agentId = $.agentId;
        this.createdAt = $.createdAt;
        this.createdByUserId = $.createdByUserId;
        this.description = $.description;
        this.lastUsedAt = $.lastUsedAt;
        this.name = $.name;
        this.project = $.project;
        this.status = $.status;
        this.token = $.token;
        this.tokenId = $.tokenId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAgentTokenState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAgentTokenState $;

        public Builder() {
            $ = new ClusterAgentTokenState();
        }

        public Builder(ClusterAgentTokenState defaults) {
            $ = new ClusterAgentTokenState(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId The ID of the agent.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable Output<Integer> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId The ID of the agent.
         * 
         * @return builder
         * 
         */
        public Builder agentId(Integer agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param createdAt The ISO8601 datetime when the agent was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The ISO8601 datetime when the agent was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param createdByUserId The ID of the user who created the agent.
         * 
         * @return builder
         * 
         */
        public Builder createdByUserId(@Nullable Output<Integer> createdByUserId) {
            $.createdByUserId = createdByUserId;
            return this;
        }

        /**
         * @param createdByUserId The ID of the user who created the agent.
         * 
         * @return builder
         * 
         */
        public Builder createdByUserId(Integer createdByUserId) {
            return createdByUserId(Output.of(createdByUserId));
        }

        /**
         * @param description The Description for the agent.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The Description for the agent.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param lastUsedAt The ISO8601 datetime when the token was last used.
         * 
         * @return builder
         * 
         */
        public Builder lastUsedAt(@Nullable Output<String> lastUsedAt) {
            $.lastUsedAt = lastUsedAt;
            return this;
        }

        /**
         * @param lastUsedAt The ISO8601 datetime when the token was last used.
         * 
         * @return builder
         * 
         */
        public Builder lastUsedAt(String lastUsedAt) {
            return lastUsedAt(Output.of(lastUsedAt));
        }

        /**
         * @param name The Name of the agent.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name of the agent.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project ID or full path of the project maintained by the authenticated user.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project ID or full path of the project maintained by the authenticated user.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param status The status of the token. Valid values are `active`, `revoked`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the token. Valid values are `active`, `revoked`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param token The secret token for the agent. The `token` is not available in imported resources.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The secret token for the agent. The `token` is not available in imported resources.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param tokenId The ID of the token.
         * 
         * @return builder
         * 
         */
        public Builder tokenId(@Nullable Output<Integer> tokenId) {
            $.tokenId = tokenId;
            return this;
        }

        /**
         * @param tokenId The ID of the token.
         * 
         * @return builder
         * 
         */
        public Builder tokenId(Integer tokenId) {
            return tokenId(Output.of(tokenId));
        }

        public ClusterAgentTokenState build() {
            return $;
        }
    }

}
