// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupDefaultBranchProtectionDefaultsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupDefaultBranchProtectionDefaultsArgs Empty = new GroupDefaultBranchProtectionDefaultsArgs();

    /**
     * Allow force push for all users with push access.
     * 
     */
    @Import(name="allowForcePush")
    private @Nullable Output<Boolean> allowForcePush;

    /**
     * @return Allow force push for all users with push access.
     * 
     */
    public Optional<Output<Boolean>> allowForcePush() {
        return Optional.ofNullable(this.allowForcePush);
    }

    /**
     * An array of access levels allowed to merge. Valid values are: `developer`, `maintainer`, `no one`.
     * 
     */
    @Import(name="allowedToMerges")
    private @Nullable Output<List<String>> allowedToMerges;

    /**
     * @return An array of access levels allowed to merge. Valid values are: `developer`, `maintainer`, `no one`.
     * 
     */
    public Optional<Output<List<String>>> allowedToMerges() {
        return Optional.ofNullable(this.allowedToMerges);
    }

    /**
     * An array of access levels allowed to push. Valid values are: `developer`, `maintainer`, `no one`.
     * 
     */
    @Import(name="allowedToPushes")
    private @Nullable Output<List<String>> allowedToPushes;

    /**
     * @return An array of access levels allowed to push. Valid values are: `developer`, `maintainer`, `no one`.
     * 
     */
    public Optional<Output<List<String>>> allowedToPushes() {
        return Optional.ofNullable(this.allowedToPushes);
    }

    /**
     * Allow developers to initial push.
     * 
     */
    @Import(name="developerCanInitialPush")
    private @Nullable Output<Boolean> developerCanInitialPush;

    /**
     * @return Allow developers to initial push.
     * 
     */
    public Optional<Output<Boolean>> developerCanInitialPush() {
        return Optional.ofNullable(this.developerCanInitialPush);
    }

    private GroupDefaultBranchProtectionDefaultsArgs() {}

    private GroupDefaultBranchProtectionDefaultsArgs(GroupDefaultBranchProtectionDefaultsArgs $) {
        this.allowForcePush = $.allowForcePush;
        this.allowedToMerges = $.allowedToMerges;
        this.allowedToPushes = $.allowedToPushes;
        this.developerCanInitialPush = $.developerCanInitialPush;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupDefaultBranchProtectionDefaultsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupDefaultBranchProtectionDefaultsArgs $;

        public Builder() {
            $ = new GroupDefaultBranchProtectionDefaultsArgs();
        }

        public Builder(GroupDefaultBranchProtectionDefaultsArgs defaults) {
            $ = new GroupDefaultBranchProtectionDefaultsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowForcePush Allow force push for all users with push access.
         * 
         * @return builder
         * 
         */
        public Builder allowForcePush(@Nullable Output<Boolean> allowForcePush) {
            $.allowForcePush = allowForcePush;
            return this;
        }

        /**
         * @param allowForcePush Allow force push for all users with push access.
         * 
         * @return builder
         * 
         */
        public Builder allowForcePush(Boolean allowForcePush) {
            return allowForcePush(Output.of(allowForcePush));
        }

        /**
         * @param allowedToMerges An array of access levels allowed to merge. Valid values are: `developer`, `maintainer`, `no one`.
         * 
         * @return builder
         * 
         */
        public Builder allowedToMerges(@Nullable Output<List<String>> allowedToMerges) {
            $.allowedToMerges = allowedToMerges;
            return this;
        }

        /**
         * @param allowedToMerges An array of access levels allowed to merge. Valid values are: `developer`, `maintainer`, `no one`.
         * 
         * @return builder
         * 
         */
        public Builder allowedToMerges(List<String> allowedToMerges) {
            return allowedToMerges(Output.of(allowedToMerges));
        }

        /**
         * @param allowedToMerges An array of access levels allowed to merge. Valid values are: `developer`, `maintainer`, `no one`.
         * 
         * @return builder
         * 
         */
        public Builder allowedToMerges(String... allowedToMerges) {
            return allowedToMerges(List.of(allowedToMerges));
        }

        /**
         * @param allowedToPushes An array of access levels allowed to push. Valid values are: `developer`, `maintainer`, `no one`.
         * 
         * @return builder
         * 
         */
        public Builder allowedToPushes(@Nullable Output<List<String>> allowedToPushes) {
            $.allowedToPushes = allowedToPushes;
            return this;
        }

        /**
         * @param allowedToPushes An array of access levels allowed to push. Valid values are: `developer`, `maintainer`, `no one`.
         * 
         * @return builder
         * 
         */
        public Builder allowedToPushes(List<String> allowedToPushes) {
            return allowedToPushes(Output.of(allowedToPushes));
        }

        /**
         * @param allowedToPushes An array of access levels allowed to push. Valid values are: `developer`, `maintainer`, `no one`.
         * 
         * @return builder
         * 
         */
        public Builder allowedToPushes(String... allowedToPushes) {
            return allowedToPushes(List.of(allowedToPushes));
        }

        /**
         * @param developerCanInitialPush Allow developers to initial push.
         * 
         * @return builder
         * 
         */
        public Builder developerCanInitialPush(@Nullable Output<Boolean> developerCanInitialPush) {
            $.developerCanInitialPush = developerCanInitialPush;
            return this;
        }

        /**
         * @param developerCanInitialPush Allow developers to initial push.
         * 
         * @return builder
         * 
         */
        public Builder developerCanInitialPush(Boolean developerCanInitialPush) {
            return developerCanInitialPush(Output.of(developerCanInitialPush));
        }

        public GroupDefaultBranchProtectionDefaultsArgs build() {
            return $;
        }
    }

}
