// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetGroupHookPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupHookPlainArgs Empty = new GetGroupHookPlainArgs();

    /**
     * The ID or full path of the group.
     * 
     */
    @Import(name="group", required=true)
    private String group;

    /**
     * @return The ID or full path of the group.
     * 
     */
    public String group() {
        return this.group;
    }

    /**
     * The id of the group hook.
     * 
     */
    @Import(name="hookId", required=true)
    private Integer hookId;

    /**
     * @return The id of the group hook.
     * 
     */
    public Integer hookId() {
        return this.hookId;
    }

    private GetGroupHookPlainArgs() {}

    private GetGroupHookPlainArgs(GetGroupHookPlainArgs $) {
        this.group = $.group;
        this.hookId = $.hookId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupHookPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupHookPlainArgs $;

        public Builder() {
            $ = new GetGroupHookPlainArgs();
        }

        public Builder(GetGroupHookPlainArgs defaults) {
            $ = new GetGroupHookPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param group The ID or full path of the group.
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            $.group = group;
            return this;
        }

        /**
         * @param hookId The id of the group hook.
         * 
         * @return builder
         * 
         */
        public Builder hookId(Integer hookId) {
            $.hookId = hookId;
            return this;
        }

        public GetGroupHookPlainArgs build() {
            if ($.group == null) {
                throw new MissingRequiredPropertyException("GetGroupHookPlainArgs", "group");
            }
            if ($.hookId == null) {
                throw new MissingRequiredPropertyException("GetGroupHookPlainArgs", "hookId");
            }
            return $;
        }
    }

}
