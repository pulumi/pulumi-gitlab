// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gitlab.UserIdentityArgs;
import com.pulumi.gitlab.Utilities;
import com.pulumi.gitlab.inputs.UserIdentityState;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * The `gitlab.UserIdentity` resource is for managing the lifecycle of a user&#39;s external identity.
 * 
 * &gt; the provider needs to be configured with admin-level access for this resource to work.
 * 
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/users/)
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gitlab.User;
 * import com.pulumi.gitlab.UserArgs;
 * import com.pulumi.gitlab.UserIdentity;
 * import com.pulumi.gitlab.UserIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var example = new User("example", UserArgs.builder()
 *             .name("Example Foo")
 *             .username("example")
 *             .email("gitlab}{@literal @}{@code user.create")
 *             .isAdmin(true)
 *             .projectsLimit(4)
 *             .canCreateGroup(false)
 *             .isExternal(true)
 *             .build());
 * 
 *         var exampleUserIdentity = new UserIdentity("exampleUserIdentity", UserIdentityArgs.builder()
 *             .userId(example.id())
 *             .externalProvider("google")
 *             .externalUid("1234567890")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Starting in Terraform v1.5.0, you can use an import block to import `gitlab_user_identity`. For example:
 * 
 * terraform
 * 
 * import {
 * 
 *   to = gitlab_user_identity.example
 * 
 *   id = &#34;see CLI command below for ID&#34;
 * 
 * }
 * 
 * Importing using the CLI is supported with the following syntax:
 * 
 * ```sh
 * $ pulumi import gitlab:index/userIdentity:UserIdentity You can import a user identity to terraform state using `&lt;resource&gt; &lt;id&gt;`.
 * ```
 * 
 * The `id` must be a string for the id of the user and identity provider you want to import,
 * 
 * for example:
 * 
 * ```sh
 * $ pulumi import gitlab:index/userIdentity:UserIdentity example &#34;42:google&#34;
 * ```
 * 
 */
@ResourceType(type="gitlab:index/userIdentity:UserIdentity")
public class UserIdentity extends com.pulumi.resources.CustomResource {
    /**
     * The external provider name.
     * 
     */
    @Export(name="externalProvider", refs={String.class}, tree="[0]")
    private Output<String> externalProvider;

    /**
     * @return The external provider name.
     * 
     */
    public Output<String> externalProvider() {
        return this.externalProvider;
    }
    /**
     * A specific external authentication provider UID.
     * 
     */
    @Export(name="externalUid", refs={String.class}, tree="[0]")
    private Output<String> externalUid;

    /**
     * @return A specific external authentication provider UID.
     * 
     */
    public Output<String> externalUid() {
        return this.externalUid;
    }
    /**
     * The GitLab ID of the user.
     * 
     */
    @Export(name="userId", refs={Integer.class}, tree="[0]")
    private Output<Integer> userId;

    /**
     * @return The GitLab ID of the user.
     * 
     */
    public Output<Integer> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserIdentity(java.lang.String name) {
        this(name, UserIdentityArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserIdentity(java.lang.String name, UserIdentityArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserIdentity(java.lang.String name, UserIdentityArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/userIdentity:UserIdentity", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private UserIdentity(java.lang.String name, Output<java.lang.String> id, @Nullable UserIdentityState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gitlab:index/userIdentity:UserIdentity", name, state, makeResourceOptions(options, id), false);
    }

    private static UserIdentityArgs makeArgs(UserIdentityArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? UserIdentityArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserIdentity get(java.lang.String name, Output<java.lang.String> id, @Nullable UserIdentityState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new UserIdentity(name, id, state, options);
    }
}
