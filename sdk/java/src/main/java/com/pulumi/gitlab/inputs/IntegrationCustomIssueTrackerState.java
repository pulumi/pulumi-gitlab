// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationCustomIssueTrackerState extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationCustomIssueTrackerState Empty = new IntegrationCustomIssueTrackerState();

    /**
     * Whether the integration is active.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Whether the integration is active.
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * The ISO8601 date/time that this integration was activated at in UTC.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The ISO8601 date/time that this integration was activated at in UTC.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The URL to view an issue in the external issue tracker. Must contain :id.
     * 
     */
    @Import(name="issuesUrl")
    private @Nullable Output<String> issuesUrl;

    /**
     * @return The URL to view an issue in the external issue tracker. Must contain :id.
     * 
     */
    public Optional<Output<String>> issuesUrl() {
        return Optional.ofNullable(this.issuesUrl);
    }

    /**
     * The ID or full path of the project for the custom issue tracker.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID or full path of the project for the custom issue tracker.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The URL to the project in the external issue tracker.
     * 
     */
    @Import(name="projectUrl")
    private @Nullable Output<String> projectUrl;

    /**
     * @return The URL to the project in the external issue tracker.
     * 
     */
    public Optional<Output<String>> projectUrl() {
        return Optional.ofNullable(this.projectUrl);
    }

    /**
     * The name of the integration in lowercase, shortened to 63 bytes, and with everything except 0-9 and a-z replaced with -. No leading / trailing -. Use in URLs, host names and domain names.
     * 
     */
    @Import(name="slug")
    private @Nullable Output<String> slug;

    /**
     * @return The name of the integration in lowercase, shortened to 63 bytes, and with everything except 0-9 and a-z replaced with -. No leading / trailing -. Use in URLs, host names and domain names.
     * 
     */
    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    /**
     * The ISO8601 date/time that this integration was last updated at in UTC.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return The ISO8601 date/time that this integration was last updated at in UTC.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private IntegrationCustomIssueTrackerState() {}

    private IntegrationCustomIssueTrackerState(IntegrationCustomIssueTrackerState $) {
        this.active = $.active;
        this.createdAt = $.createdAt;
        this.issuesUrl = $.issuesUrl;
        this.project = $.project;
        this.projectUrl = $.projectUrl;
        this.slug = $.slug;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationCustomIssueTrackerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationCustomIssueTrackerState $;

        public Builder() {
            $ = new IntegrationCustomIssueTrackerState();
        }

        public Builder(IntegrationCustomIssueTrackerState defaults) {
            $ = new IntegrationCustomIssueTrackerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Whether the integration is active.
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether the integration is active.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param createdAt The ISO8601 date/time that this integration was activated at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The ISO8601 date/time that this integration was activated at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param issuesUrl The URL to view an issue in the external issue tracker. Must contain :id.
         * 
         * @return builder
         * 
         */
        public Builder issuesUrl(@Nullable Output<String> issuesUrl) {
            $.issuesUrl = issuesUrl;
            return this;
        }

        /**
         * @param issuesUrl The URL to view an issue in the external issue tracker. Must contain :id.
         * 
         * @return builder
         * 
         */
        public Builder issuesUrl(String issuesUrl) {
            return issuesUrl(Output.of(issuesUrl));
        }

        /**
         * @param project The ID or full path of the project for the custom issue tracker.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID or full path of the project for the custom issue tracker.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param projectUrl The URL to the project in the external issue tracker.
         * 
         * @return builder
         * 
         */
        public Builder projectUrl(@Nullable Output<String> projectUrl) {
            $.projectUrl = projectUrl;
            return this;
        }

        /**
         * @param projectUrl The URL to the project in the external issue tracker.
         * 
         * @return builder
         * 
         */
        public Builder projectUrl(String projectUrl) {
            return projectUrl(Output.of(projectUrl));
        }

        /**
         * @param slug The name of the integration in lowercase, shortened to 63 bytes, and with everything except 0-9 and a-z replaced with -. No leading / trailing -. Use in URLs, host names and domain names.
         * 
         * @return builder
         * 
         */
        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        /**
         * @param slug The name of the integration in lowercase, shortened to 63 bytes, and with everything except 0-9 and a-z replaced with -. No leading / trailing -. Use in URLs, host names and domain names.
         * 
         * @return builder
         * 
         */
        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        /**
         * @param updatedAt The ISO8601 date/time that this integration was last updated at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt The ISO8601 date/time that this integration was last updated at in UTC.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public IntegrationCustomIssueTrackerState build() {
            return $;
        }
    }

}
