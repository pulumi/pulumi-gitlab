// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetProjectProtectedTagPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProjectProtectedTagPlainArgs Empty = new GetProjectProtectedTagPlainArgs();

    /**
     * The integer or path with namespace that uniquely identifies the project.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    /**
     * @return The integer or path with namespace that uniquely identifies the project.
     * 
     */
    public String project() {
        return this.project;
    }

    /**
     * The name of the protected tag.
     * 
     */
    @Import(name="tag", required=true)
    private String tag;

    /**
     * @return The name of the protected tag.
     * 
     */
    public String tag() {
        return this.tag;
    }

    private GetProjectProtectedTagPlainArgs() {}

    private GetProjectProtectedTagPlainArgs(GetProjectProtectedTagPlainArgs $) {
        this.project = $.project;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProjectProtectedTagPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProjectProtectedTagPlainArgs $;

        public Builder() {
            $ = new GetProjectProtectedTagPlainArgs();
        }

        public Builder(GetProjectProtectedTagPlainArgs defaults) {
            $ = new GetProjectProtectedTagPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The integer or path with namespace that uniquely identifies the project.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            $.project = project;
            return this;
        }

        /**
         * @param tag The name of the protected tag.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            $.tag = tag;
            return this;
        }

        public GetProjectProtectedTagPlainArgs build() {
            if ($.project == null) {
                throw new MissingRequiredPropertyException("GetProjectProtectedTagPlainArgs", "project");
            }
            if ($.tag == null) {
                throw new MissingRequiredPropertyException("GetProjectProtectedTagPlainArgs", "tag");
            }
            return $;
        }
    }

}
