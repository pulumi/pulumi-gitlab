// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `gitlab.getProjectIds` data source identification information for a given project, allowing a user to translate a full path or ID into the GraphQL ID of the project.
 *
 * **Upstream API**: [GitLab GraphQL API docs](https://docs.gitlab.com/api/graphql/reference/#queryproject)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * const newProject = new gitlab.Project("new_project", {});
 * // use project IDs to get additional information, such as the GraphQL ID
 * // for other resources
 * const foo = gitlab.getProjectIds({
 *     project: "gitlab_project.new_project.id",
 * });
 * export const graphQLId = foo.then(foo => foo.projectGraphqlId);
 * ```
 */
export function getProjectIds(args: GetProjectIdsArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectIdsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getProjectIds:getProjectIds", {
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectIds.
 */
export interface GetProjectIdsArgs {
    /**
     * The ID or URL-encoded path of the project.
     */
    project: string;
}

/**
 * A collection of values returned by getProjectIds.
 */
export interface GetProjectIdsResult {
    readonly id: string;
    /**
     * The ID or URL-encoded path of the project.
     */
    readonly project: string;
    /**
     * The full path of the project.
     */
    readonly projectFullPath: string;
    /**
     * The GraphQL ID of the project.
     */
    readonly projectGraphqlId: string;
    /**
     * The ID of the project.
     */
    readonly projectId: string;
}
/**
 * The `gitlab.getProjectIds` data source identification information for a given project, allowing a user to translate a full path or ID into the GraphQL ID of the project.
 *
 * **Upstream API**: [GitLab GraphQL API docs](https://docs.gitlab.com/api/graphql/reference/#queryproject)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * const newProject = new gitlab.Project("new_project", {});
 * // use project IDs to get additional information, such as the GraphQL ID
 * // for other resources
 * const foo = gitlab.getProjectIds({
 *     project: "gitlab_project.new_project.id",
 * });
 * export const graphQLId = foo.then(foo => foo.projectGraphqlId);
 * ```
 */
export function getProjectIdsOutput(args: GetProjectIdsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProjectIdsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gitlab:index/getProjectIds:getProjectIds", {
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectIds.
 */
export interface GetProjectIdsOutputArgs {
    /**
     * The ID or URL-encoded path of the project.
     */
    project: pulumi.Input<string>;
}
