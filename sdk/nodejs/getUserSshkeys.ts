// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `gitlab.getUserSshkeys` data source retrieves a list of SSH keys for a user.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/user_keys/#list-all-ssh-keys-for-a-user)
 */
export function getUserSshkeys(args?: GetUserSshkeysArgs, opts?: pulumi.InvokeOptions): Promise<GetUserSshkeysResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getUserSshkeys:getUserSshkeys", {
        "userId": args.userId,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserSshkeys.
 */
export interface GetUserSshkeysArgs {
    /**
     * ID of the user to get the SSH keys for.
     */
    userId?: number;
    /**
     * Username of the user to get the SSH keys for.
     */
    username?: string;
}

/**
 * A collection of values returned by getUserSshkeys.
 */
export interface GetUserSshkeysResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The user's keys.
     */
    readonly keys: outputs.GetUserSshkeysKey[];
    /**
     * ID of the user to get the SSH keys for.
     */
    readonly userId: number;
    /**
     * Username of the user to get the SSH keys for.
     */
    readonly username: string;
}
/**
 * The `gitlab.getUserSshkeys` data source retrieves a list of SSH keys for a user.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/user_keys/#list-all-ssh-keys-for-a-user)
 */
export function getUserSshkeysOutput(args?: GetUserSshkeysOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserSshkeysResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gitlab:index/getUserSshkeys:getUserSshkeys", {
        "userId": args.userId,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserSshkeys.
 */
export interface GetUserSshkeysOutputArgs {
    /**
     * ID of the user to get the SSH keys for.
     */
    userId?: pulumi.Input<number>;
    /**
     * Username of the user to get the SSH keys for.
     */
    username?: pulumi.Input<string>;
}
