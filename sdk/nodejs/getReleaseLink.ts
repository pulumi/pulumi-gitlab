// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `gitlab.ReleaseLink` data source allows you to get details of a release link.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/releases/links/)
 */
export function getReleaseLink(args: GetReleaseLinkArgs, opts?: pulumi.InvokeOptions): Promise<GetReleaseLinkResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getReleaseLink:getReleaseLink", {
        "linkId": args.linkId,
        "project": args.project,
        "tagName": args.tagName,
    }, opts);
}

/**
 * A collection of arguments for invoking getReleaseLink.
 */
export interface GetReleaseLinkArgs {
    /**
     * The ID of the link.
     */
    linkId: number;
    /**
     * The ID or [URL-encoded path of the project](https://docs.gitlab.com/api/index/#namespaced-path-encoding).
     */
    project: string;
    /**
     * The tag associated with the Release.
     */
    tagName: string;
}

/**
 * A collection of values returned by getReleaseLink.
 */
export interface GetReleaseLinkResult {
    /**
     * Full path for a [Direct Asset link](https://docs.gitlab.com/user/project/releases/index/#permanent-links-to-release-assets).
     */
    readonly directAssetUrl: string;
    /**
     * External or internal link.
     */
    readonly external: boolean;
    /**
     * Relative path for a [Direct Asset link](https://docs.gitlab.com/user/project/releases/index/#permanent-links-to-release-assets).
     */
    readonly filepath: string;
    /**
     * The ID of this data source.
     */
    readonly id: string;
    /**
     * The ID of the link.
     */
    readonly linkId: number;
    /**
     * The type of the link. Valid values are `other`, `runbook`, `image`, `package`.
     */
    readonly linkType: string;
    /**
     * The name of the link. Link names must be unique within the release.
     */
    readonly name: string;
    /**
     * The ID or [URL-encoded path of the project](https://docs.gitlab.com/api/index/#namespaced-path-encoding).
     */
    readonly project: string;
    /**
     * The tag associated with the Release.
     */
    readonly tagName: string;
    /**
     * The URL of the link. Link URLs must be unique within the release.
     */
    readonly url: string;
}
/**
 * The `gitlab.ReleaseLink` data source allows you to get details of a release link.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/releases/links/)
 */
export function getReleaseLinkOutput(args: GetReleaseLinkOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetReleaseLinkResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gitlab:index/getReleaseLink:getReleaseLink", {
        "linkId": args.linkId,
        "project": args.project,
        "tagName": args.tagName,
    }, opts);
}

/**
 * A collection of arguments for invoking getReleaseLink.
 */
export interface GetReleaseLinkOutputArgs {
    /**
     * The ID of the link.
     */
    linkId: pulumi.Input<number>;
    /**
     * The ID or [URL-encoded path of the project](https://docs.gitlab.com/api/index/#namespaced-path-encoding).
     */
    project: pulumi.Input<string>;
    /**
     * The tag associated with the Release.
     */
    tagName: pulumi.Input<string>;
}
