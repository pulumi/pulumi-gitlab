// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `gitlab.getProjectAccessTokens` data source allows to retrieve all project access tokens for a given project.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/project_access_tokens/)
 */
export function getProjectAccessTokens(args: GetProjectAccessTokensArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectAccessTokensResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getProjectAccessTokens:getProjectAccessTokens", {
        "project": args.project,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectAccessTokens.
 */
export interface GetProjectAccessTokensArgs {
    /**
     * The name or id of the project.
     */
    project: string;
    /**
     * List all project access token that match the specified state. Valid values are `active`, `inactive`. Returns all project access token if not set.
     */
    state?: string;
}

/**
 * A collection of values returned by getProjectAccessTokens.
 */
export interface GetProjectAccessTokensResult {
    /**
     * The list of access tokens returned by the search
     */
    readonly accessTokens: outputs.GetProjectAccessTokensAccessToken[];
    readonly id: string;
    /**
     * The name or id of the project.
     */
    readonly project: string;
    /**
     * List all project access token that match the specified state. Valid values are `active`, `inactive`. Returns all project access token if not set.
     */
    readonly state?: string;
}
/**
 * The `gitlab.getProjectAccessTokens` data source allows to retrieve all project access tokens for a given project.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/project_access_tokens/)
 */
export function getProjectAccessTokensOutput(args: GetProjectAccessTokensOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProjectAccessTokensResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gitlab:index/getProjectAccessTokens:getProjectAccessTokens", {
        "project": args.project,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectAccessTokens.
 */
export interface GetProjectAccessTokensOutputArgs {
    /**
     * The name or id of the project.
     */
    project: pulumi.Input<string>;
    /**
     * List all project access token that match the specified state. Valid values are `active`, `inactive`. Returns all project access token if not set.
     */
    state?: pulumi.Input<string>;
}
