// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `gitlab.getProjectProtectedTag` data source allows details of a protected tag to be retrieved by its name and the project it belongs to.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/protected_tags/#get-a-single-protected-tag-or-wildcard-protected-tag)
 */
export function getProjectProtectedTag(args: GetProjectProtectedTagArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectProtectedTagResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getProjectProtectedTag:getProjectProtectedTag", {
        "project": args.project,
        "tag": args.tag,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectProtectedTag.
 */
export interface GetProjectProtectedTagArgs {
    /**
     * The integer or path with namespace that uniquely identifies the project.
     */
    project: string;
    /**
     * The name of the protected tag.
     */
    tag: string;
}

/**
 * A collection of values returned by getProjectProtectedTag.
 */
export interface GetProjectProtectedTagResult {
    /**
     * Array of access levels/user(s)/group(s) allowed to create protected tags.
     */
    readonly createAccessLevels: outputs.GetProjectProtectedTagCreateAccessLevel[];
    /**
     * The ID of this resource. In the format of `<tag>`.
     */
    readonly id: string;
    /**
     * The integer or path with namespace that uniquely identifies the project.
     */
    readonly project: string;
    /**
     * The name of the protected tag.
     */
    readonly tag: string;
}
/**
 * The `gitlab.getProjectProtectedTag` data source allows details of a protected tag to be retrieved by its name and the project it belongs to.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/protected_tags/#get-a-single-protected-tag-or-wildcard-protected-tag)
 */
export function getProjectProtectedTagOutput(args: GetProjectProtectedTagOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProjectProtectedTagResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gitlab:index/getProjectProtectedTag:getProjectProtectedTag", {
        "project": args.project,
        "tag": args.tag,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectProtectedTag.
 */
export interface GetProjectProtectedTagOutputArgs {
    /**
     * The integer or path with namespace that uniquely identifies the project.
     */
    project: pulumi.Input<string>;
    /**
     * The name of the protected tag.
     */
    tag: pulumi.Input<string>;
}
