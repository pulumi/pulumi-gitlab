// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface BranchCommit {
    authorEmail?: pulumi.Input<string>;
    authorName?: pulumi.Input<string>;
    authoredDate?: pulumi.Input<string>;
    committedDate?: pulumi.Input<string>;
    committerEmail?: pulumi.Input<string>;
    committerName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    parentIds?: pulumi.Input<pulumi.Input<string>[]>;
    shortId?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
}

export interface BranchProtectionAllowedToMerge {
    accessLevel?: pulumi.Input<string>;
    accessLevelDescription?: pulumi.Input<string>;
    groupId?: pulumi.Input<number>;
    userId?: pulumi.Input<number>;
}

export interface BranchProtectionAllowedToPush {
    accessLevel?: pulumi.Input<string>;
    accessLevelDescription?: pulumi.Input<string>;
    groupId?: pulumi.Input<number>;
    userId?: pulumi.Input<number>;
}

export interface BranchProtectionAllowedToUnprotect {
    accessLevel?: pulumi.Input<string>;
    accessLevelDescription?: pulumi.Input<string>;
    groupId?: pulumi.Input<number>;
    userId?: pulumi.Input<number>;
}

export interface ProjectContainerExpirationPolicy {
    cadence?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    keepN?: pulumi.Input<number>;
    nameRegexDelete?: pulumi.Input<string>;
    nameRegexKeep?: pulumi.Input<string>;
    nextRunAt?: pulumi.Input<string>;
    olderThan?: pulumi.Input<string>;
}

export interface ProjectIssueTaskCompletionStatus {
    completedCount?: pulumi.Input<number>;
    count?: pulumi.Input<number>;
}

export interface ProjectProtectedEnvironmentDeployAccessLevels {
    accessLevel?: pulumi.Input<string>;
    accessLevelDescription?: pulumi.Input<string>;
    groupId?: pulumi.Input<number>;
    userId?: pulumi.Input<number>;
}

export interface ProjectPushRules {
    authorEmailRegex?: pulumi.Input<string>;
    branchNameRegex?: pulumi.Input<string>;
    commitCommitterCheck?: pulumi.Input<boolean>;
    commitMessageNegativeRegex?: pulumi.Input<string>;
    commitMessageRegex?: pulumi.Input<string>;
    denyDeleteTag?: pulumi.Input<boolean>;
    fileNameRegex?: pulumi.Input<string>;
    maxFileSize?: pulumi.Input<number>;
    memberCheck?: pulumi.Input<boolean>;
    preventSecrets?: pulumi.Input<boolean>;
    rejectUnsignedCommits?: pulumi.Input<boolean>;
}

export interface ProjectTagCommit {
    authorEmail?: pulumi.Input<string>;
    authorName?: pulumi.Input<string>;
    authoredDate?: pulumi.Input<string>;
    committedDate?: pulumi.Input<string>;
    committerEmail?: pulumi.Input<string>;
    committerName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    parentIds?: pulumi.Input<pulumi.Input<string>[]>;
    shortId?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
}

export interface ProjectTagRelease {
    description?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
}
