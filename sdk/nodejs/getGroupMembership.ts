// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## # gitlab\_group\_membership
 *
 * Provides details about a list of group members in the gitlab provider. The results include id, username, name and more about the requested members.
 *
 * ## Example Usage
 *
 * **By group's ID**
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * const example = pulumi.output(gitlab.getGroupMembership({
 *     groupId: 123,
 * }, { async: true }));
 * ```
 *
 * **By group's full path**
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * const example = pulumi.output(gitlab.getGroupMembership({
 *     fullPath: "foo/bar",
 * }, { async: true }));
 * ```
 */
export function getGroupMembership(args?: GetGroupMembershipArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupMembershipResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("gitlab:index/getGroupMembership:getGroupMembership", {
        "accessLevel": args.accessLevel,
        "fullPath": args.fullPath,
        "groupId": args.groupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroupMembership.
 */
export interface GetGroupMembershipArgs {
    /**
     * Only return members with the desidered access level. Acceptable values are: `guest`, `reporter`, `developer`, `maintainer`, `owner`.
     */
    readonly accessLevel?: string;
    /**
     * The full path of the group.
     */
    readonly fullPath?: string;
    /**
     * The ID of the group.
     */
    readonly groupId?: number;
}

/**
 * A collection of values returned by getGroupMembership.
 */
export interface GetGroupMembershipResult {
    /**
     * One of five levels of access to the group.
     */
    readonly accessLevel: string;
    readonly fullPath: string;
    readonly groupId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of group members.
     */
    readonly members: outputs.GetGroupMembershipMember[];
}
