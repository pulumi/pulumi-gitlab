// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * The `gitlab.Branch` data source allows details of a repository branch to be retrieved by its name and project.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/branches.html#get-single-repository-branch)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * // By project full path
 * const foo = pulumi.output(gitlab.getBranch({
 *     name: "example",
 *     project: "foo/bar",
 * }));
 * ```
 */
export function getBranch(args: GetBranchArgs, opts?: pulumi.InvokeOptions): Promise<GetBranchResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("gitlab:index/getBranch:getBranch", {
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getBranch.
 */
export interface GetBranchArgs {
    name: string;
    project: string;
}

/**
 * A collection of values returned by getBranch.
 */
export interface GetBranchResult {
    readonly canPush: boolean;
    readonly commits: outputs.GetBranchCommit[];
    readonly default: boolean;
    readonly developerCanMerge: boolean;
    readonly developerCanPush: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly merged: boolean;
    readonly name: string;
    readonly project: string;
    readonly protected: boolean;
    readonly webUrl: string;
}

export function getBranchOutput(args: GetBranchOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBranchResult> {
    return pulumi.output(args).apply(a => getBranch(a, opts))
}

/**
 * A collection of arguments for invoking getBranch.
 */
export interface GetBranchOutputArgs {
    name: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
