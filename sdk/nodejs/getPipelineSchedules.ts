// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `gitlab.PipelineSchedule` data source retrieves information about a gitlab pipeline schedule for a project.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/pipeline_schedules/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * const example = gitlab.getPipelineSchedules({
 *     project: "12345",
 * });
 * ```
 */
export function getPipelineSchedules(args: GetPipelineSchedulesArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineSchedulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getPipelineSchedules:getPipelineSchedules", {
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelineSchedules.
 */
export interface GetPipelineSchedulesArgs {
    /**
     * The name or id of the project to add the schedule to.
     */
    project: string;
}

/**
 * A collection of values returned by getPipelineSchedules.
 */
export interface GetPipelineSchedulesResult {
    readonly id: string;
    /**
     * The list of pipeline schedules.
     */
    readonly pipelineSchedules: outputs.GetPipelineSchedulesPipelineSchedule[];
    /**
     * The name or id of the project to add the schedule to.
     */
    readonly project: string;
}
/**
 * The `gitlab.PipelineSchedule` data source retrieves information about a gitlab pipeline schedule for a project.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/pipeline_schedules/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * const example = gitlab.getPipelineSchedules({
 *     project: "12345",
 * });
 * ```
 */
export function getPipelineSchedulesOutput(args: GetPipelineSchedulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPipelineSchedulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gitlab:index/getPipelineSchedules:getPipelineSchedules", {
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelineSchedules.
 */
export interface GetPipelineSchedulesOutputArgs {
    /**
     * The name or id of the project to add the schedule to.
     */
    project: pulumi.Input<string>;
}
