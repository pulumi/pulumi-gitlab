// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `gitlab.getProjectProtectedTags` data source allows details of the protected tags of a given project.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/protected_tags.html#list-protected-tags)
 */
export function getProjectProtectedTags(args: GetProjectProtectedTagsArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectProtectedTagsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getProjectProtectedTags:getProjectProtectedTags", {
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectProtectedTags.
 */
export interface GetProjectProtectedTagsArgs {
    /**
     * The integer or path with namespace that uniquely identifies the project.
     */
    project: string;
}

/**
 * A collection of values returned by getProjectProtectedTags.
 */
export interface GetProjectProtectedTagsResult {
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * The integer or path with namespace that uniquely identifies the project.
     */
    readonly project: string;
    /**
     * A list of protected tags, as defined below.
     */
    readonly protectedTags: outputs.GetProjectProtectedTagsProtectedTag[];
}
/**
 * The `gitlab.getProjectProtectedTags` data source allows details of the protected tags of a given project.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/protected_tags.html#list-protected-tags)
 */
export function getProjectProtectedTagsOutput(args: GetProjectProtectedTagsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectProtectedTagsResult> {
    return pulumi.output(args).apply((a: any) => getProjectProtectedTags(a, opts))
}

/**
 * A collection of arguments for invoking getProjectProtectedTags.
 */
export interface GetProjectProtectedTagsOutputArgs {
    /**
     * The integer or path with namespace that uniquely identifies the project.
     */
    project: pulumi.Input<string>;
}
