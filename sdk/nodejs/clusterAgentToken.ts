// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `gitlab.ClusterAgentToken` resource allows to manage the lifecycle of a token for a GitLab Agent for Kubernetes.
 *
 * > Requires at least maintainer permissions on the project.
 *
 * > Requires at least GitLab 15.0
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/cluster_agents.html#create-an-agent-token)
 *
 * ## Import
 *
 * A token for a GitLab Agent for Kubernetes can be imported with the following command and the id pattern `<project>:<agent-id>:<token-id>`
 *
 * ```sh
 *  $ pulumi import gitlab:index/clusterAgentToken:ClusterAgentToken example '12345:42:1'
 * ```
 *
 *  ATTENTIONthe `token` resource attribute is not available for imported resources as this information cannot be read from the GitLab API.
 */
export class ClusterAgentToken extends pulumi.CustomResource {
    /**
     * Get an existing ClusterAgentToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterAgentTokenState, opts?: pulumi.CustomResourceOptions): ClusterAgentToken {
        return new ClusterAgentToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gitlab:index/clusterAgentToken:ClusterAgentToken';

    /**
     * Returns true if the given object is an instance of ClusterAgentToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterAgentToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterAgentToken.__pulumiType;
    }

    /**
     * The ID of the agent.
     */
    public readonly agentId!: pulumi.Output<number>;
    /**
     * The ISO8601 datetime when the agent was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the user who created the agent.
     */
    public /*out*/ readonly createdByUserId!: pulumi.Output<number>;
    /**
     * The Description for the agent.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ISO8601 datetime when the token was last used.
     */
    public /*out*/ readonly lastUsedAt!: pulumi.Output<string>;
    /**
     * The Name of the agent.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * ID or full path of the project maintained by the authenticated user.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The status of the token. Valid values are `active`, `revoked`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The secret token for the agent. The `token` is not available in imported resources.
     */
    public /*out*/ readonly token!: pulumi.Output<string>;
    /**
     * The ID of the token.
     */
    public /*out*/ readonly tokenId!: pulumi.Output<number>;

    /**
     * Create a ClusterAgentToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterAgentTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterAgentTokenArgs | ClusterAgentTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterAgentTokenState | undefined;
            resourceInputs["agentId"] = state ? state.agentId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdByUserId"] = state ? state.createdByUserId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastUsedAt"] = state ? state.lastUsedAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
            resourceInputs["tokenId"] = state ? state.tokenId : undefined;
        } else {
            const args = argsOrState as ClusterAgentTokenArgs | undefined;
            if ((!args || args.agentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentId'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            resourceInputs["agentId"] = args ? args.agentId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdByUserId"] = undefined /*out*/;
            resourceInputs["lastUsedAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
            resourceInputs["tokenId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterAgentToken.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterAgentToken resources.
 */
export interface ClusterAgentTokenState {
    /**
     * The ID of the agent.
     */
    agentId?: pulumi.Input<number>;
    /**
     * The ISO8601 datetime when the agent was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The ID of the user who created the agent.
     */
    createdByUserId?: pulumi.Input<number>;
    /**
     * The Description for the agent.
     */
    description?: pulumi.Input<string>;
    /**
     * The ISO8601 datetime when the token was last used.
     */
    lastUsedAt?: pulumi.Input<string>;
    /**
     * The Name of the agent.
     */
    name?: pulumi.Input<string>;
    /**
     * ID or full path of the project maintained by the authenticated user.
     */
    project?: pulumi.Input<string>;
    /**
     * The status of the token. Valid values are `active`, `revoked`.
     */
    status?: pulumi.Input<string>;
    /**
     * The secret token for the agent. The `token` is not available in imported resources.
     */
    token?: pulumi.Input<string>;
    /**
     * The ID of the token.
     */
    tokenId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ClusterAgentToken resource.
 */
export interface ClusterAgentTokenArgs {
    /**
     * The ID of the agent.
     */
    agentId: pulumi.Input<number>;
    /**
     * The Description for the agent.
     */
    description?: pulumi.Input<string>;
    /**
     * The Name of the agent.
     */
    name?: pulumi.Input<string>;
    /**
     * ID or full path of the project maintained by the authenticated user.
     */
    project: pulumi.Input<string>;
}
