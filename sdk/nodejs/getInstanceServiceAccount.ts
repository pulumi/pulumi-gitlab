// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `gitlab.InstanceServiceAccount` data source retrieves information about a gitlab service account.
 *
 * > In order for a user to create a user account, they must have admin privileges at the instance level. This makes this feature unavailable on `gitlab.com`
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/user_service_accounts/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * const example = gitlab.getInstanceServiceAccount({
 *     serviceAccountId: "123",
 * });
 * ```
 */
export function getInstanceServiceAccount(args: GetInstanceServiceAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceServiceAccountResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getInstanceServiceAccount:getInstanceServiceAccount", {
        "serviceAccountId": args.serviceAccountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstanceServiceAccount.
 */
export interface GetInstanceServiceAccountArgs {
    /**
     * The service account id.
     */
    serviceAccountId: string;
}

/**
 * A collection of values returned by getInstanceServiceAccount.
 */
export interface GetInstanceServiceAccountResult {
    /**
     * The email of the user.
     */
    readonly email: string;
    readonly id: string;
    /**
     * The name of the user.
     */
    readonly name: string;
    /**
     * The service account id.
     */
    readonly serviceAccountId: string;
    /**
     * The username of the user.
     */
    readonly username: string;
}
/**
 * The `gitlab.InstanceServiceAccount` data source retrieves information about a gitlab service account.
 *
 * > In order for a user to create a user account, they must have admin privileges at the instance level. This makes this feature unavailable on `gitlab.com`
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/user_service_accounts/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * const example = gitlab.getInstanceServiceAccount({
 *     serviceAccountId: "123",
 * });
 * ```
 */
export function getInstanceServiceAccountOutput(args: GetInstanceServiceAccountOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInstanceServiceAccountResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gitlab:index/getInstanceServiceAccount:getInstanceServiceAccount", {
        "serviceAccountId": args.serviceAccountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstanceServiceAccount.
 */
export interface GetInstanceServiceAccountOutputArgs {
    /**
     * The service account id.
     */
    serviceAccountId: pulumi.Input<string>;
}
