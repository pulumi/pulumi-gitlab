// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gitlab

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `getUsers` data source allows details of multiple users to be retrieved given some optional filter criteria.
//
// > Some attributes might not be returned depending on if you're an admin or not.
//
// > Some available options require administrator privileges.
//
// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ce/api/users.html#list-users)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gitlab/sdk/v4/go/gitlab"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gitlab.GetUsers(ctx, &gitlab.GetUsersArgs{
//				CreatedBefore: pulumi.StringRef("2019-01-01"),
//				OrderBy:       pulumi.StringRef("name"),
//				Sort:          pulumi.StringRef("desc"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = gitlab.GetUsers(ctx, &gitlab.GetUsersArgs{
//				Search: pulumi.StringRef("username"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUsers(ctx *pulumi.Context, args *GetUsersArgs, opts ...pulumi.InvokeOption) (*GetUsersResult, error) {
	var rv GetUsersResult
	err := ctx.Invoke("gitlab:index/getUsers:getUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsers.
type GetUsersArgs struct {
	// Filter users that are active.
	Active *bool `pulumi:"active"`
	// Filter users that are blocked.
	Blocked *bool `pulumi:"blocked"`
	// Search for users created after a specific date. (Requires administrator privileges)
	CreatedAfter *string `pulumi:"createdAfter"`
	// Search for users created before a specific date. (Requires administrator privileges)
	CreatedBefore *string `pulumi:"createdBefore"`
	// Lookup users by external provider. (Requires administrator privileges)
	ExternProvider *string `pulumi:"externProvider"`
	// Lookup users by external UID. (Requires administrator privileges)
	ExternUid *string `pulumi:"externUid"`
	// Order the users' list by `id`, `name`, `username`, `createdAt` or `updatedAt`. (Requires administrator privileges)
	OrderBy *string `pulumi:"orderBy"`
	// Search users by username, name or email.
	Search *string `pulumi:"search"`
	// Sort users' list in asc or desc order. (Requires administrator privileges)
	Sort *string `pulumi:"sort"`
}

// A collection of values returned by getUsers.
type GetUsersResult struct {
	// Filter users that are active.
	Active *bool `pulumi:"active"`
	// Filter users that are blocked.
	Blocked *bool `pulumi:"blocked"`
	// Search for users created after a specific date. (Requires administrator privileges)
	CreatedAfter *string `pulumi:"createdAfter"`
	// Search for users created before a specific date. (Requires administrator privileges)
	CreatedBefore *string `pulumi:"createdBefore"`
	// Lookup users by external provider. (Requires administrator privileges)
	ExternProvider *string `pulumi:"externProvider"`
	// Lookup users by external UID. (Requires administrator privileges)
	ExternUid *string `pulumi:"externUid"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Order the users' list by `id`, `name`, `username`, `createdAt` or `updatedAt`. (Requires administrator privileges)
	OrderBy *string `pulumi:"orderBy"`
	// Search users by username, name or email.
	Search *string `pulumi:"search"`
	// Sort users' list in asc or desc order. (Requires administrator privileges)
	Sort *string `pulumi:"sort"`
	// The list of users.
	Users []GetUsersUser `pulumi:"users"`
}

func GetUsersOutput(ctx *pulumi.Context, args GetUsersOutputArgs, opts ...pulumi.InvokeOption) GetUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUsersResult, error) {
			args := v.(GetUsersArgs)
			r, err := GetUsers(ctx, &args, opts...)
			var s GetUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUsersResultOutput)
}

// A collection of arguments for invoking getUsers.
type GetUsersOutputArgs struct {
	// Filter users that are active.
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Filter users that are blocked.
	Blocked pulumi.BoolPtrInput `pulumi:"blocked"`
	// Search for users created after a specific date. (Requires administrator privileges)
	CreatedAfter pulumi.StringPtrInput `pulumi:"createdAfter"`
	// Search for users created before a specific date. (Requires administrator privileges)
	CreatedBefore pulumi.StringPtrInput `pulumi:"createdBefore"`
	// Lookup users by external provider. (Requires administrator privileges)
	ExternProvider pulumi.StringPtrInput `pulumi:"externProvider"`
	// Lookup users by external UID. (Requires administrator privileges)
	ExternUid pulumi.StringPtrInput `pulumi:"externUid"`
	// Order the users' list by `id`, `name`, `username`, `createdAt` or `updatedAt`. (Requires administrator privileges)
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// Search users by username, name or email.
	Search pulumi.StringPtrInput `pulumi:"search"`
	// Sort users' list in asc or desc order. (Requires administrator privileges)
	Sort pulumi.StringPtrInput `pulumi:"sort"`
}

func (GetUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersArgs)(nil)).Elem()
}

// A collection of values returned by getUsers.
type GetUsersResultOutput struct{ *pulumi.OutputState }

func (GetUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersResult)(nil)).Elem()
}

func (o GetUsersResultOutput) ToGetUsersResultOutput() GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) ToGetUsersResultOutputWithContext(ctx context.Context) GetUsersResultOutput {
	return o
}

// Filter users that are active.
func (o GetUsersResultOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Filter users that are blocked.
func (o GetUsersResultOutput) Blocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *bool { return v.Blocked }).(pulumi.BoolPtrOutput)
}

// Search for users created after a specific date. (Requires administrator privileges)
func (o GetUsersResultOutput) CreatedAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.CreatedAfter }).(pulumi.StringPtrOutput)
}

// Search for users created before a specific date. (Requires administrator privileges)
func (o GetUsersResultOutput) CreatedBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.CreatedBefore }).(pulumi.StringPtrOutput)
}

// Lookup users by external provider. (Requires administrator privileges)
func (o GetUsersResultOutput) ExternProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.ExternProvider }).(pulumi.StringPtrOutput)
}

// Lookup users by external UID. (Requires administrator privileges)
func (o GetUsersResultOutput) ExternUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.ExternUid }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

// Order the users' list by `id`, `name`, `username`, `createdAt` or `updatedAt`. (Requires administrator privileges)
func (o GetUsersResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

// Search users by username, name or email.
func (o GetUsersResultOutput) Search() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.Search }).(pulumi.StringPtrOutput)
}

// Sort users' list in asc or desc order. (Requires administrator privileges)
func (o GetUsersResultOutput) Sort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.Sort }).(pulumi.StringPtrOutput)
}

// The list of users.
func (o GetUsersResultOutput) Users() GetUsersUserArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []GetUsersUser { return v.Users }).(GetUsersUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsersResultOutput{})
}
