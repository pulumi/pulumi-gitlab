// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package gitlab

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BranchCommit struct {
	AuthorEmail    *string  `pulumi:"authorEmail"`
	AuthorName     *string  `pulumi:"authorName"`
	AuthoredDate   *string  `pulumi:"authoredDate"`
	CommittedDate  *string  `pulumi:"committedDate"`
	CommitterEmail *string  `pulumi:"committerEmail"`
	CommitterName  *string  `pulumi:"committerName"`
	Id             *string  `pulumi:"id"`
	Message        *string  `pulumi:"message"`
	ParentIds      []string `pulumi:"parentIds"`
	ShortId        *string  `pulumi:"shortId"`
	Title          *string  `pulumi:"title"`
}

// BranchCommitInput is an input type that accepts BranchCommitArgs and BranchCommitOutput values.
// You can construct a concrete instance of `BranchCommitInput` via:
//
//          BranchCommitArgs{...}
type BranchCommitInput interface {
	pulumi.Input

	ToBranchCommitOutput() BranchCommitOutput
	ToBranchCommitOutputWithContext(context.Context) BranchCommitOutput
}

type BranchCommitArgs struct {
	AuthorEmail    pulumi.StringPtrInput   `pulumi:"authorEmail"`
	AuthorName     pulumi.StringPtrInput   `pulumi:"authorName"`
	AuthoredDate   pulumi.StringPtrInput   `pulumi:"authoredDate"`
	CommittedDate  pulumi.StringPtrInput   `pulumi:"committedDate"`
	CommitterEmail pulumi.StringPtrInput   `pulumi:"committerEmail"`
	CommitterName  pulumi.StringPtrInput   `pulumi:"committerName"`
	Id             pulumi.StringPtrInput   `pulumi:"id"`
	Message        pulumi.StringPtrInput   `pulumi:"message"`
	ParentIds      pulumi.StringArrayInput `pulumi:"parentIds"`
	ShortId        pulumi.StringPtrInput   `pulumi:"shortId"`
	Title          pulumi.StringPtrInput   `pulumi:"title"`
}

func (BranchCommitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchCommit)(nil)).Elem()
}

func (i BranchCommitArgs) ToBranchCommitOutput() BranchCommitOutput {
	return i.ToBranchCommitOutputWithContext(context.Background())
}

func (i BranchCommitArgs) ToBranchCommitOutputWithContext(ctx context.Context) BranchCommitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchCommitOutput)
}

// BranchCommitArrayInput is an input type that accepts BranchCommitArray and BranchCommitArrayOutput values.
// You can construct a concrete instance of `BranchCommitArrayInput` via:
//
//          BranchCommitArray{ BranchCommitArgs{...} }
type BranchCommitArrayInput interface {
	pulumi.Input

	ToBranchCommitArrayOutput() BranchCommitArrayOutput
	ToBranchCommitArrayOutputWithContext(context.Context) BranchCommitArrayOutput
}

type BranchCommitArray []BranchCommitInput

func (BranchCommitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchCommit)(nil)).Elem()
}

func (i BranchCommitArray) ToBranchCommitArrayOutput() BranchCommitArrayOutput {
	return i.ToBranchCommitArrayOutputWithContext(context.Background())
}

func (i BranchCommitArray) ToBranchCommitArrayOutputWithContext(ctx context.Context) BranchCommitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchCommitArrayOutput)
}

type BranchCommitOutput struct{ *pulumi.OutputState }

func (BranchCommitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchCommit)(nil)).Elem()
}

func (o BranchCommitOutput) ToBranchCommitOutput() BranchCommitOutput {
	return o
}

func (o BranchCommitOutput) ToBranchCommitOutputWithContext(ctx context.Context) BranchCommitOutput {
	return o
}

func (o BranchCommitOutput) AuthorEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.AuthorEmail }).(pulumi.StringPtrOutput)
}

func (o BranchCommitOutput) AuthorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.AuthorName }).(pulumi.StringPtrOutput)
}

func (o BranchCommitOutput) AuthoredDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.AuthoredDate }).(pulumi.StringPtrOutput)
}

func (o BranchCommitOutput) CommittedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.CommittedDate }).(pulumi.StringPtrOutput)
}

func (o BranchCommitOutput) CommitterEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.CommitterEmail }).(pulumi.StringPtrOutput)
}

func (o BranchCommitOutput) CommitterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.CommitterName }).(pulumi.StringPtrOutput)
}

func (o BranchCommitOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o BranchCommitOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o BranchCommitOutput) ParentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BranchCommit) []string { return v.ParentIds }).(pulumi.StringArrayOutput)
}

func (o BranchCommitOutput) ShortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.ShortId }).(pulumi.StringPtrOutput)
}

func (o BranchCommitOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchCommit) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type BranchCommitArrayOutput struct{ *pulumi.OutputState }

func (BranchCommitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchCommit)(nil)).Elem()
}

func (o BranchCommitArrayOutput) ToBranchCommitArrayOutput() BranchCommitArrayOutput {
	return o
}

func (o BranchCommitArrayOutput) ToBranchCommitArrayOutputWithContext(ctx context.Context) BranchCommitArrayOutput {
	return o
}

func (o BranchCommitArrayOutput) Index(i pulumi.IntInput) BranchCommitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BranchCommit {
		return vs[0].([]BranchCommit)[vs[1].(int)]
	}).(BranchCommitOutput)
}

type BranchProtectionAllowedToMerge struct {
	AccessLevel            *string `pulumi:"accessLevel"`
	AccessLevelDescription *string `pulumi:"accessLevelDescription"`
	GroupId                *int    `pulumi:"groupId"`
	UserId                 *int    `pulumi:"userId"`
}

// BranchProtectionAllowedToMergeInput is an input type that accepts BranchProtectionAllowedToMergeArgs and BranchProtectionAllowedToMergeOutput values.
// You can construct a concrete instance of `BranchProtectionAllowedToMergeInput` via:
//
//          BranchProtectionAllowedToMergeArgs{...}
type BranchProtectionAllowedToMergeInput interface {
	pulumi.Input

	ToBranchProtectionAllowedToMergeOutput() BranchProtectionAllowedToMergeOutput
	ToBranchProtectionAllowedToMergeOutputWithContext(context.Context) BranchProtectionAllowedToMergeOutput
}

type BranchProtectionAllowedToMergeArgs struct {
	AccessLevel            pulumi.StringPtrInput `pulumi:"accessLevel"`
	AccessLevelDescription pulumi.StringPtrInput `pulumi:"accessLevelDescription"`
	GroupId                pulumi.IntPtrInput    `pulumi:"groupId"`
	UserId                 pulumi.IntPtrInput    `pulumi:"userId"`
}

func (BranchProtectionAllowedToMergeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionAllowedToMerge)(nil)).Elem()
}

func (i BranchProtectionAllowedToMergeArgs) ToBranchProtectionAllowedToMergeOutput() BranchProtectionAllowedToMergeOutput {
	return i.ToBranchProtectionAllowedToMergeOutputWithContext(context.Background())
}

func (i BranchProtectionAllowedToMergeArgs) ToBranchProtectionAllowedToMergeOutputWithContext(ctx context.Context) BranchProtectionAllowedToMergeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionAllowedToMergeOutput)
}

// BranchProtectionAllowedToMergeArrayInput is an input type that accepts BranchProtectionAllowedToMergeArray and BranchProtectionAllowedToMergeArrayOutput values.
// You can construct a concrete instance of `BranchProtectionAllowedToMergeArrayInput` via:
//
//          BranchProtectionAllowedToMergeArray{ BranchProtectionAllowedToMergeArgs{...} }
type BranchProtectionAllowedToMergeArrayInput interface {
	pulumi.Input

	ToBranchProtectionAllowedToMergeArrayOutput() BranchProtectionAllowedToMergeArrayOutput
	ToBranchProtectionAllowedToMergeArrayOutputWithContext(context.Context) BranchProtectionAllowedToMergeArrayOutput
}

type BranchProtectionAllowedToMergeArray []BranchProtectionAllowedToMergeInput

func (BranchProtectionAllowedToMergeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionAllowedToMerge)(nil)).Elem()
}

func (i BranchProtectionAllowedToMergeArray) ToBranchProtectionAllowedToMergeArrayOutput() BranchProtectionAllowedToMergeArrayOutput {
	return i.ToBranchProtectionAllowedToMergeArrayOutputWithContext(context.Background())
}

func (i BranchProtectionAllowedToMergeArray) ToBranchProtectionAllowedToMergeArrayOutputWithContext(ctx context.Context) BranchProtectionAllowedToMergeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionAllowedToMergeArrayOutput)
}

type BranchProtectionAllowedToMergeOutput struct{ *pulumi.OutputState }

func (BranchProtectionAllowedToMergeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionAllowedToMerge)(nil)).Elem()
}

func (o BranchProtectionAllowedToMergeOutput) ToBranchProtectionAllowedToMergeOutput() BranchProtectionAllowedToMergeOutput {
	return o
}

func (o BranchProtectionAllowedToMergeOutput) ToBranchProtectionAllowedToMergeOutputWithContext(ctx context.Context) BranchProtectionAllowedToMergeOutput {
	return o
}

func (o BranchProtectionAllowedToMergeOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToMerge) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o BranchProtectionAllowedToMergeOutput) AccessLevelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToMerge) *string { return v.AccessLevelDescription }).(pulumi.StringPtrOutput)
}

func (o BranchProtectionAllowedToMergeOutput) GroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToMerge) *int { return v.GroupId }).(pulumi.IntPtrOutput)
}

func (o BranchProtectionAllowedToMergeOutput) UserId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToMerge) *int { return v.UserId }).(pulumi.IntPtrOutput)
}

type BranchProtectionAllowedToMergeArrayOutput struct{ *pulumi.OutputState }

func (BranchProtectionAllowedToMergeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionAllowedToMerge)(nil)).Elem()
}

func (o BranchProtectionAllowedToMergeArrayOutput) ToBranchProtectionAllowedToMergeArrayOutput() BranchProtectionAllowedToMergeArrayOutput {
	return o
}

func (o BranchProtectionAllowedToMergeArrayOutput) ToBranchProtectionAllowedToMergeArrayOutputWithContext(ctx context.Context) BranchProtectionAllowedToMergeArrayOutput {
	return o
}

func (o BranchProtectionAllowedToMergeArrayOutput) Index(i pulumi.IntInput) BranchProtectionAllowedToMergeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BranchProtectionAllowedToMerge {
		return vs[0].([]BranchProtectionAllowedToMerge)[vs[1].(int)]
	}).(BranchProtectionAllowedToMergeOutput)
}

type BranchProtectionAllowedToPush struct {
	AccessLevel            *string `pulumi:"accessLevel"`
	AccessLevelDescription *string `pulumi:"accessLevelDescription"`
	GroupId                *int    `pulumi:"groupId"`
	UserId                 *int    `pulumi:"userId"`
}

// BranchProtectionAllowedToPushInput is an input type that accepts BranchProtectionAllowedToPushArgs and BranchProtectionAllowedToPushOutput values.
// You can construct a concrete instance of `BranchProtectionAllowedToPushInput` via:
//
//          BranchProtectionAllowedToPushArgs{...}
type BranchProtectionAllowedToPushInput interface {
	pulumi.Input

	ToBranchProtectionAllowedToPushOutput() BranchProtectionAllowedToPushOutput
	ToBranchProtectionAllowedToPushOutputWithContext(context.Context) BranchProtectionAllowedToPushOutput
}

type BranchProtectionAllowedToPushArgs struct {
	AccessLevel            pulumi.StringPtrInput `pulumi:"accessLevel"`
	AccessLevelDescription pulumi.StringPtrInput `pulumi:"accessLevelDescription"`
	GroupId                pulumi.IntPtrInput    `pulumi:"groupId"`
	UserId                 pulumi.IntPtrInput    `pulumi:"userId"`
}

func (BranchProtectionAllowedToPushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionAllowedToPush)(nil)).Elem()
}

func (i BranchProtectionAllowedToPushArgs) ToBranchProtectionAllowedToPushOutput() BranchProtectionAllowedToPushOutput {
	return i.ToBranchProtectionAllowedToPushOutputWithContext(context.Background())
}

func (i BranchProtectionAllowedToPushArgs) ToBranchProtectionAllowedToPushOutputWithContext(ctx context.Context) BranchProtectionAllowedToPushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionAllowedToPushOutput)
}

// BranchProtectionAllowedToPushArrayInput is an input type that accepts BranchProtectionAllowedToPushArray and BranchProtectionAllowedToPushArrayOutput values.
// You can construct a concrete instance of `BranchProtectionAllowedToPushArrayInput` via:
//
//          BranchProtectionAllowedToPushArray{ BranchProtectionAllowedToPushArgs{...} }
type BranchProtectionAllowedToPushArrayInput interface {
	pulumi.Input

	ToBranchProtectionAllowedToPushArrayOutput() BranchProtectionAllowedToPushArrayOutput
	ToBranchProtectionAllowedToPushArrayOutputWithContext(context.Context) BranchProtectionAllowedToPushArrayOutput
}

type BranchProtectionAllowedToPushArray []BranchProtectionAllowedToPushInput

func (BranchProtectionAllowedToPushArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionAllowedToPush)(nil)).Elem()
}

func (i BranchProtectionAllowedToPushArray) ToBranchProtectionAllowedToPushArrayOutput() BranchProtectionAllowedToPushArrayOutput {
	return i.ToBranchProtectionAllowedToPushArrayOutputWithContext(context.Background())
}

func (i BranchProtectionAllowedToPushArray) ToBranchProtectionAllowedToPushArrayOutputWithContext(ctx context.Context) BranchProtectionAllowedToPushArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionAllowedToPushArrayOutput)
}

type BranchProtectionAllowedToPushOutput struct{ *pulumi.OutputState }

func (BranchProtectionAllowedToPushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionAllowedToPush)(nil)).Elem()
}

func (o BranchProtectionAllowedToPushOutput) ToBranchProtectionAllowedToPushOutput() BranchProtectionAllowedToPushOutput {
	return o
}

func (o BranchProtectionAllowedToPushOutput) ToBranchProtectionAllowedToPushOutputWithContext(ctx context.Context) BranchProtectionAllowedToPushOutput {
	return o
}

func (o BranchProtectionAllowedToPushOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToPush) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o BranchProtectionAllowedToPushOutput) AccessLevelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToPush) *string { return v.AccessLevelDescription }).(pulumi.StringPtrOutput)
}

func (o BranchProtectionAllowedToPushOutput) GroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToPush) *int { return v.GroupId }).(pulumi.IntPtrOutput)
}

func (o BranchProtectionAllowedToPushOutput) UserId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToPush) *int { return v.UserId }).(pulumi.IntPtrOutput)
}

type BranchProtectionAllowedToPushArrayOutput struct{ *pulumi.OutputState }

func (BranchProtectionAllowedToPushArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionAllowedToPush)(nil)).Elem()
}

func (o BranchProtectionAllowedToPushArrayOutput) ToBranchProtectionAllowedToPushArrayOutput() BranchProtectionAllowedToPushArrayOutput {
	return o
}

func (o BranchProtectionAllowedToPushArrayOutput) ToBranchProtectionAllowedToPushArrayOutputWithContext(ctx context.Context) BranchProtectionAllowedToPushArrayOutput {
	return o
}

func (o BranchProtectionAllowedToPushArrayOutput) Index(i pulumi.IntInput) BranchProtectionAllowedToPushOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BranchProtectionAllowedToPush {
		return vs[0].([]BranchProtectionAllowedToPush)[vs[1].(int)]
	}).(BranchProtectionAllowedToPushOutput)
}

type BranchProtectionAllowedToUnprotect struct {
	AccessLevel            *string `pulumi:"accessLevel"`
	AccessLevelDescription *string `pulumi:"accessLevelDescription"`
	GroupId                *int    `pulumi:"groupId"`
	UserId                 *int    `pulumi:"userId"`
}

// BranchProtectionAllowedToUnprotectInput is an input type that accepts BranchProtectionAllowedToUnprotectArgs and BranchProtectionAllowedToUnprotectOutput values.
// You can construct a concrete instance of `BranchProtectionAllowedToUnprotectInput` via:
//
//          BranchProtectionAllowedToUnprotectArgs{...}
type BranchProtectionAllowedToUnprotectInput interface {
	pulumi.Input

	ToBranchProtectionAllowedToUnprotectOutput() BranchProtectionAllowedToUnprotectOutput
	ToBranchProtectionAllowedToUnprotectOutputWithContext(context.Context) BranchProtectionAllowedToUnprotectOutput
}

type BranchProtectionAllowedToUnprotectArgs struct {
	AccessLevel            pulumi.StringPtrInput `pulumi:"accessLevel"`
	AccessLevelDescription pulumi.StringPtrInput `pulumi:"accessLevelDescription"`
	GroupId                pulumi.IntPtrInput    `pulumi:"groupId"`
	UserId                 pulumi.IntPtrInput    `pulumi:"userId"`
}

func (BranchProtectionAllowedToUnprotectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionAllowedToUnprotect)(nil)).Elem()
}

func (i BranchProtectionAllowedToUnprotectArgs) ToBranchProtectionAllowedToUnprotectOutput() BranchProtectionAllowedToUnprotectOutput {
	return i.ToBranchProtectionAllowedToUnprotectOutputWithContext(context.Background())
}

func (i BranchProtectionAllowedToUnprotectArgs) ToBranchProtectionAllowedToUnprotectOutputWithContext(ctx context.Context) BranchProtectionAllowedToUnprotectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionAllowedToUnprotectOutput)
}

// BranchProtectionAllowedToUnprotectArrayInput is an input type that accepts BranchProtectionAllowedToUnprotectArray and BranchProtectionAllowedToUnprotectArrayOutput values.
// You can construct a concrete instance of `BranchProtectionAllowedToUnprotectArrayInput` via:
//
//          BranchProtectionAllowedToUnprotectArray{ BranchProtectionAllowedToUnprotectArgs{...} }
type BranchProtectionAllowedToUnprotectArrayInput interface {
	pulumi.Input

	ToBranchProtectionAllowedToUnprotectArrayOutput() BranchProtectionAllowedToUnprotectArrayOutput
	ToBranchProtectionAllowedToUnprotectArrayOutputWithContext(context.Context) BranchProtectionAllowedToUnprotectArrayOutput
}

type BranchProtectionAllowedToUnprotectArray []BranchProtectionAllowedToUnprotectInput

func (BranchProtectionAllowedToUnprotectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionAllowedToUnprotect)(nil)).Elem()
}

func (i BranchProtectionAllowedToUnprotectArray) ToBranchProtectionAllowedToUnprotectArrayOutput() BranchProtectionAllowedToUnprotectArrayOutput {
	return i.ToBranchProtectionAllowedToUnprotectArrayOutputWithContext(context.Background())
}

func (i BranchProtectionAllowedToUnprotectArray) ToBranchProtectionAllowedToUnprotectArrayOutputWithContext(ctx context.Context) BranchProtectionAllowedToUnprotectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchProtectionAllowedToUnprotectArrayOutput)
}

type BranchProtectionAllowedToUnprotectOutput struct{ *pulumi.OutputState }

func (BranchProtectionAllowedToUnprotectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchProtectionAllowedToUnprotect)(nil)).Elem()
}

func (o BranchProtectionAllowedToUnprotectOutput) ToBranchProtectionAllowedToUnprotectOutput() BranchProtectionAllowedToUnprotectOutput {
	return o
}

func (o BranchProtectionAllowedToUnprotectOutput) ToBranchProtectionAllowedToUnprotectOutputWithContext(ctx context.Context) BranchProtectionAllowedToUnprotectOutput {
	return o
}

func (o BranchProtectionAllowedToUnprotectOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToUnprotect) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o BranchProtectionAllowedToUnprotectOutput) AccessLevelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToUnprotect) *string { return v.AccessLevelDescription }).(pulumi.StringPtrOutput)
}

func (o BranchProtectionAllowedToUnprotectOutput) GroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToUnprotect) *int { return v.GroupId }).(pulumi.IntPtrOutput)
}

func (o BranchProtectionAllowedToUnprotectOutput) UserId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BranchProtectionAllowedToUnprotect) *int { return v.UserId }).(pulumi.IntPtrOutput)
}

type BranchProtectionAllowedToUnprotectArrayOutput struct{ *pulumi.OutputState }

func (BranchProtectionAllowedToUnprotectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchProtectionAllowedToUnprotect)(nil)).Elem()
}

func (o BranchProtectionAllowedToUnprotectArrayOutput) ToBranchProtectionAllowedToUnprotectArrayOutput() BranchProtectionAllowedToUnprotectArrayOutput {
	return o
}

func (o BranchProtectionAllowedToUnprotectArrayOutput) ToBranchProtectionAllowedToUnprotectArrayOutputWithContext(ctx context.Context) BranchProtectionAllowedToUnprotectArrayOutput {
	return o
}

func (o BranchProtectionAllowedToUnprotectArrayOutput) Index(i pulumi.IntInput) BranchProtectionAllowedToUnprotectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BranchProtectionAllowedToUnprotect {
		return vs[0].([]BranchProtectionAllowedToUnprotect)[vs[1].(int)]
	}).(BranchProtectionAllowedToUnprotectOutput)
}

type ProjectContainerExpirationPolicy struct {
	Cadence         *string `pulumi:"cadence"`
	Enabled         *bool   `pulumi:"enabled"`
	KeepN           *int    `pulumi:"keepN"`
	NameRegexDelete *string `pulumi:"nameRegexDelete"`
	NameRegexKeep   *string `pulumi:"nameRegexKeep"`
	NextRunAt       *string `pulumi:"nextRunAt"`
	OlderThan       *string `pulumi:"olderThan"`
}

// ProjectContainerExpirationPolicyInput is an input type that accepts ProjectContainerExpirationPolicyArgs and ProjectContainerExpirationPolicyOutput values.
// You can construct a concrete instance of `ProjectContainerExpirationPolicyInput` via:
//
//          ProjectContainerExpirationPolicyArgs{...}
type ProjectContainerExpirationPolicyInput interface {
	pulumi.Input

	ToProjectContainerExpirationPolicyOutput() ProjectContainerExpirationPolicyOutput
	ToProjectContainerExpirationPolicyOutputWithContext(context.Context) ProjectContainerExpirationPolicyOutput
}

type ProjectContainerExpirationPolicyArgs struct {
	Cadence         pulumi.StringPtrInput `pulumi:"cadence"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	KeepN           pulumi.IntPtrInput    `pulumi:"keepN"`
	NameRegexDelete pulumi.StringPtrInput `pulumi:"nameRegexDelete"`
	NameRegexKeep   pulumi.StringPtrInput `pulumi:"nameRegexKeep"`
	NextRunAt       pulumi.StringPtrInput `pulumi:"nextRunAt"`
	OlderThan       pulumi.StringPtrInput `pulumi:"olderThan"`
}

func (ProjectContainerExpirationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectContainerExpirationPolicy)(nil)).Elem()
}

func (i ProjectContainerExpirationPolicyArgs) ToProjectContainerExpirationPolicyOutput() ProjectContainerExpirationPolicyOutput {
	return i.ToProjectContainerExpirationPolicyOutputWithContext(context.Background())
}

func (i ProjectContainerExpirationPolicyArgs) ToProjectContainerExpirationPolicyOutputWithContext(ctx context.Context) ProjectContainerExpirationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectContainerExpirationPolicyOutput)
}

func (i ProjectContainerExpirationPolicyArgs) ToProjectContainerExpirationPolicyPtrOutput() ProjectContainerExpirationPolicyPtrOutput {
	return i.ToProjectContainerExpirationPolicyPtrOutputWithContext(context.Background())
}

func (i ProjectContainerExpirationPolicyArgs) ToProjectContainerExpirationPolicyPtrOutputWithContext(ctx context.Context) ProjectContainerExpirationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectContainerExpirationPolicyOutput).ToProjectContainerExpirationPolicyPtrOutputWithContext(ctx)
}

// ProjectContainerExpirationPolicyPtrInput is an input type that accepts ProjectContainerExpirationPolicyArgs, ProjectContainerExpirationPolicyPtr and ProjectContainerExpirationPolicyPtrOutput values.
// You can construct a concrete instance of `ProjectContainerExpirationPolicyPtrInput` via:
//
//          ProjectContainerExpirationPolicyArgs{...}
//
//  or:
//
//          nil
type ProjectContainerExpirationPolicyPtrInput interface {
	pulumi.Input

	ToProjectContainerExpirationPolicyPtrOutput() ProjectContainerExpirationPolicyPtrOutput
	ToProjectContainerExpirationPolicyPtrOutputWithContext(context.Context) ProjectContainerExpirationPolicyPtrOutput
}

type projectContainerExpirationPolicyPtrType ProjectContainerExpirationPolicyArgs

func ProjectContainerExpirationPolicyPtr(v *ProjectContainerExpirationPolicyArgs) ProjectContainerExpirationPolicyPtrInput {
	return (*projectContainerExpirationPolicyPtrType)(v)
}

func (*projectContainerExpirationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectContainerExpirationPolicy)(nil)).Elem()
}

func (i *projectContainerExpirationPolicyPtrType) ToProjectContainerExpirationPolicyPtrOutput() ProjectContainerExpirationPolicyPtrOutput {
	return i.ToProjectContainerExpirationPolicyPtrOutputWithContext(context.Background())
}

func (i *projectContainerExpirationPolicyPtrType) ToProjectContainerExpirationPolicyPtrOutputWithContext(ctx context.Context) ProjectContainerExpirationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectContainerExpirationPolicyPtrOutput)
}

type ProjectContainerExpirationPolicyOutput struct{ *pulumi.OutputState }

func (ProjectContainerExpirationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectContainerExpirationPolicy)(nil)).Elem()
}

func (o ProjectContainerExpirationPolicyOutput) ToProjectContainerExpirationPolicyOutput() ProjectContainerExpirationPolicyOutput {
	return o
}

func (o ProjectContainerExpirationPolicyOutput) ToProjectContainerExpirationPolicyOutputWithContext(ctx context.Context) ProjectContainerExpirationPolicyOutput {
	return o
}

func (o ProjectContainerExpirationPolicyOutput) ToProjectContainerExpirationPolicyPtrOutput() ProjectContainerExpirationPolicyPtrOutput {
	return o.ToProjectContainerExpirationPolicyPtrOutputWithContext(context.Background())
}

func (o ProjectContainerExpirationPolicyOutput) ToProjectContainerExpirationPolicyPtrOutputWithContext(ctx context.Context) ProjectContainerExpirationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectContainerExpirationPolicy) *ProjectContainerExpirationPolicy {
		return &v
	}).(ProjectContainerExpirationPolicyPtrOutput)
}

func (o ProjectContainerExpirationPolicyOutput) Cadence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectContainerExpirationPolicy) *string { return v.Cadence }).(pulumi.StringPtrOutput)
}

func (o ProjectContainerExpirationPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectContainerExpirationPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ProjectContainerExpirationPolicyOutput) KeepN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectContainerExpirationPolicy) *int { return v.KeepN }).(pulumi.IntPtrOutput)
}

func (o ProjectContainerExpirationPolicyOutput) NameRegexDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectContainerExpirationPolicy) *string { return v.NameRegexDelete }).(pulumi.StringPtrOutput)
}

func (o ProjectContainerExpirationPolicyOutput) NameRegexKeep() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectContainerExpirationPolicy) *string { return v.NameRegexKeep }).(pulumi.StringPtrOutput)
}

func (o ProjectContainerExpirationPolicyOutput) NextRunAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectContainerExpirationPolicy) *string { return v.NextRunAt }).(pulumi.StringPtrOutput)
}

func (o ProjectContainerExpirationPolicyOutput) OlderThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectContainerExpirationPolicy) *string { return v.OlderThan }).(pulumi.StringPtrOutput)
}

type ProjectContainerExpirationPolicyPtrOutput struct{ *pulumi.OutputState }

func (ProjectContainerExpirationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectContainerExpirationPolicy)(nil)).Elem()
}

func (o ProjectContainerExpirationPolicyPtrOutput) ToProjectContainerExpirationPolicyPtrOutput() ProjectContainerExpirationPolicyPtrOutput {
	return o
}

func (o ProjectContainerExpirationPolicyPtrOutput) ToProjectContainerExpirationPolicyPtrOutputWithContext(ctx context.Context) ProjectContainerExpirationPolicyPtrOutput {
	return o
}

func (o ProjectContainerExpirationPolicyPtrOutput) Elem() ProjectContainerExpirationPolicyOutput {
	return o.ApplyT(func(v *ProjectContainerExpirationPolicy) ProjectContainerExpirationPolicy {
		if v != nil {
			return *v
		}
		var ret ProjectContainerExpirationPolicy
		return ret
	}).(ProjectContainerExpirationPolicyOutput)
}

func (o ProjectContainerExpirationPolicyPtrOutput) Cadence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectContainerExpirationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Cadence
	}).(pulumi.StringPtrOutput)
}

func (o ProjectContainerExpirationPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectContainerExpirationPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectContainerExpirationPolicyPtrOutput) KeepN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectContainerExpirationPolicy) *int {
		if v == nil {
			return nil
		}
		return v.KeepN
	}).(pulumi.IntPtrOutput)
}

func (o ProjectContainerExpirationPolicyPtrOutput) NameRegexDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectContainerExpirationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.NameRegexDelete
	}).(pulumi.StringPtrOutput)
}

func (o ProjectContainerExpirationPolicyPtrOutput) NameRegexKeep() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectContainerExpirationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.NameRegexKeep
	}).(pulumi.StringPtrOutput)
}

func (o ProjectContainerExpirationPolicyPtrOutput) NextRunAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectContainerExpirationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.NextRunAt
	}).(pulumi.StringPtrOutput)
}

func (o ProjectContainerExpirationPolicyPtrOutput) OlderThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectContainerExpirationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.OlderThan
	}).(pulumi.StringPtrOutput)
}

type ProjectIssueTaskCompletionStatus struct {
	CompletedCount *int `pulumi:"completedCount"`
	Count          *int `pulumi:"count"`
}

// ProjectIssueTaskCompletionStatusInput is an input type that accepts ProjectIssueTaskCompletionStatusArgs and ProjectIssueTaskCompletionStatusOutput values.
// You can construct a concrete instance of `ProjectIssueTaskCompletionStatusInput` via:
//
//          ProjectIssueTaskCompletionStatusArgs{...}
type ProjectIssueTaskCompletionStatusInput interface {
	pulumi.Input

	ToProjectIssueTaskCompletionStatusOutput() ProjectIssueTaskCompletionStatusOutput
	ToProjectIssueTaskCompletionStatusOutputWithContext(context.Context) ProjectIssueTaskCompletionStatusOutput
}

type ProjectIssueTaskCompletionStatusArgs struct {
	CompletedCount pulumi.IntPtrInput `pulumi:"completedCount"`
	Count          pulumi.IntPtrInput `pulumi:"count"`
}

func (ProjectIssueTaskCompletionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIssueTaskCompletionStatus)(nil)).Elem()
}

func (i ProjectIssueTaskCompletionStatusArgs) ToProjectIssueTaskCompletionStatusOutput() ProjectIssueTaskCompletionStatusOutput {
	return i.ToProjectIssueTaskCompletionStatusOutputWithContext(context.Background())
}

func (i ProjectIssueTaskCompletionStatusArgs) ToProjectIssueTaskCompletionStatusOutputWithContext(ctx context.Context) ProjectIssueTaskCompletionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIssueTaskCompletionStatusOutput)
}

func (i ProjectIssueTaskCompletionStatusArgs) ToProjectIssueTaskCompletionStatusPtrOutput() ProjectIssueTaskCompletionStatusPtrOutput {
	return i.ToProjectIssueTaskCompletionStatusPtrOutputWithContext(context.Background())
}

func (i ProjectIssueTaskCompletionStatusArgs) ToProjectIssueTaskCompletionStatusPtrOutputWithContext(ctx context.Context) ProjectIssueTaskCompletionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIssueTaskCompletionStatusOutput).ToProjectIssueTaskCompletionStatusPtrOutputWithContext(ctx)
}

// ProjectIssueTaskCompletionStatusPtrInput is an input type that accepts ProjectIssueTaskCompletionStatusArgs, ProjectIssueTaskCompletionStatusPtr and ProjectIssueTaskCompletionStatusPtrOutput values.
// You can construct a concrete instance of `ProjectIssueTaskCompletionStatusPtrInput` via:
//
//          ProjectIssueTaskCompletionStatusArgs{...}
//
//  or:
//
//          nil
type ProjectIssueTaskCompletionStatusPtrInput interface {
	pulumi.Input

	ToProjectIssueTaskCompletionStatusPtrOutput() ProjectIssueTaskCompletionStatusPtrOutput
	ToProjectIssueTaskCompletionStatusPtrOutputWithContext(context.Context) ProjectIssueTaskCompletionStatusPtrOutput
}

type projectIssueTaskCompletionStatusPtrType ProjectIssueTaskCompletionStatusArgs

func ProjectIssueTaskCompletionStatusPtr(v *ProjectIssueTaskCompletionStatusArgs) ProjectIssueTaskCompletionStatusPtrInput {
	return (*projectIssueTaskCompletionStatusPtrType)(v)
}

func (*projectIssueTaskCompletionStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIssueTaskCompletionStatus)(nil)).Elem()
}

func (i *projectIssueTaskCompletionStatusPtrType) ToProjectIssueTaskCompletionStatusPtrOutput() ProjectIssueTaskCompletionStatusPtrOutput {
	return i.ToProjectIssueTaskCompletionStatusPtrOutputWithContext(context.Background())
}

func (i *projectIssueTaskCompletionStatusPtrType) ToProjectIssueTaskCompletionStatusPtrOutputWithContext(ctx context.Context) ProjectIssueTaskCompletionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIssueTaskCompletionStatusPtrOutput)
}

type ProjectIssueTaskCompletionStatusOutput struct{ *pulumi.OutputState }

func (ProjectIssueTaskCompletionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIssueTaskCompletionStatus)(nil)).Elem()
}

func (o ProjectIssueTaskCompletionStatusOutput) ToProjectIssueTaskCompletionStatusOutput() ProjectIssueTaskCompletionStatusOutput {
	return o
}

func (o ProjectIssueTaskCompletionStatusOutput) ToProjectIssueTaskCompletionStatusOutputWithContext(ctx context.Context) ProjectIssueTaskCompletionStatusOutput {
	return o
}

func (o ProjectIssueTaskCompletionStatusOutput) ToProjectIssueTaskCompletionStatusPtrOutput() ProjectIssueTaskCompletionStatusPtrOutput {
	return o.ToProjectIssueTaskCompletionStatusPtrOutputWithContext(context.Background())
}

func (o ProjectIssueTaskCompletionStatusOutput) ToProjectIssueTaskCompletionStatusPtrOutputWithContext(ctx context.Context) ProjectIssueTaskCompletionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectIssueTaskCompletionStatus) *ProjectIssueTaskCompletionStatus {
		return &v
	}).(ProjectIssueTaskCompletionStatusPtrOutput)
}

func (o ProjectIssueTaskCompletionStatusOutput) CompletedCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectIssueTaskCompletionStatus) *int { return v.CompletedCount }).(pulumi.IntPtrOutput)
}

func (o ProjectIssueTaskCompletionStatusOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectIssueTaskCompletionStatus) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ProjectIssueTaskCompletionStatusPtrOutput struct{ *pulumi.OutputState }

func (ProjectIssueTaskCompletionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIssueTaskCompletionStatus)(nil)).Elem()
}

func (o ProjectIssueTaskCompletionStatusPtrOutput) ToProjectIssueTaskCompletionStatusPtrOutput() ProjectIssueTaskCompletionStatusPtrOutput {
	return o
}

func (o ProjectIssueTaskCompletionStatusPtrOutput) ToProjectIssueTaskCompletionStatusPtrOutputWithContext(ctx context.Context) ProjectIssueTaskCompletionStatusPtrOutput {
	return o
}

func (o ProjectIssueTaskCompletionStatusPtrOutput) Elem() ProjectIssueTaskCompletionStatusOutput {
	return o.ApplyT(func(v *ProjectIssueTaskCompletionStatus) ProjectIssueTaskCompletionStatus {
		if v != nil {
			return *v
		}
		var ret ProjectIssueTaskCompletionStatus
		return ret
	}).(ProjectIssueTaskCompletionStatusOutput)
}

func (o ProjectIssueTaskCompletionStatusPtrOutput) CompletedCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectIssueTaskCompletionStatus) *int {
		if v == nil {
			return nil
		}
		return v.CompletedCount
	}).(pulumi.IntPtrOutput)
}

func (o ProjectIssueTaskCompletionStatusPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectIssueTaskCompletionStatus) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

type ProjectProtectedEnvironmentDeployAccessLevels struct {
	AccessLevel            *string `pulumi:"accessLevel"`
	AccessLevelDescription *string `pulumi:"accessLevelDescription"`
	GroupId                *int    `pulumi:"groupId"`
	UserId                 *int    `pulumi:"userId"`
}

// ProjectProtectedEnvironmentDeployAccessLevelsInput is an input type that accepts ProjectProtectedEnvironmentDeployAccessLevelsArgs and ProjectProtectedEnvironmentDeployAccessLevelsOutput values.
// You can construct a concrete instance of `ProjectProtectedEnvironmentDeployAccessLevelsInput` via:
//
//          ProjectProtectedEnvironmentDeployAccessLevelsArgs{...}
type ProjectProtectedEnvironmentDeployAccessLevelsInput interface {
	pulumi.Input

	ToProjectProtectedEnvironmentDeployAccessLevelsOutput() ProjectProtectedEnvironmentDeployAccessLevelsOutput
	ToProjectProtectedEnvironmentDeployAccessLevelsOutputWithContext(context.Context) ProjectProtectedEnvironmentDeployAccessLevelsOutput
}

type ProjectProtectedEnvironmentDeployAccessLevelsArgs struct {
	AccessLevel            pulumi.StringPtrInput `pulumi:"accessLevel"`
	AccessLevelDescription pulumi.StringPtrInput `pulumi:"accessLevelDescription"`
	GroupId                pulumi.IntPtrInput    `pulumi:"groupId"`
	UserId                 pulumi.IntPtrInput    `pulumi:"userId"`
}

func (ProjectProtectedEnvironmentDeployAccessLevelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectProtectedEnvironmentDeployAccessLevels)(nil)).Elem()
}

func (i ProjectProtectedEnvironmentDeployAccessLevelsArgs) ToProjectProtectedEnvironmentDeployAccessLevelsOutput() ProjectProtectedEnvironmentDeployAccessLevelsOutput {
	return i.ToProjectProtectedEnvironmentDeployAccessLevelsOutputWithContext(context.Background())
}

func (i ProjectProtectedEnvironmentDeployAccessLevelsArgs) ToProjectProtectedEnvironmentDeployAccessLevelsOutputWithContext(ctx context.Context) ProjectProtectedEnvironmentDeployAccessLevelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectProtectedEnvironmentDeployAccessLevelsOutput)
}

func (i ProjectProtectedEnvironmentDeployAccessLevelsArgs) ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutput() ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput {
	return i.ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutputWithContext(context.Background())
}

func (i ProjectProtectedEnvironmentDeployAccessLevelsArgs) ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutputWithContext(ctx context.Context) ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectProtectedEnvironmentDeployAccessLevelsOutput).ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutputWithContext(ctx)
}

// ProjectProtectedEnvironmentDeployAccessLevelsPtrInput is an input type that accepts ProjectProtectedEnvironmentDeployAccessLevelsArgs, ProjectProtectedEnvironmentDeployAccessLevelsPtr and ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput values.
// You can construct a concrete instance of `ProjectProtectedEnvironmentDeployAccessLevelsPtrInput` via:
//
//          ProjectProtectedEnvironmentDeployAccessLevelsArgs{...}
//
//  or:
//
//          nil
type ProjectProtectedEnvironmentDeployAccessLevelsPtrInput interface {
	pulumi.Input

	ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutput() ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput
	ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutputWithContext(context.Context) ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput
}

type projectProtectedEnvironmentDeployAccessLevelsPtrType ProjectProtectedEnvironmentDeployAccessLevelsArgs

func ProjectProtectedEnvironmentDeployAccessLevelsPtr(v *ProjectProtectedEnvironmentDeployAccessLevelsArgs) ProjectProtectedEnvironmentDeployAccessLevelsPtrInput {
	return (*projectProtectedEnvironmentDeployAccessLevelsPtrType)(v)
}

func (*projectProtectedEnvironmentDeployAccessLevelsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectProtectedEnvironmentDeployAccessLevels)(nil)).Elem()
}

func (i *projectProtectedEnvironmentDeployAccessLevelsPtrType) ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutput() ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput {
	return i.ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutputWithContext(context.Background())
}

func (i *projectProtectedEnvironmentDeployAccessLevelsPtrType) ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutputWithContext(ctx context.Context) ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput)
}

type ProjectProtectedEnvironmentDeployAccessLevelsOutput struct{ *pulumi.OutputState }

func (ProjectProtectedEnvironmentDeployAccessLevelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectProtectedEnvironmentDeployAccessLevels)(nil)).Elem()
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsOutput) ToProjectProtectedEnvironmentDeployAccessLevelsOutput() ProjectProtectedEnvironmentDeployAccessLevelsOutput {
	return o
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsOutput) ToProjectProtectedEnvironmentDeployAccessLevelsOutputWithContext(ctx context.Context) ProjectProtectedEnvironmentDeployAccessLevelsOutput {
	return o
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsOutput) ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutput() ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput {
	return o.ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutputWithContext(context.Background())
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsOutput) ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutputWithContext(ctx context.Context) ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectProtectedEnvironmentDeployAccessLevels) *ProjectProtectedEnvironmentDeployAccessLevels {
		return &v
	}).(ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput)
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectProtectedEnvironmentDeployAccessLevels) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsOutput) AccessLevelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectProtectedEnvironmentDeployAccessLevels) *string { return v.AccessLevelDescription }).(pulumi.StringPtrOutput)
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsOutput) GroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectProtectedEnvironmentDeployAccessLevels) *int { return v.GroupId }).(pulumi.IntPtrOutput)
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsOutput) UserId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectProtectedEnvironmentDeployAccessLevels) *int { return v.UserId }).(pulumi.IntPtrOutput)
}

type ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput struct{ *pulumi.OutputState }

func (ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectProtectedEnvironmentDeployAccessLevels)(nil)).Elem()
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput) ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutput() ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput {
	return o
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput) ToProjectProtectedEnvironmentDeployAccessLevelsPtrOutputWithContext(ctx context.Context) ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput {
	return o
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput) Elem() ProjectProtectedEnvironmentDeployAccessLevelsOutput {
	return o.ApplyT(func(v *ProjectProtectedEnvironmentDeployAccessLevels) ProjectProtectedEnvironmentDeployAccessLevels {
		if v != nil {
			return *v
		}
		var ret ProjectProtectedEnvironmentDeployAccessLevels
		return ret
	}).(ProjectProtectedEnvironmentDeployAccessLevelsOutput)
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProtectedEnvironmentDeployAccessLevels) *string {
		if v == nil {
			return nil
		}
		return v.AccessLevel
	}).(pulumi.StringPtrOutput)
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput) AccessLevelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProtectedEnvironmentDeployAccessLevels) *string {
		if v == nil {
			return nil
		}
		return v.AccessLevelDescription
	}).(pulumi.StringPtrOutput)
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput) GroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectProtectedEnvironmentDeployAccessLevels) *int {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.IntPtrOutput)
}

func (o ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput) UserId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectProtectedEnvironmentDeployAccessLevels) *int {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.IntPtrOutput)
}

type ProjectPushRules struct {
	AuthorEmailRegex           *string `pulumi:"authorEmailRegex"`
	BranchNameRegex            *string `pulumi:"branchNameRegex"`
	CommitCommitterCheck       *bool   `pulumi:"commitCommitterCheck"`
	CommitMessageNegativeRegex *string `pulumi:"commitMessageNegativeRegex"`
	CommitMessageRegex         *string `pulumi:"commitMessageRegex"`
	DenyDeleteTag              *bool   `pulumi:"denyDeleteTag"`
	FileNameRegex              *string `pulumi:"fileNameRegex"`
	MaxFileSize                *int    `pulumi:"maxFileSize"`
	MemberCheck                *bool   `pulumi:"memberCheck"`
	PreventSecrets             *bool   `pulumi:"preventSecrets"`
	RejectUnsignedCommits      *bool   `pulumi:"rejectUnsignedCommits"`
}

// ProjectPushRulesInput is an input type that accepts ProjectPushRulesArgs and ProjectPushRulesOutput values.
// You can construct a concrete instance of `ProjectPushRulesInput` via:
//
//          ProjectPushRulesArgs{...}
type ProjectPushRulesInput interface {
	pulumi.Input

	ToProjectPushRulesOutput() ProjectPushRulesOutput
	ToProjectPushRulesOutputWithContext(context.Context) ProjectPushRulesOutput
}

type ProjectPushRulesArgs struct {
	AuthorEmailRegex           pulumi.StringPtrInput `pulumi:"authorEmailRegex"`
	BranchNameRegex            pulumi.StringPtrInput `pulumi:"branchNameRegex"`
	CommitCommitterCheck       pulumi.BoolPtrInput   `pulumi:"commitCommitterCheck"`
	CommitMessageNegativeRegex pulumi.StringPtrInput `pulumi:"commitMessageNegativeRegex"`
	CommitMessageRegex         pulumi.StringPtrInput `pulumi:"commitMessageRegex"`
	DenyDeleteTag              pulumi.BoolPtrInput   `pulumi:"denyDeleteTag"`
	FileNameRegex              pulumi.StringPtrInput `pulumi:"fileNameRegex"`
	MaxFileSize                pulumi.IntPtrInput    `pulumi:"maxFileSize"`
	MemberCheck                pulumi.BoolPtrInput   `pulumi:"memberCheck"`
	PreventSecrets             pulumi.BoolPtrInput   `pulumi:"preventSecrets"`
	RejectUnsignedCommits      pulumi.BoolPtrInput   `pulumi:"rejectUnsignedCommits"`
}

func (ProjectPushRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPushRules)(nil)).Elem()
}

func (i ProjectPushRulesArgs) ToProjectPushRulesOutput() ProjectPushRulesOutput {
	return i.ToProjectPushRulesOutputWithContext(context.Background())
}

func (i ProjectPushRulesArgs) ToProjectPushRulesOutputWithContext(ctx context.Context) ProjectPushRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPushRulesOutput)
}

func (i ProjectPushRulesArgs) ToProjectPushRulesPtrOutput() ProjectPushRulesPtrOutput {
	return i.ToProjectPushRulesPtrOutputWithContext(context.Background())
}

func (i ProjectPushRulesArgs) ToProjectPushRulesPtrOutputWithContext(ctx context.Context) ProjectPushRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPushRulesOutput).ToProjectPushRulesPtrOutputWithContext(ctx)
}

// ProjectPushRulesPtrInput is an input type that accepts ProjectPushRulesArgs, ProjectPushRulesPtr and ProjectPushRulesPtrOutput values.
// You can construct a concrete instance of `ProjectPushRulesPtrInput` via:
//
//          ProjectPushRulesArgs{...}
//
//  or:
//
//          nil
type ProjectPushRulesPtrInput interface {
	pulumi.Input

	ToProjectPushRulesPtrOutput() ProjectPushRulesPtrOutput
	ToProjectPushRulesPtrOutputWithContext(context.Context) ProjectPushRulesPtrOutput
}

type projectPushRulesPtrType ProjectPushRulesArgs

func ProjectPushRulesPtr(v *ProjectPushRulesArgs) ProjectPushRulesPtrInput {
	return (*projectPushRulesPtrType)(v)
}

func (*projectPushRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectPushRules)(nil)).Elem()
}

func (i *projectPushRulesPtrType) ToProjectPushRulesPtrOutput() ProjectPushRulesPtrOutput {
	return i.ToProjectPushRulesPtrOutputWithContext(context.Background())
}

func (i *projectPushRulesPtrType) ToProjectPushRulesPtrOutputWithContext(ctx context.Context) ProjectPushRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPushRulesPtrOutput)
}

type ProjectPushRulesOutput struct{ *pulumi.OutputState }

func (ProjectPushRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPushRules)(nil)).Elem()
}

func (o ProjectPushRulesOutput) ToProjectPushRulesOutput() ProjectPushRulesOutput {
	return o
}

func (o ProjectPushRulesOutput) ToProjectPushRulesOutputWithContext(ctx context.Context) ProjectPushRulesOutput {
	return o
}

func (o ProjectPushRulesOutput) ToProjectPushRulesPtrOutput() ProjectPushRulesPtrOutput {
	return o.ToProjectPushRulesPtrOutputWithContext(context.Background())
}

func (o ProjectPushRulesOutput) ToProjectPushRulesPtrOutputWithContext(ctx context.Context) ProjectPushRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectPushRules) *ProjectPushRules {
		return &v
	}).(ProjectPushRulesPtrOutput)
}

func (o ProjectPushRulesOutput) AuthorEmailRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *string { return v.AuthorEmailRegex }).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesOutput) BranchNameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *string { return v.BranchNameRegex }).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesOutput) CommitCommitterCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *bool { return v.CommitCommitterCheck }).(pulumi.BoolPtrOutput)
}

func (o ProjectPushRulesOutput) CommitMessageNegativeRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *string { return v.CommitMessageNegativeRegex }).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesOutput) CommitMessageRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *string { return v.CommitMessageRegex }).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesOutput) DenyDeleteTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *bool { return v.DenyDeleteTag }).(pulumi.BoolPtrOutput)
}

func (o ProjectPushRulesOutput) FileNameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *string { return v.FileNameRegex }).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesOutput) MaxFileSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *int { return v.MaxFileSize }).(pulumi.IntPtrOutput)
}

func (o ProjectPushRulesOutput) MemberCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *bool { return v.MemberCheck }).(pulumi.BoolPtrOutput)
}

func (o ProjectPushRulesOutput) PreventSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *bool { return v.PreventSecrets }).(pulumi.BoolPtrOutput)
}

func (o ProjectPushRulesOutput) RejectUnsignedCommits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectPushRules) *bool { return v.RejectUnsignedCommits }).(pulumi.BoolPtrOutput)
}

type ProjectPushRulesPtrOutput struct{ *pulumi.OutputState }

func (ProjectPushRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectPushRules)(nil)).Elem()
}

func (o ProjectPushRulesPtrOutput) ToProjectPushRulesPtrOutput() ProjectPushRulesPtrOutput {
	return o
}

func (o ProjectPushRulesPtrOutput) ToProjectPushRulesPtrOutputWithContext(ctx context.Context) ProjectPushRulesPtrOutput {
	return o
}

func (o ProjectPushRulesPtrOutput) Elem() ProjectPushRulesOutput {
	return o.ApplyT(func(v *ProjectPushRules) ProjectPushRules {
		if v != nil {
			return *v
		}
		var ret ProjectPushRules
		return ret
	}).(ProjectPushRulesOutput)
}

func (o ProjectPushRulesPtrOutput) AuthorEmailRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *string {
		if v == nil {
			return nil
		}
		return v.AuthorEmailRegex
	}).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesPtrOutput) BranchNameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *string {
		if v == nil {
			return nil
		}
		return v.BranchNameRegex
	}).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesPtrOutput) CommitCommitterCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *bool {
		if v == nil {
			return nil
		}
		return v.CommitCommitterCheck
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectPushRulesPtrOutput) CommitMessageNegativeRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessageNegativeRegex
	}).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesPtrOutput) CommitMessageRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessageRegex
	}).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesPtrOutput) DenyDeleteTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *bool {
		if v == nil {
			return nil
		}
		return v.DenyDeleteTag
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectPushRulesPtrOutput) FileNameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *string {
		if v == nil {
			return nil
		}
		return v.FileNameRegex
	}).(pulumi.StringPtrOutput)
}

func (o ProjectPushRulesPtrOutput) MaxFileSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *int {
		if v == nil {
			return nil
		}
		return v.MaxFileSize
	}).(pulumi.IntPtrOutput)
}

func (o ProjectPushRulesPtrOutput) MemberCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *bool {
		if v == nil {
			return nil
		}
		return v.MemberCheck
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectPushRulesPtrOutput) PreventSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *bool {
		if v == nil {
			return nil
		}
		return v.PreventSecrets
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectPushRulesPtrOutput) RejectUnsignedCommits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectPushRules) *bool {
		if v == nil {
			return nil
		}
		return v.RejectUnsignedCommits
	}).(pulumi.BoolPtrOutput)
}

type ProjectTagCommit struct {
	AuthorEmail    *string  `pulumi:"authorEmail"`
	AuthorName     *string  `pulumi:"authorName"`
	AuthoredDate   *string  `pulumi:"authoredDate"`
	CommittedDate  *string  `pulumi:"committedDate"`
	CommitterEmail *string  `pulumi:"committerEmail"`
	CommitterName  *string  `pulumi:"committerName"`
	Id             *string  `pulumi:"id"`
	Message        *string  `pulumi:"message"`
	ParentIds      []string `pulumi:"parentIds"`
	ShortId        *string  `pulumi:"shortId"`
	Title          *string  `pulumi:"title"`
}

// ProjectTagCommitInput is an input type that accepts ProjectTagCommitArgs and ProjectTagCommitOutput values.
// You can construct a concrete instance of `ProjectTagCommitInput` via:
//
//          ProjectTagCommitArgs{...}
type ProjectTagCommitInput interface {
	pulumi.Input

	ToProjectTagCommitOutput() ProjectTagCommitOutput
	ToProjectTagCommitOutputWithContext(context.Context) ProjectTagCommitOutput
}

type ProjectTagCommitArgs struct {
	AuthorEmail    pulumi.StringPtrInput   `pulumi:"authorEmail"`
	AuthorName     pulumi.StringPtrInput   `pulumi:"authorName"`
	AuthoredDate   pulumi.StringPtrInput   `pulumi:"authoredDate"`
	CommittedDate  pulumi.StringPtrInput   `pulumi:"committedDate"`
	CommitterEmail pulumi.StringPtrInput   `pulumi:"committerEmail"`
	CommitterName  pulumi.StringPtrInput   `pulumi:"committerName"`
	Id             pulumi.StringPtrInput   `pulumi:"id"`
	Message        pulumi.StringPtrInput   `pulumi:"message"`
	ParentIds      pulumi.StringArrayInput `pulumi:"parentIds"`
	ShortId        pulumi.StringPtrInput   `pulumi:"shortId"`
	Title          pulumi.StringPtrInput   `pulumi:"title"`
}

func (ProjectTagCommitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTagCommit)(nil)).Elem()
}

func (i ProjectTagCommitArgs) ToProjectTagCommitOutput() ProjectTagCommitOutput {
	return i.ToProjectTagCommitOutputWithContext(context.Background())
}

func (i ProjectTagCommitArgs) ToProjectTagCommitOutputWithContext(ctx context.Context) ProjectTagCommitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTagCommitOutput)
}

// ProjectTagCommitArrayInput is an input type that accepts ProjectTagCommitArray and ProjectTagCommitArrayOutput values.
// You can construct a concrete instance of `ProjectTagCommitArrayInput` via:
//
//          ProjectTagCommitArray{ ProjectTagCommitArgs{...} }
type ProjectTagCommitArrayInput interface {
	pulumi.Input

	ToProjectTagCommitArrayOutput() ProjectTagCommitArrayOutput
	ToProjectTagCommitArrayOutputWithContext(context.Context) ProjectTagCommitArrayOutput
}

type ProjectTagCommitArray []ProjectTagCommitInput

func (ProjectTagCommitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTagCommit)(nil)).Elem()
}

func (i ProjectTagCommitArray) ToProjectTagCommitArrayOutput() ProjectTagCommitArrayOutput {
	return i.ToProjectTagCommitArrayOutputWithContext(context.Background())
}

func (i ProjectTagCommitArray) ToProjectTagCommitArrayOutputWithContext(ctx context.Context) ProjectTagCommitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTagCommitArrayOutput)
}

type ProjectTagCommitOutput struct{ *pulumi.OutputState }

func (ProjectTagCommitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTagCommit)(nil)).Elem()
}

func (o ProjectTagCommitOutput) ToProjectTagCommitOutput() ProjectTagCommitOutput {
	return o
}

func (o ProjectTagCommitOutput) ToProjectTagCommitOutputWithContext(ctx context.Context) ProjectTagCommitOutput {
	return o
}

func (o ProjectTagCommitOutput) AuthorEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.AuthorEmail }).(pulumi.StringPtrOutput)
}

func (o ProjectTagCommitOutput) AuthorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.AuthorName }).(pulumi.StringPtrOutput)
}

func (o ProjectTagCommitOutput) AuthoredDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.AuthoredDate }).(pulumi.StringPtrOutput)
}

func (o ProjectTagCommitOutput) CommittedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.CommittedDate }).(pulumi.StringPtrOutput)
}

func (o ProjectTagCommitOutput) CommitterEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.CommitterEmail }).(pulumi.StringPtrOutput)
}

func (o ProjectTagCommitOutput) CommitterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.CommitterName }).(pulumi.StringPtrOutput)
}

func (o ProjectTagCommitOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ProjectTagCommitOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ProjectTagCommitOutput) ParentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectTagCommit) []string { return v.ParentIds }).(pulumi.StringArrayOutput)
}

func (o ProjectTagCommitOutput) ShortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.ShortId }).(pulumi.StringPtrOutput)
}

func (o ProjectTagCommitOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagCommit) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ProjectTagCommitArrayOutput struct{ *pulumi.OutputState }

func (ProjectTagCommitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTagCommit)(nil)).Elem()
}

func (o ProjectTagCommitArrayOutput) ToProjectTagCommitArrayOutput() ProjectTagCommitArrayOutput {
	return o
}

func (o ProjectTagCommitArrayOutput) ToProjectTagCommitArrayOutputWithContext(ctx context.Context) ProjectTagCommitArrayOutput {
	return o
}

func (o ProjectTagCommitArrayOutput) Index(i pulumi.IntInput) ProjectTagCommitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTagCommit {
		return vs[0].([]ProjectTagCommit)[vs[1].(int)]
	}).(ProjectTagCommitOutput)
}

type ProjectTagRelease struct {
	Description *string `pulumi:"description"`
	TagName     *string `pulumi:"tagName"`
}

// ProjectTagReleaseInput is an input type that accepts ProjectTagReleaseArgs and ProjectTagReleaseOutput values.
// You can construct a concrete instance of `ProjectTagReleaseInput` via:
//
//          ProjectTagReleaseArgs{...}
type ProjectTagReleaseInput interface {
	pulumi.Input

	ToProjectTagReleaseOutput() ProjectTagReleaseOutput
	ToProjectTagReleaseOutputWithContext(context.Context) ProjectTagReleaseOutput
}

type ProjectTagReleaseArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	TagName     pulumi.StringPtrInput `pulumi:"tagName"`
}

func (ProjectTagReleaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTagRelease)(nil)).Elem()
}

func (i ProjectTagReleaseArgs) ToProjectTagReleaseOutput() ProjectTagReleaseOutput {
	return i.ToProjectTagReleaseOutputWithContext(context.Background())
}

func (i ProjectTagReleaseArgs) ToProjectTagReleaseOutputWithContext(ctx context.Context) ProjectTagReleaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTagReleaseOutput)
}

// ProjectTagReleaseArrayInput is an input type that accepts ProjectTagReleaseArray and ProjectTagReleaseArrayOutput values.
// You can construct a concrete instance of `ProjectTagReleaseArrayInput` via:
//
//          ProjectTagReleaseArray{ ProjectTagReleaseArgs{...} }
type ProjectTagReleaseArrayInput interface {
	pulumi.Input

	ToProjectTagReleaseArrayOutput() ProjectTagReleaseArrayOutput
	ToProjectTagReleaseArrayOutputWithContext(context.Context) ProjectTagReleaseArrayOutput
}

type ProjectTagReleaseArray []ProjectTagReleaseInput

func (ProjectTagReleaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTagRelease)(nil)).Elem()
}

func (i ProjectTagReleaseArray) ToProjectTagReleaseArrayOutput() ProjectTagReleaseArrayOutput {
	return i.ToProjectTagReleaseArrayOutputWithContext(context.Background())
}

func (i ProjectTagReleaseArray) ToProjectTagReleaseArrayOutputWithContext(ctx context.Context) ProjectTagReleaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTagReleaseArrayOutput)
}

type ProjectTagReleaseOutput struct{ *pulumi.OutputState }

func (ProjectTagReleaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTagRelease)(nil)).Elem()
}

func (o ProjectTagReleaseOutput) ToProjectTagReleaseOutput() ProjectTagReleaseOutput {
	return o
}

func (o ProjectTagReleaseOutput) ToProjectTagReleaseOutputWithContext(ctx context.Context) ProjectTagReleaseOutput {
	return o
}

func (o ProjectTagReleaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagRelease) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ProjectTagReleaseOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTagRelease) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type ProjectTagReleaseArrayOutput struct{ *pulumi.OutputState }

func (ProjectTagReleaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTagRelease)(nil)).Elem()
}

func (o ProjectTagReleaseArrayOutput) ToProjectTagReleaseArrayOutput() ProjectTagReleaseArrayOutput {
	return o
}

func (o ProjectTagReleaseArrayOutput) ToProjectTagReleaseArrayOutputWithContext(ctx context.Context) ProjectTagReleaseArrayOutput {
	return o
}

func (o ProjectTagReleaseArrayOutput) Index(i pulumi.IntInput) ProjectTagReleaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTagRelease {
		return vs[0].([]ProjectTagRelease)[vs[1].(int)]
	}).(ProjectTagReleaseOutput)
}

type GetBranchCommit struct {
	AuthorEmail    string   `pulumi:"authorEmail"`
	AuthorName     string   `pulumi:"authorName"`
	AuthoredDate   string   `pulumi:"authoredDate"`
	CommittedDate  string   `pulumi:"committedDate"`
	CommitterEmail string   `pulumi:"committerEmail"`
	CommitterName  string   `pulumi:"committerName"`
	Id             string   `pulumi:"id"`
	Message        string   `pulumi:"message"`
	ParentIds      []string `pulumi:"parentIds"`
	ShortId        string   `pulumi:"shortId"`
	Title          string   `pulumi:"title"`
}

// GetBranchCommitInput is an input type that accepts GetBranchCommitArgs and GetBranchCommitOutput values.
// You can construct a concrete instance of `GetBranchCommitInput` via:
//
//          GetBranchCommitArgs{...}
type GetBranchCommitInput interface {
	pulumi.Input

	ToGetBranchCommitOutput() GetBranchCommitOutput
	ToGetBranchCommitOutputWithContext(context.Context) GetBranchCommitOutput
}

type GetBranchCommitArgs struct {
	AuthorEmail    pulumi.StringInput      `pulumi:"authorEmail"`
	AuthorName     pulumi.StringInput      `pulumi:"authorName"`
	AuthoredDate   pulumi.StringInput      `pulumi:"authoredDate"`
	CommittedDate  pulumi.StringInput      `pulumi:"committedDate"`
	CommitterEmail pulumi.StringInput      `pulumi:"committerEmail"`
	CommitterName  pulumi.StringInput      `pulumi:"committerName"`
	Id             pulumi.StringInput      `pulumi:"id"`
	Message        pulumi.StringInput      `pulumi:"message"`
	ParentIds      pulumi.StringArrayInput `pulumi:"parentIds"`
	ShortId        pulumi.StringInput      `pulumi:"shortId"`
	Title          pulumi.StringInput      `pulumi:"title"`
}

func (GetBranchCommitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBranchCommit)(nil)).Elem()
}

func (i GetBranchCommitArgs) ToGetBranchCommitOutput() GetBranchCommitOutput {
	return i.ToGetBranchCommitOutputWithContext(context.Background())
}

func (i GetBranchCommitArgs) ToGetBranchCommitOutputWithContext(ctx context.Context) GetBranchCommitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBranchCommitOutput)
}

// GetBranchCommitArrayInput is an input type that accepts GetBranchCommitArray and GetBranchCommitArrayOutput values.
// You can construct a concrete instance of `GetBranchCommitArrayInput` via:
//
//          GetBranchCommitArray{ GetBranchCommitArgs{...} }
type GetBranchCommitArrayInput interface {
	pulumi.Input

	ToGetBranchCommitArrayOutput() GetBranchCommitArrayOutput
	ToGetBranchCommitArrayOutputWithContext(context.Context) GetBranchCommitArrayOutput
}

type GetBranchCommitArray []GetBranchCommitInput

func (GetBranchCommitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBranchCommit)(nil)).Elem()
}

func (i GetBranchCommitArray) ToGetBranchCommitArrayOutput() GetBranchCommitArrayOutput {
	return i.ToGetBranchCommitArrayOutputWithContext(context.Background())
}

func (i GetBranchCommitArray) ToGetBranchCommitArrayOutputWithContext(ctx context.Context) GetBranchCommitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBranchCommitArrayOutput)
}

type GetBranchCommitOutput struct{ *pulumi.OutputState }

func (GetBranchCommitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBranchCommit)(nil)).Elem()
}

func (o GetBranchCommitOutput) ToGetBranchCommitOutput() GetBranchCommitOutput {
	return o
}

func (o GetBranchCommitOutput) ToGetBranchCommitOutputWithContext(ctx context.Context) GetBranchCommitOutput {
	return o
}

func (o GetBranchCommitOutput) AuthorEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.AuthorEmail }).(pulumi.StringOutput)
}

func (o GetBranchCommitOutput) AuthorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.AuthorName }).(pulumi.StringOutput)
}

func (o GetBranchCommitOutput) AuthoredDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.AuthoredDate }).(pulumi.StringOutput)
}

func (o GetBranchCommitOutput) CommittedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.CommittedDate }).(pulumi.StringOutput)
}

func (o GetBranchCommitOutput) CommitterEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.CommitterEmail }).(pulumi.StringOutput)
}

func (o GetBranchCommitOutput) CommitterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.CommitterName }).(pulumi.StringOutput)
}

func (o GetBranchCommitOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBranchCommitOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.Message }).(pulumi.StringOutput)
}

func (o GetBranchCommitOutput) ParentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBranchCommit) []string { return v.ParentIds }).(pulumi.StringArrayOutput)
}

func (o GetBranchCommitOutput) ShortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.ShortId }).(pulumi.StringOutput)
}

func (o GetBranchCommitOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetBranchCommit) string { return v.Title }).(pulumi.StringOutput)
}

type GetBranchCommitArrayOutput struct{ *pulumi.OutputState }

func (GetBranchCommitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBranchCommit)(nil)).Elem()
}

func (o GetBranchCommitArrayOutput) ToGetBranchCommitArrayOutput() GetBranchCommitArrayOutput {
	return o
}

func (o GetBranchCommitArrayOutput) ToGetBranchCommitArrayOutputWithContext(ctx context.Context) GetBranchCommitArrayOutput {
	return o
}

func (o GetBranchCommitArrayOutput) Index(i pulumi.IntInput) GetBranchCommitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBranchCommit {
		return vs[0].([]GetBranchCommit)[vs[1].(int)]
	}).(GetBranchCommitOutput)
}

type GetGroupMembershipMember struct {
	AccessLevel string `pulumi:"accessLevel"`
	AvatarUrl   string `pulumi:"avatarUrl"`
	ExpiresAt   string `pulumi:"expiresAt"`
	Id          int    `pulumi:"id"`
	Name        string `pulumi:"name"`
	State       string `pulumi:"state"`
	Username    string `pulumi:"username"`
	WebUrl      string `pulumi:"webUrl"`
}

// GetGroupMembershipMemberInput is an input type that accepts GetGroupMembershipMemberArgs and GetGroupMembershipMemberOutput values.
// You can construct a concrete instance of `GetGroupMembershipMemberInput` via:
//
//          GetGroupMembershipMemberArgs{...}
type GetGroupMembershipMemberInput interface {
	pulumi.Input

	ToGetGroupMembershipMemberOutput() GetGroupMembershipMemberOutput
	ToGetGroupMembershipMemberOutputWithContext(context.Context) GetGroupMembershipMemberOutput
}

type GetGroupMembershipMemberArgs struct {
	AccessLevel pulumi.StringInput `pulumi:"accessLevel"`
	AvatarUrl   pulumi.StringInput `pulumi:"avatarUrl"`
	ExpiresAt   pulumi.StringInput `pulumi:"expiresAt"`
	Id          pulumi.IntInput    `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	State       pulumi.StringInput `pulumi:"state"`
	Username    pulumi.StringInput `pulumi:"username"`
	WebUrl      pulumi.StringInput `pulumi:"webUrl"`
}

func (GetGroupMembershipMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMembershipMember)(nil)).Elem()
}

func (i GetGroupMembershipMemberArgs) ToGetGroupMembershipMemberOutput() GetGroupMembershipMemberOutput {
	return i.ToGetGroupMembershipMemberOutputWithContext(context.Background())
}

func (i GetGroupMembershipMemberArgs) ToGetGroupMembershipMemberOutputWithContext(ctx context.Context) GetGroupMembershipMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMembershipMemberOutput)
}

// GetGroupMembershipMemberArrayInput is an input type that accepts GetGroupMembershipMemberArray and GetGroupMembershipMemberArrayOutput values.
// You can construct a concrete instance of `GetGroupMembershipMemberArrayInput` via:
//
//          GetGroupMembershipMemberArray{ GetGroupMembershipMemberArgs{...} }
type GetGroupMembershipMemberArrayInput interface {
	pulumi.Input

	ToGetGroupMembershipMemberArrayOutput() GetGroupMembershipMemberArrayOutput
	ToGetGroupMembershipMemberArrayOutputWithContext(context.Context) GetGroupMembershipMemberArrayOutput
}

type GetGroupMembershipMemberArray []GetGroupMembershipMemberInput

func (GetGroupMembershipMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMembershipMember)(nil)).Elem()
}

func (i GetGroupMembershipMemberArray) ToGetGroupMembershipMemberArrayOutput() GetGroupMembershipMemberArrayOutput {
	return i.ToGetGroupMembershipMemberArrayOutputWithContext(context.Background())
}

func (i GetGroupMembershipMemberArray) ToGetGroupMembershipMemberArrayOutputWithContext(ctx context.Context) GetGroupMembershipMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMembershipMemberArrayOutput)
}

type GetGroupMembershipMemberOutput struct{ *pulumi.OutputState }

func (GetGroupMembershipMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMembershipMember)(nil)).Elem()
}

func (o GetGroupMembershipMemberOutput) ToGetGroupMembershipMemberOutput() GetGroupMembershipMemberOutput {
	return o
}

func (o GetGroupMembershipMemberOutput) ToGetGroupMembershipMemberOutputWithContext(ctx context.Context) GetGroupMembershipMemberOutput {
	return o
}

func (o GetGroupMembershipMemberOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMembershipMember) string { return v.AccessLevel }).(pulumi.StringOutput)
}

func (o GetGroupMembershipMemberOutput) AvatarUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMembershipMember) string { return v.AvatarUrl }).(pulumi.StringOutput)
}

func (o GetGroupMembershipMemberOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMembershipMember) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

func (o GetGroupMembershipMemberOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMembershipMember) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetGroupMembershipMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMembershipMember) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGroupMembershipMemberOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMembershipMember) string { return v.State }).(pulumi.StringOutput)
}

func (o GetGroupMembershipMemberOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMembershipMember) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetGroupMembershipMemberOutput) WebUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMembershipMember) string { return v.WebUrl }).(pulumi.StringOutput)
}

type GetGroupMembershipMemberArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMembershipMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMembershipMember)(nil)).Elem()
}

func (o GetGroupMembershipMemberArrayOutput) ToGetGroupMembershipMemberArrayOutput() GetGroupMembershipMemberArrayOutput {
	return o
}

func (o GetGroupMembershipMemberArrayOutput) ToGetGroupMembershipMemberArrayOutputWithContext(ctx context.Context) GetGroupMembershipMemberArrayOutput {
	return o
}

func (o GetGroupMembershipMemberArrayOutput) Index(i pulumi.IntInput) GetGroupMembershipMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMembershipMember {
		return vs[0].([]GetGroupMembershipMember)[vs[1].(int)]
	}).(GetGroupMembershipMemberOutput)
}

type GetInstanceDeployKeysDeployKey struct {
	CreatedAt                 string                                                  `pulumi:"createdAt"`
	Fingerprint               string                                                  `pulumi:"fingerprint"`
	Id                        int                                                     `pulumi:"id"`
	Key                       string                                                  `pulumi:"key"`
	ProjectsWithWriteAccesses []GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess `pulumi:"projectsWithWriteAccesses"`
	Title                     string                                                  `pulumi:"title"`
}

// GetInstanceDeployKeysDeployKeyInput is an input type that accepts GetInstanceDeployKeysDeployKeyArgs and GetInstanceDeployKeysDeployKeyOutput values.
// You can construct a concrete instance of `GetInstanceDeployKeysDeployKeyInput` via:
//
//          GetInstanceDeployKeysDeployKeyArgs{...}
type GetInstanceDeployKeysDeployKeyInput interface {
	pulumi.Input

	ToGetInstanceDeployKeysDeployKeyOutput() GetInstanceDeployKeysDeployKeyOutput
	ToGetInstanceDeployKeysDeployKeyOutputWithContext(context.Context) GetInstanceDeployKeysDeployKeyOutput
}

type GetInstanceDeployKeysDeployKeyArgs struct {
	CreatedAt                 pulumi.StringInput                                              `pulumi:"createdAt"`
	Fingerprint               pulumi.StringInput                                              `pulumi:"fingerprint"`
	Id                        pulumi.IntInput                                                 `pulumi:"id"`
	Key                       pulumi.StringInput                                              `pulumi:"key"`
	ProjectsWithWriteAccesses GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayInput `pulumi:"projectsWithWriteAccesses"`
	Title                     pulumi.StringInput                                              `pulumi:"title"`
}

func (GetInstanceDeployKeysDeployKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDeployKeysDeployKey)(nil)).Elem()
}

func (i GetInstanceDeployKeysDeployKeyArgs) ToGetInstanceDeployKeysDeployKeyOutput() GetInstanceDeployKeysDeployKeyOutput {
	return i.ToGetInstanceDeployKeysDeployKeyOutputWithContext(context.Background())
}

func (i GetInstanceDeployKeysDeployKeyArgs) ToGetInstanceDeployKeysDeployKeyOutputWithContext(ctx context.Context) GetInstanceDeployKeysDeployKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDeployKeysDeployKeyOutput)
}

// GetInstanceDeployKeysDeployKeyArrayInput is an input type that accepts GetInstanceDeployKeysDeployKeyArray and GetInstanceDeployKeysDeployKeyArrayOutput values.
// You can construct a concrete instance of `GetInstanceDeployKeysDeployKeyArrayInput` via:
//
//          GetInstanceDeployKeysDeployKeyArray{ GetInstanceDeployKeysDeployKeyArgs{...} }
type GetInstanceDeployKeysDeployKeyArrayInput interface {
	pulumi.Input

	ToGetInstanceDeployKeysDeployKeyArrayOutput() GetInstanceDeployKeysDeployKeyArrayOutput
	ToGetInstanceDeployKeysDeployKeyArrayOutputWithContext(context.Context) GetInstanceDeployKeysDeployKeyArrayOutput
}

type GetInstanceDeployKeysDeployKeyArray []GetInstanceDeployKeysDeployKeyInput

func (GetInstanceDeployKeysDeployKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDeployKeysDeployKey)(nil)).Elem()
}

func (i GetInstanceDeployKeysDeployKeyArray) ToGetInstanceDeployKeysDeployKeyArrayOutput() GetInstanceDeployKeysDeployKeyArrayOutput {
	return i.ToGetInstanceDeployKeysDeployKeyArrayOutputWithContext(context.Background())
}

func (i GetInstanceDeployKeysDeployKeyArray) ToGetInstanceDeployKeysDeployKeyArrayOutputWithContext(ctx context.Context) GetInstanceDeployKeysDeployKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDeployKeysDeployKeyArrayOutput)
}

type GetInstanceDeployKeysDeployKeyOutput struct{ *pulumi.OutputState }

func (GetInstanceDeployKeysDeployKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDeployKeysDeployKey)(nil)).Elem()
}

func (o GetInstanceDeployKeysDeployKeyOutput) ToGetInstanceDeployKeysDeployKeyOutput() GetInstanceDeployKeysDeployKeyOutput {
	return o
}

func (o GetInstanceDeployKeysDeployKeyOutput) ToGetInstanceDeployKeysDeployKeyOutputWithContext(ctx context.Context) GetInstanceDeployKeysDeployKeyOutput {
	return o
}

func (o GetInstanceDeployKeysDeployKeyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKey) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetInstanceDeployKeysDeployKeyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKey) string { return v.Fingerprint }).(pulumi.StringOutput)
}

func (o GetInstanceDeployKeysDeployKeyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKey) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInstanceDeployKeysDeployKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKey) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetInstanceDeployKeysDeployKeyOutput) ProjectsWithWriteAccesses() GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKey) []GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess {
		return v.ProjectsWithWriteAccesses
	}).(GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput)
}

func (o GetInstanceDeployKeysDeployKeyOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKey) string { return v.Title }).(pulumi.StringOutput)
}

type GetInstanceDeployKeysDeployKeyArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceDeployKeysDeployKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDeployKeysDeployKey)(nil)).Elem()
}

func (o GetInstanceDeployKeysDeployKeyArrayOutput) ToGetInstanceDeployKeysDeployKeyArrayOutput() GetInstanceDeployKeysDeployKeyArrayOutput {
	return o
}

func (o GetInstanceDeployKeysDeployKeyArrayOutput) ToGetInstanceDeployKeysDeployKeyArrayOutputWithContext(ctx context.Context) GetInstanceDeployKeysDeployKeyArrayOutput {
	return o
}

func (o GetInstanceDeployKeysDeployKeyArrayOutput) Index(i pulumi.IntInput) GetInstanceDeployKeysDeployKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceDeployKeysDeployKey {
		return vs[0].([]GetInstanceDeployKeysDeployKey)[vs[1].(int)]
	}).(GetInstanceDeployKeysDeployKeyOutput)
}

type GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess struct {
	CreatedAt         string `pulumi:"createdAt"`
	Description       string `pulumi:"description"`
	Id                int    `pulumi:"id"`
	Name              string `pulumi:"name"`
	NameWithNamespace string `pulumi:"nameWithNamespace"`
	Path              string `pulumi:"path"`
	PathWithNamespace string `pulumi:"pathWithNamespace"`
}

// GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessInput is an input type that accepts GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArgs and GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput values.
// You can construct a concrete instance of `GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessInput` via:
//
//          GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArgs{...}
type GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessInput interface {
	pulumi.Input

	ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput() GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput
	ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutputWithContext(context.Context) GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput
}

type GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArgs struct {
	CreatedAt         pulumi.StringInput `pulumi:"createdAt"`
	Description       pulumi.StringInput `pulumi:"description"`
	Id                pulumi.IntInput    `pulumi:"id"`
	Name              pulumi.StringInput `pulumi:"name"`
	NameWithNamespace pulumi.StringInput `pulumi:"nameWithNamespace"`
	Path              pulumi.StringInput `pulumi:"path"`
	PathWithNamespace pulumi.StringInput `pulumi:"pathWithNamespace"`
}

func (GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess)(nil)).Elem()
}

func (i GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArgs) ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput() GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput {
	return i.ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutputWithContext(context.Background())
}

func (i GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArgs) ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutputWithContext(ctx context.Context) GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput)
}

// GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayInput is an input type that accepts GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArray and GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput values.
// You can construct a concrete instance of `GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayInput` via:
//
//          GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArray{ GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArgs{...} }
type GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayInput interface {
	pulumi.Input

	ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput() GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput
	ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutputWithContext(context.Context) GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput
}

type GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArray []GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessInput

func (GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess)(nil)).Elem()
}

func (i GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArray) ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput() GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput {
	return i.ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutputWithContext(context.Background())
}

func (i GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArray) ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutputWithContext(ctx context.Context) GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput)
}

type GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput struct{ *pulumi.OutputState }

func (GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess)(nil)).Elem()
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput() GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput {
	return o
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutputWithContext(ctx context.Context) GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput {
	return o
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) NameWithNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess) string { return v.NameWithNamespace }).(pulumi.StringOutput)
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput) PathWithNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess) string { return v.PathWithNamespace }).(pulumi.StringOutput)
}

type GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess)(nil)).Elem()
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput) ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput() GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput {
	return o
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput) ToGetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutputWithContext(ctx context.Context) GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput {
	return o
}

func (o GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput) Index(i pulumi.IntInput) GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess {
		return vs[0].([]GetInstanceDeployKeysDeployKeyProjectsWithWriteAccess)[vs[1].(int)]
	}).(GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput)
}

type GetProjectContainerExpirationPolicy struct {
	Cadence         string `pulumi:"cadence"`
	Enabled         bool   `pulumi:"enabled"`
	KeepN           int    `pulumi:"keepN"`
	NameRegexDelete string `pulumi:"nameRegexDelete"`
	NameRegexKeep   string `pulumi:"nameRegexKeep"`
	NextRunAt       string `pulumi:"nextRunAt"`
	OlderThan       string `pulumi:"olderThan"`
}

// GetProjectContainerExpirationPolicyInput is an input type that accepts GetProjectContainerExpirationPolicyArgs and GetProjectContainerExpirationPolicyOutput values.
// You can construct a concrete instance of `GetProjectContainerExpirationPolicyInput` via:
//
//          GetProjectContainerExpirationPolicyArgs{...}
type GetProjectContainerExpirationPolicyInput interface {
	pulumi.Input

	ToGetProjectContainerExpirationPolicyOutput() GetProjectContainerExpirationPolicyOutput
	ToGetProjectContainerExpirationPolicyOutputWithContext(context.Context) GetProjectContainerExpirationPolicyOutput
}

type GetProjectContainerExpirationPolicyArgs struct {
	Cadence         pulumi.StringInput `pulumi:"cadence"`
	Enabled         pulumi.BoolInput   `pulumi:"enabled"`
	KeepN           pulumi.IntInput    `pulumi:"keepN"`
	NameRegexDelete pulumi.StringInput `pulumi:"nameRegexDelete"`
	NameRegexKeep   pulumi.StringInput `pulumi:"nameRegexKeep"`
	NextRunAt       pulumi.StringInput `pulumi:"nextRunAt"`
	OlderThan       pulumi.StringInput `pulumi:"olderThan"`
}

func (GetProjectContainerExpirationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectContainerExpirationPolicy)(nil)).Elem()
}

func (i GetProjectContainerExpirationPolicyArgs) ToGetProjectContainerExpirationPolicyOutput() GetProjectContainerExpirationPolicyOutput {
	return i.ToGetProjectContainerExpirationPolicyOutputWithContext(context.Background())
}

func (i GetProjectContainerExpirationPolicyArgs) ToGetProjectContainerExpirationPolicyOutputWithContext(ctx context.Context) GetProjectContainerExpirationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectContainerExpirationPolicyOutput)
}

// GetProjectContainerExpirationPolicyArrayInput is an input type that accepts GetProjectContainerExpirationPolicyArray and GetProjectContainerExpirationPolicyArrayOutput values.
// You can construct a concrete instance of `GetProjectContainerExpirationPolicyArrayInput` via:
//
//          GetProjectContainerExpirationPolicyArray{ GetProjectContainerExpirationPolicyArgs{...} }
type GetProjectContainerExpirationPolicyArrayInput interface {
	pulumi.Input

	ToGetProjectContainerExpirationPolicyArrayOutput() GetProjectContainerExpirationPolicyArrayOutput
	ToGetProjectContainerExpirationPolicyArrayOutputWithContext(context.Context) GetProjectContainerExpirationPolicyArrayOutput
}

type GetProjectContainerExpirationPolicyArray []GetProjectContainerExpirationPolicyInput

func (GetProjectContainerExpirationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectContainerExpirationPolicy)(nil)).Elem()
}

func (i GetProjectContainerExpirationPolicyArray) ToGetProjectContainerExpirationPolicyArrayOutput() GetProjectContainerExpirationPolicyArrayOutput {
	return i.ToGetProjectContainerExpirationPolicyArrayOutputWithContext(context.Background())
}

func (i GetProjectContainerExpirationPolicyArray) ToGetProjectContainerExpirationPolicyArrayOutputWithContext(ctx context.Context) GetProjectContainerExpirationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectContainerExpirationPolicyArrayOutput)
}

type GetProjectContainerExpirationPolicyOutput struct{ *pulumi.OutputState }

func (GetProjectContainerExpirationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectContainerExpirationPolicy)(nil)).Elem()
}

func (o GetProjectContainerExpirationPolicyOutput) ToGetProjectContainerExpirationPolicyOutput() GetProjectContainerExpirationPolicyOutput {
	return o
}

func (o GetProjectContainerExpirationPolicyOutput) ToGetProjectContainerExpirationPolicyOutputWithContext(ctx context.Context) GetProjectContainerExpirationPolicyOutput {
	return o
}

func (o GetProjectContainerExpirationPolicyOutput) Cadence() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectContainerExpirationPolicy) string { return v.Cadence }).(pulumi.StringOutput)
}

func (o GetProjectContainerExpirationPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectContainerExpirationPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetProjectContainerExpirationPolicyOutput) KeepN() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectContainerExpirationPolicy) int { return v.KeepN }).(pulumi.IntOutput)
}

func (o GetProjectContainerExpirationPolicyOutput) NameRegexDelete() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectContainerExpirationPolicy) string { return v.NameRegexDelete }).(pulumi.StringOutput)
}

func (o GetProjectContainerExpirationPolicyOutput) NameRegexKeep() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectContainerExpirationPolicy) string { return v.NameRegexKeep }).(pulumi.StringOutput)
}

func (o GetProjectContainerExpirationPolicyOutput) NextRunAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectContainerExpirationPolicy) string { return v.NextRunAt }).(pulumi.StringOutput)
}

func (o GetProjectContainerExpirationPolicyOutput) OlderThan() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectContainerExpirationPolicy) string { return v.OlderThan }).(pulumi.StringOutput)
}

type GetProjectContainerExpirationPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetProjectContainerExpirationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectContainerExpirationPolicy)(nil)).Elem()
}

func (o GetProjectContainerExpirationPolicyArrayOutput) ToGetProjectContainerExpirationPolicyArrayOutput() GetProjectContainerExpirationPolicyArrayOutput {
	return o
}

func (o GetProjectContainerExpirationPolicyArrayOutput) ToGetProjectContainerExpirationPolicyArrayOutputWithContext(ctx context.Context) GetProjectContainerExpirationPolicyArrayOutput {
	return o
}

func (o GetProjectContainerExpirationPolicyArrayOutput) Index(i pulumi.IntInput) GetProjectContainerExpirationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectContainerExpirationPolicy {
		return vs[0].([]GetProjectContainerExpirationPolicy)[vs[1].(int)]
	}).(GetProjectContainerExpirationPolicyOutput)
}

type GetProjectIssueTaskCompletionStatus struct {
	CompletedCount int `pulumi:"completedCount"`
	Count          int `pulumi:"count"`
}

// GetProjectIssueTaskCompletionStatusInput is an input type that accepts GetProjectIssueTaskCompletionStatusArgs and GetProjectIssueTaskCompletionStatusOutput values.
// You can construct a concrete instance of `GetProjectIssueTaskCompletionStatusInput` via:
//
//          GetProjectIssueTaskCompletionStatusArgs{...}
type GetProjectIssueTaskCompletionStatusInput interface {
	pulumi.Input

	ToGetProjectIssueTaskCompletionStatusOutput() GetProjectIssueTaskCompletionStatusOutput
	ToGetProjectIssueTaskCompletionStatusOutputWithContext(context.Context) GetProjectIssueTaskCompletionStatusOutput
}

type GetProjectIssueTaskCompletionStatusArgs struct {
	CompletedCount pulumi.IntInput `pulumi:"completedCount"`
	Count          pulumi.IntInput `pulumi:"count"`
}

func (GetProjectIssueTaskCompletionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectIssueTaskCompletionStatus)(nil)).Elem()
}

func (i GetProjectIssueTaskCompletionStatusArgs) ToGetProjectIssueTaskCompletionStatusOutput() GetProjectIssueTaskCompletionStatusOutput {
	return i.ToGetProjectIssueTaskCompletionStatusOutputWithContext(context.Background())
}

func (i GetProjectIssueTaskCompletionStatusArgs) ToGetProjectIssueTaskCompletionStatusOutputWithContext(ctx context.Context) GetProjectIssueTaskCompletionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectIssueTaskCompletionStatusOutput)
}

// GetProjectIssueTaskCompletionStatusArrayInput is an input type that accepts GetProjectIssueTaskCompletionStatusArray and GetProjectIssueTaskCompletionStatusArrayOutput values.
// You can construct a concrete instance of `GetProjectIssueTaskCompletionStatusArrayInput` via:
//
//          GetProjectIssueTaskCompletionStatusArray{ GetProjectIssueTaskCompletionStatusArgs{...} }
type GetProjectIssueTaskCompletionStatusArrayInput interface {
	pulumi.Input

	ToGetProjectIssueTaskCompletionStatusArrayOutput() GetProjectIssueTaskCompletionStatusArrayOutput
	ToGetProjectIssueTaskCompletionStatusArrayOutputWithContext(context.Context) GetProjectIssueTaskCompletionStatusArrayOutput
}

type GetProjectIssueTaskCompletionStatusArray []GetProjectIssueTaskCompletionStatusInput

func (GetProjectIssueTaskCompletionStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectIssueTaskCompletionStatus)(nil)).Elem()
}

func (i GetProjectIssueTaskCompletionStatusArray) ToGetProjectIssueTaskCompletionStatusArrayOutput() GetProjectIssueTaskCompletionStatusArrayOutput {
	return i.ToGetProjectIssueTaskCompletionStatusArrayOutputWithContext(context.Background())
}

func (i GetProjectIssueTaskCompletionStatusArray) ToGetProjectIssueTaskCompletionStatusArrayOutputWithContext(ctx context.Context) GetProjectIssueTaskCompletionStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectIssueTaskCompletionStatusArrayOutput)
}

type GetProjectIssueTaskCompletionStatusOutput struct{ *pulumi.OutputState }

func (GetProjectIssueTaskCompletionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectIssueTaskCompletionStatus)(nil)).Elem()
}

func (o GetProjectIssueTaskCompletionStatusOutput) ToGetProjectIssueTaskCompletionStatusOutput() GetProjectIssueTaskCompletionStatusOutput {
	return o
}

func (o GetProjectIssueTaskCompletionStatusOutput) ToGetProjectIssueTaskCompletionStatusOutputWithContext(ctx context.Context) GetProjectIssueTaskCompletionStatusOutput {
	return o
}

func (o GetProjectIssueTaskCompletionStatusOutput) CompletedCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssueTaskCompletionStatus) int { return v.CompletedCount }).(pulumi.IntOutput)
}

func (o GetProjectIssueTaskCompletionStatusOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssueTaskCompletionStatus) int { return v.Count }).(pulumi.IntOutput)
}

type GetProjectIssueTaskCompletionStatusArrayOutput struct{ *pulumi.OutputState }

func (GetProjectIssueTaskCompletionStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectIssueTaskCompletionStatus)(nil)).Elem()
}

func (o GetProjectIssueTaskCompletionStatusArrayOutput) ToGetProjectIssueTaskCompletionStatusArrayOutput() GetProjectIssueTaskCompletionStatusArrayOutput {
	return o
}

func (o GetProjectIssueTaskCompletionStatusArrayOutput) ToGetProjectIssueTaskCompletionStatusArrayOutputWithContext(ctx context.Context) GetProjectIssueTaskCompletionStatusArrayOutput {
	return o
}

func (o GetProjectIssueTaskCompletionStatusArrayOutput) Index(i pulumi.IntInput) GetProjectIssueTaskCompletionStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectIssueTaskCompletionStatus {
		return vs[0].([]GetProjectIssueTaskCompletionStatus)[vs[1].(int)]
	}).(GetProjectIssueTaskCompletionStatusOutput)
}

type GetProjectIssuesIssue struct {
	AssigneeIds                        []int                                       `pulumi:"assigneeIds"`
	AuthorId                           int                                         `pulumi:"authorId"`
	ClosedAt                           string                                      `pulumi:"closedAt"`
	ClosedByUserId                     int                                         `pulumi:"closedByUserId"`
	Confidential                       bool                                        `pulumi:"confidential"`
	CreatedAt                          string                                      `pulumi:"createdAt"`
	Description                        string                                      `pulumi:"description"`
	DiscussionLocked                   bool                                        `pulumi:"discussionLocked"`
	DiscussionToResolve                string                                      `pulumi:"discussionToResolve"`
	Downvotes                          int                                         `pulumi:"downvotes"`
	DueDate                            string                                      `pulumi:"dueDate"`
	EpicId                             int                                         `pulumi:"epicId"`
	EpicIssueId                        int                                         `pulumi:"epicIssueId"`
	ExternalId                         string                                      `pulumi:"externalId"`
	HumanTimeEstimate                  string                                      `pulumi:"humanTimeEstimate"`
	HumanTotalTimeSpent                string                                      `pulumi:"humanTotalTimeSpent"`
	Iid                                int                                         `pulumi:"iid"`
	IssueId                            int                                         `pulumi:"issueId"`
	IssueLinkId                        int                                         `pulumi:"issueLinkId"`
	IssueType                          string                                      `pulumi:"issueType"`
	Labels                             []string                                    `pulumi:"labels"`
	Links                              map[string]string                           `pulumi:"links"`
	MergeRequestToResolveDiscussionsOf int                                         `pulumi:"mergeRequestToResolveDiscussionsOf"`
	MergeRequestsCount                 int                                         `pulumi:"mergeRequestsCount"`
	MilestoneId                        int                                         `pulumi:"milestoneId"`
	MovedToId                          int                                         `pulumi:"movedToId"`
	Project                            string                                      `pulumi:"project"`
	References                         map[string]string                           `pulumi:"references"`
	State                              string                                      `pulumi:"state"`
	Subscribed                         bool                                        `pulumi:"subscribed"`
	TaskCompletionStatuses             []GetProjectIssuesIssueTaskCompletionStatus `pulumi:"taskCompletionStatuses"`
	TimeEstimate                       int                                         `pulumi:"timeEstimate"`
	Title                              string                                      `pulumi:"title"`
	TotalTimeSpent                     int                                         `pulumi:"totalTimeSpent"`
	UpdatedAt                          string                                      `pulumi:"updatedAt"`
	Upvotes                            int                                         `pulumi:"upvotes"`
	UserNotesCount                     int                                         `pulumi:"userNotesCount"`
	WebUrl                             string                                      `pulumi:"webUrl"`
	Weight                             int                                         `pulumi:"weight"`
}

// GetProjectIssuesIssueInput is an input type that accepts GetProjectIssuesIssueArgs and GetProjectIssuesIssueOutput values.
// You can construct a concrete instance of `GetProjectIssuesIssueInput` via:
//
//          GetProjectIssuesIssueArgs{...}
type GetProjectIssuesIssueInput interface {
	pulumi.Input

	ToGetProjectIssuesIssueOutput() GetProjectIssuesIssueOutput
	ToGetProjectIssuesIssueOutputWithContext(context.Context) GetProjectIssuesIssueOutput
}

type GetProjectIssuesIssueArgs struct {
	AssigneeIds                        pulumi.IntArrayInput                                `pulumi:"assigneeIds"`
	AuthorId                           pulumi.IntInput                                     `pulumi:"authorId"`
	ClosedAt                           pulumi.StringInput                                  `pulumi:"closedAt"`
	ClosedByUserId                     pulumi.IntInput                                     `pulumi:"closedByUserId"`
	Confidential                       pulumi.BoolInput                                    `pulumi:"confidential"`
	CreatedAt                          pulumi.StringInput                                  `pulumi:"createdAt"`
	Description                        pulumi.StringInput                                  `pulumi:"description"`
	DiscussionLocked                   pulumi.BoolInput                                    `pulumi:"discussionLocked"`
	DiscussionToResolve                pulumi.StringInput                                  `pulumi:"discussionToResolve"`
	Downvotes                          pulumi.IntInput                                     `pulumi:"downvotes"`
	DueDate                            pulumi.StringInput                                  `pulumi:"dueDate"`
	EpicId                             pulumi.IntInput                                     `pulumi:"epicId"`
	EpicIssueId                        pulumi.IntInput                                     `pulumi:"epicIssueId"`
	ExternalId                         pulumi.StringInput                                  `pulumi:"externalId"`
	HumanTimeEstimate                  pulumi.StringInput                                  `pulumi:"humanTimeEstimate"`
	HumanTotalTimeSpent                pulumi.StringInput                                  `pulumi:"humanTotalTimeSpent"`
	Iid                                pulumi.IntInput                                     `pulumi:"iid"`
	IssueId                            pulumi.IntInput                                     `pulumi:"issueId"`
	IssueLinkId                        pulumi.IntInput                                     `pulumi:"issueLinkId"`
	IssueType                          pulumi.StringInput                                  `pulumi:"issueType"`
	Labels                             pulumi.StringArrayInput                             `pulumi:"labels"`
	Links                              pulumi.StringMapInput                               `pulumi:"links"`
	MergeRequestToResolveDiscussionsOf pulumi.IntInput                                     `pulumi:"mergeRequestToResolveDiscussionsOf"`
	MergeRequestsCount                 pulumi.IntInput                                     `pulumi:"mergeRequestsCount"`
	MilestoneId                        pulumi.IntInput                                     `pulumi:"milestoneId"`
	MovedToId                          pulumi.IntInput                                     `pulumi:"movedToId"`
	Project                            pulumi.StringInput                                  `pulumi:"project"`
	References                         pulumi.StringMapInput                               `pulumi:"references"`
	State                              pulumi.StringInput                                  `pulumi:"state"`
	Subscribed                         pulumi.BoolInput                                    `pulumi:"subscribed"`
	TaskCompletionStatuses             GetProjectIssuesIssueTaskCompletionStatusArrayInput `pulumi:"taskCompletionStatuses"`
	TimeEstimate                       pulumi.IntInput                                     `pulumi:"timeEstimate"`
	Title                              pulumi.StringInput                                  `pulumi:"title"`
	TotalTimeSpent                     pulumi.IntInput                                     `pulumi:"totalTimeSpent"`
	UpdatedAt                          pulumi.StringInput                                  `pulumi:"updatedAt"`
	Upvotes                            pulumi.IntInput                                     `pulumi:"upvotes"`
	UserNotesCount                     pulumi.IntInput                                     `pulumi:"userNotesCount"`
	WebUrl                             pulumi.StringInput                                  `pulumi:"webUrl"`
	Weight                             pulumi.IntInput                                     `pulumi:"weight"`
}

func (GetProjectIssuesIssueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectIssuesIssue)(nil)).Elem()
}

func (i GetProjectIssuesIssueArgs) ToGetProjectIssuesIssueOutput() GetProjectIssuesIssueOutput {
	return i.ToGetProjectIssuesIssueOutputWithContext(context.Background())
}

func (i GetProjectIssuesIssueArgs) ToGetProjectIssuesIssueOutputWithContext(ctx context.Context) GetProjectIssuesIssueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectIssuesIssueOutput)
}

// GetProjectIssuesIssueArrayInput is an input type that accepts GetProjectIssuesIssueArray and GetProjectIssuesIssueArrayOutput values.
// You can construct a concrete instance of `GetProjectIssuesIssueArrayInput` via:
//
//          GetProjectIssuesIssueArray{ GetProjectIssuesIssueArgs{...} }
type GetProjectIssuesIssueArrayInput interface {
	pulumi.Input

	ToGetProjectIssuesIssueArrayOutput() GetProjectIssuesIssueArrayOutput
	ToGetProjectIssuesIssueArrayOutputWithContext(context.Context) GetProjectIssuesIssueArrayOutput
}

type GetProjectIssuesIssueArray []GetProjectIssuesIssueInput

func (GetProjectIssuesIssueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectIssuesIssue)(nil)).Elem()
}

func (i GetProjectIssuesIssueArray) ToGetProjectIssuesIssueArrayOutput() GetProjectIssuesIssueArrayOutput {
	return i.ToGetProjectIssuesIssueArrayOutputWithContext(context.Background())
}

func (i GetProjectIssuesIssueArray) ToGetProjectIssuesIssueArrayOutputWithContext(ctx context.Context) GetProjectIssuesIssueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectIssuesIssueArrayOutput)
}

type GetProjectIssuesIssueOutput struct{ *pulumi.OutputState }

func (GetProjectIssuesIssueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectIssuesIssue)(nil)).Elem()
}

func (o GetProjectIssuesIssueOutput) ToGetProjectIssuesIssueOutput() GetProjectIssuesIssueOutput {
	return o
}

func (o GetProjectIssuesIssueOutput) ToGetProjectIssuesIssueOutputWithContext(ctx context.Context) GetProjectIssuesIssueOutput {
	return o
}

func (o GetProjectIssuesIssueOutput) AssigneeIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) []int { return v.AssigneeIds }).(pulumi.IntArrayOutput)
}

func (o GetProjectIssuesIssueOutput) AuthorId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.AuthorId }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) ClosedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.ClosedAt }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) ClosedByUserId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.ClosedByUserId }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) Confidential() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) bool { return v.Confidential }).(pulumi.BoolOutput)
}

func (o GetProjectIssuesIssueOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) DiscussionLocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) bool { return v.DiscussionLocked }).(pulumi.BoolOutput)
}

func (o GetProjectIssuesIssueOutput) DiscussionToResolve() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.DiscussionToResolve }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) Downvotes() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.Downvotes }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) DueDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.DueDate }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) EpicId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.EpicId }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) EpicIssueId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.EpicIssueId }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) HumanTimeEstimate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.HumanTimeEstimate }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) HumanTotalTimeSpent() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.HumanTotalTimeSpent }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) Iid() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.Iid }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) IssueId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.IssueId }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) IssueLinkId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.IssueLinkId }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) IssueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.IssueType }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

func (o GetProjectIssuesIssueOutput) Links() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) map[string]string { return v.Links }).(pulumi.StringMapOutput)
}

func (o GetProjectIssuesIssueOutput) MergeRequestToResolveDiscussionsOf() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.MergeRequestToResolveDiscussionsOf }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) MergeRequestsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.MergeRequestsCount }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) MilestoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.MilestoneId }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) MovedToId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.MovedToId }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) References() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) map[string]string { return v.References }).(pulumi.StringMapOutput)
}

func (o GetProjectIssuesIssueOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.State }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) Subscribed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) bool { return v.Subscribed }).(pulumi.BoolOutput)
}

func (o GetProjectIssuesIssueOutput) TaskCompletionStatuses() GetProjectIssuesIssueTaskCompletionStatusArrayOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) []GetProjectIssuesIssueTaskCompletionStatus {
		return v.TaskCompletionStatuses
	}).(GetProjectIssuesIssueTaskCompletionStatusArrayOutput)
}

func (o GetProjectIssuesIssueOutput) TimeEstimate() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.TimeEstimate }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.Title }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) TotalTimeSpent() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.TotalTimeSpent }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) Upvotes() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.Upvotes }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) UserNotesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.UserNotesCount }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueOutput) WebUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) string { return v.WebUrl }).(pulumi.StringOutput)
}

func (o GetProjectIssuesIssueOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssue) int { return v.Weight }).(pulumi.IntOutput)
}

type GetProjectIssuesIssueArrayOutput struct{ *pulumi.OutputState }

func (GetProjectIssuesIssueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectIssuesIssue)(nil)).Elem()
}

func (o GetProjectIssuesIssueArrayOutput) ToGetProjectIssuesIssueArrayOutput() GetProjectIssuesIssueArrayOutput {
	return o
}

func (o GetProjectIssuesIssueArrayOutput) ToGetProjectIssuesIssueArrayOutputWithContext(ctx context.Context) GetProjectIssuesIssueArrayOutput {
	return o
}

func (o GetProjectIssuesIssueArrayOutput) Index(i pulumi.IntInput) GetProjectIssuesIssueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectIssuesIssue {
		return vs[0].([]GetProjectIssuesIssue)[vs[1].(int)]
	}).(GetProjectIssuesIssueOutput)
}

type GetProjectIssuesIssueTaskCompletionStatus struct {
	CompletedCount int `pulumi:"completedCount"`
	Count          int `pulumi:"count"`
}

// GetProjectIssuesIssueTaskCompletionStatusInput is an input type that accepts GetProjectIssuesIssueTaskCompletionStatusArgs and GetProjectIssuesIssueTaskCompletionStatusOutput values.
// You can construct a concrete instance of `GetProjectIssuesIssueTaskCompletionStatusInput` via:
//
//          GetProjectIssuesIssueTaskCompletionStatusArgs{...}
type GetProjectIssuesIssueTaskCompletionStatusInput interface {
	pulumi.Input

	ToGetProjectIssuesIssueTaskCompletionStatusOutput() GetProjectIssuesIssueTaskCompletionStatusOutput
	ToGetProjectIssuesIssueTaskCompletionStatusOutputWithContext(context.Context) GetProjectIssuesIssueTaskCompletionStatusOutput
}

type GetProjectIssuesIssueTaskCompletionStatusArgs struct {
	CompletedCount pulumi.IntInput `pulumi:"completedCount"`
	Count          pulumi.IntInput `pulumi:"count"`
}

func (GetProjectIssuesIssueTaskCompletionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectIssuesIssueTaskCompletionStatus)(nil)).Elem()
}

func (i GetProjectIssuesIssueTaskCompletionStatusArgs) ToGetProjectIssuesIssueTaskCompletionStatusOutput() GetProjectIssuesIssueTaskCompletionStatusOutput {
	return i.ToGetProjectIssuesIssueTaskCompletionStatusOutputWithContext(context.Background())
}

func (i GetProjectIssuesIssueTaskCompletionStatusArgs) ToGetProjectIssuesIssueTaskCompletionStatusOutputWithContext(ctx context.Context) GetProjectIssuesIssueTaskCompletionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectIssuesIssueTaskCompletionStatusOutput)
}

// GetProjectIssuesIssueTaskCompletionStatusArrayInput is an input type that accepts GetProjectIssuesIssueTaskCompletionStatusArray and GetProjectIssuesIssueTaskCompletionStatusArrayOutput values.
// You can construct a concrete instance of `GetProjectIssuesIssueTaskCompletionStatusArrayInput` via:
//
//          GetProjectIssuesIssueTaskCompletionStatusArray{ GetProjectIssuesIssueTaskCompletionStatusArgs{...} }
type GetProjectIssuesIssueTaskCompletionStatusArrayInput interface {
	pulumi.Input

	ToGetProjectIssuesIssueTaskCompletionStatusArrayOutput() GetProjectIssuesIssueTaskCompletionStatusArrayOutput
	ToGetProjectIssuesIssueTaskCompletionStatusArrayOutputWithContext(context.Context) GetProjectIssuesIssueTaskCompletionStatusArrayOutput
}

type GetProjectIssuesIssueTaskCompletionStatusArray []GetProjectIssuesIssueTaskCompletionStatusInput

func (GetProjectIssuesIssueTaskCompletionStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectIssuesIssueTaskCompletionStatus)(nil)).Elem()
}

func (i GetProjectIssuesIssueTaskCompletionStatusArray) ToGetProjectIssuesIssueTaskCompletionStatusArrayOutput() GetProjectIssuesIssueTaskCompletionStatusArrayOutput {
	return i.ToGetProjectIssuesIssueTaskCompletionStatusArrayOutputWithContext(context.Background())
}

func (i GetProjectIssuesIssueTaskCompletionStatusArray) ToGetProjectIssuesIssueTaskCompletionStatusArrayOutputWithContext(ctx context.Context) GetProjectIssuesIssueTaskCompletionStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectIssuesIssueTaskCompletionStatusArrayOutput)
}

type GetProjectIssuesIssueTaskCompletionStatusOutput struct{ *pulumi.OutputState }

func (GetProjectIssuesIssueTaskCompletionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectIssuesIssueTaskCompletionStatus)(nil)).Elem()
}

func (o GetProjectIssuesIssueTaskCompletionStatusOutput) ToGetProjectIssuesIssueTaskCompletionStatusOutput() GetProjectIssuesIssueTaskCompletionStatusOutput {
	return o
}

func (o GetProjectIssuesIssueTaskCompletionStatusOutput) ToGetProjectIssuesIssueTaskCompletionStatusOutputWithContext(ctx context.Context) GetProjectIssuesIssueTaskCompletionStatusOutput {
	return o
}

func (o GetProjectIssuesIssueTaskCompletionStatusOutput) CompletedCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssueTaskCompletionStatus) int { return v.CompletedCount }).(pulumi.IntOutput)
}

func (o GetProjectIssuesIssueTaskCompletionStatusOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectIssuesIssueTaskCompletionStatus) int { return v.Count }).(pulumi.IntOutput)
}

type GetProjectIssuesIssueTaskCompletionStatusArrayOutput struct{ *pulumi.OutputState }

func (GetProjectIssuesIssueTaskCompletionStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectIssuesIssueTaskCompletionStatus)(nil)).Elem()
}

func (o GetProjectIssuesIssueTaskCompletionStatusArrayOutput) ToGetProjectIssuesIssueTaskCompletionStatusArrayOutput() GetProjectIssuesIssueTaskCompletionStatusArrayOutput {
	return o
}

func (o GetProjectIssuesIssueTaskCompletionStatusArrayOutput) ToGetProjectIssuesIssueTaskCompletionStatusArrayOutputWithContext(ctx context.Context) GetProjectIssuesIssueTaskCompletionStatusArrayOutput {
	return o
}

func (o GetProjectIssuesIssueTaskCompletionStatusArrayOutput) Index(i pulumi.IntInput) GetProjectIssuesIssueTaskCompletionStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectIssuesIssueTaskCompletionStatus {
		return vs[0].([]GetProjectIssuesIssueTaskCompletionStatus)[vs[1].(int)]
	}).(GetProjectIssuesIssueTaskCompletionStatusOutput)
}

type GetProjectProtectedBranchMergeAccessLevel struct {
	AccessLevel            string `pulumi:"accessLevel"`
	AccessLevelDescription string `pulumi:"accessLevelDescription"`
	GroupId                int    `pulumi:"groupId"`
	UserId                 int    `pulumi:"userId"`
}

// GetProjectProtectedBranchMergeAccessLevelInput is an input type that accepts GetProjectProtectedBranchMergeAccessLevelArgs and GetProjectProtectedBranchMergeAccessLevelOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchMergeAccessLevelInput` via:
//
//          GetProjectProtectedBranchMergeAccessLevelArgs{...}
type GetProjectProtectedBranchMergeAccessLevelInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchMergeAccessLevelOutput() GetProjectProtectedBranchMergeAccessLevelOutput
	ToGetProjectProtectedBranchMergeAccessLevelOutputWithContext(context.Context) GetProjectProtectedBranchMergeAccessLevelOutput
}

type GetProjectProtectedBranchMergeAccessLevelArgs struct {
	AccessLevel            pulumi.StringInput `pulumi:"accessLevel"`
	AccessLevelDescription pulumi.StringInput `pulumi:"accessLevelDescription"`
	GroupId                pulumi.IntInput    `pulumi:"groupId"`
	UserId                 pulumi.IntInput    `pulumi:"userId"`
}

func (GetProjectProtectedBranchMergeAccessLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchMergeAccessLevel)(nil)).Elem()
}

func (i GetProjectProtectedBranchMergeAccessLevelArgs) ToGetProjectProtectedBranchMergeAccessLevelOutput() GetProjectProtectedBranchMergeAccessLevelOutput {
	return i.ToGetProjectProtectedBranchMergeAccessLevelOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchMergeAccessLevelArgs) ToGetProjectProtectedBranchMergeAccessLevelOutputWithContext(ctx context.Context) GetProjectProtectedBranchMergeAccessLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchMergeAccessLevelOutput)
}

// GetProjectProtectedBranchMergeAccessLevelArrayInput is an input type that accepts GetProjectProtectedBranchMergeAccessLevelArray and GetProjectProtectedBranchMergeAccessLevelArrayOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchMergeAccessLevelArrayInput` via:
//
//          GetProjectProtectedBranchMergeAccessLevelArray{ GetProjectProtectedBranchMergeAccessLevelArgs{...} }
type GetProjectProtectedBranchMergeAccessLevelArrayInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchMergeAccessLevelArrayOutput() GetProjectProtectedBranchMergeAccessLevelArrayOutput
	ToGetProjectProtectedBranchMergeAccessLevelArrayOutputWithContext(context.Context) GetProjectProtectedBranchMergeAccessLevelArrayOutput
}

type GetProjectProtectedBranchMergeAccessLevelArray []GetProjectProtectedBranchMergeAccessLevelInput

func (GetProjectProtectedBranchMergeAccessLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchMergeAccessLevel)(nil)).Elem()
}

func (i GetProjectProtectedBranchMergeAccessLevelArray) ToGetProjectProtectedBranchMergeAccessLevelArrayOutput() GetProjectProtectedBranchMergeAccessLevelArrayOutput {
	return i.ToGetProjectProtectedBranchMergeAccessLevelArrayOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchMergeAccessLevelArray) ToGetProjectProtectedBranchMergeAccessLevelArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchMergeAccessLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchMergeAccessLevelArrayOutput)
}

type GetProjectProtectedBranchMergeAccessLevelOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchMergeAccessLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchMergeAccessLevel)(nil)).Elem()
}

func (o GetProjectProtectedBranchMergeAccessLevelOutput) ToGetProjectProtectedBranchMergeAccessLevelOutput() GetProjectProtectedBranchMergeAccessLevelOutput {
	return o
}

func (o GetProjectProtectedBranchMergeAccessLevelOutput) ToGetProjectProtectedBranchMergeAccessLevelOutputWithContext(ctx context.Context) GetProjectProtectedBranchMergeAccessLevelOutput {
	return o
}

func (o GetProjectProtectedBranchMergeAccessLevelOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchMergeAccessLevel) string { return v.AccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectProtectedBranchMergeAccessLevelOutput) AccessLevelDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchMergeAccessLevel) string { return v.AccessLevelDescription }).(pulumi.StringOutput)
}

func (o GetProjectProtectedBranchMergeAccessLevelOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchMergeAccessLevel) int { return v.GroupId }).(pulumi.IntOutput)
}

func (o GetProjectProtectedBranchMergeAccessLevelOutput) UserId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchMergeAccessLevel) int { return v.UserId }).(pulumi.IntOutput)
}

type GetProjectProtectedBranchMergeAccessLevelArrayOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchMergeAccessLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchMergeAccessLevel)(nil)).Elem()
}

func (o GetProjectProtectedBranchMergeAccessLevelArrayOutput) ToGetProjectProtectedBranchMergeAccessLevelArrayOutput() GetProjectProtectedBranchMergeAccessLevelArrayOutput {
	return o
}

func (o GetProjectProtectedBranchMergeAccessLevelArrayOutput) ToGetProjectProtectedBranchMergeAccessLevelArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchMergeAccessLevelArrayOutput {
	return o
}

func (o GetProjectProtectedBranchMergeAccessLevelArrayOutput) Index(i pulumi.IntInput) GetProjectProtectedBranchMergeAccessLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectProtectedBranchMergeAccessLevel {
		return vs[0].([]GetProjectProtectedBranchMergeAccessLevel)[vs[1].(int)]
	}).(GetProjectProtectedBranchMergeAccessLevelOutput)
}

type GetProjectProtectedBranchPushAccessLevel struct {
	AccessLevel            string `pulumi:"accessLevel"`
	AccessLevelDescription string `pulumi:"accessLevelDescription"`
	GroupId                int    `pulumi:"groupId"`
	UserId                 int    `pulumi:"userId"`
}

// GetProjectProtectedBranchPushAccessLevelInput is an input type that accepts GetProjectProtectedBranchPushAccessLevelArgs and GetProjectProtectedBranchPushAccessLevelOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchPushAccessLevelInput` via:
//
//          GetProjectProtectedBranchPushAccessLevelArgs{...}
type GetProjectProtectedBranchPushAccessLevelInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchPushAccessLevelOutput() GetProjectProtectedBranchPushAccessLevelOutput
	ToGetProjectProtectedBranchPushAccessLevelOutputWithContext(context.Context) GetProjectProtectedBranchPushAccessLevelOutput
}

type GetProjectProtectedBranchPushAccessLevelArgs struct {
	AccessLevel            pulumi.StringInput `pulumi:"accessLevel"`
	AccessLevelDescription pulumi.StringInput `pulumi:"accessLevelDescription"`
	GroupId                pulumi.IntInput    `pulumi:"groupId"`
	UserId                 pulumi.IntInput    `pulumi:"userId"`
}

func (GetProjectProtectedBranchPushAccessLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchPushAccessLevel)(nil)).Elem()
}

func (i GetProjectProtectedBranchPushAccessLevelArgs) ToGetProjectProtectedBranchPushAccessLevelOutput() GetProjectProtectedBranchPushAccessLevelOutput {
	return i.ToGetProjectProtectedBranchPushAccessLevelOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchPushAccessLevelArgs) ToGetProjectProtectedBranchPushAccessLevelOutputWithContext(ctx context.Context) GetProjectProtectedBranchPushAccessLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchPushAccessLevelOutput)
}

// GetProjectProtectedBranchPushAccessLevelArrayInput is an input type that accepts GetProjectProtectedBranchPushAccessLevelArray and GetProjectProtectedBranchPushAccessLevelArrayOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchPushAccessLevelArrayInput` via:
//
//          GetProjectProtectedBranchPushAccessLevelArray{ GetProjectProtectedBranchPushAccessLevelArgs{...} }
type GetProjectProtectedBranchPushAccessLevelArrayInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchPushAccessLevelArrayOutput() GetProjectProtectedBranchPushAccessLevelArrayOutput
	ToGetProjectProtectedBranchPushAccessLevelArrayOutputWithContext(context.Context) GetProjectProtectedBranchPushAccessLevelArrayOutput
}

type GetProjectProtectedBranchPushAccessLevelArray []GetProjectProtectedBranchPushAccessLevelInput

func (GetProjectProtectedBranchPushAccessLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchPushAccessLevel)(nil)).Elem()
}

func (i GetProjectProtectedBranchPushAccessLevelArray) ToGetProjectProtectedBranchPushAccessLevelArrayOutput() GetProjectProtectedBranchPushAccessLevelArrayOutput {
	return i.ToGetProjectProtectedBranchPushAccessLevelArrayOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchPushAccessLevelArray) ToGetProjectProtectedBranchPushAccessLevelArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchPushAccessLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchPushAccessLevelArrayOutput)
}

type GetProjectProtectedBranchPushAccessLevelOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchPushAccessLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchPushAccessLevel)(nil)).Elem()
}

func (o GetProjectProtectedBranchPushAccessLevelOutput) ToGetProjectProtectedBranchPushAccessLevelOutput() GetProjectProtectedBranchPushAccessLevelOutput {
	return o
}

func (o GetProjectProtectedBranchPushAccessLevelOutput) ToGetProjectProtectedBranchPushAccessLevelOutputWithContext(ctx context.Context) GetProjectProtectedBranchPushAccessLevelOutput {
	return o
}

func (o GetProjectProtectedBranchPushAccessLevelOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchPushAccessLevel) string { return v.AccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectProtectedBranchPushAccessLevelOutput) AccessLevelDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchPushAccessLevel) string { return v.AccessLevelDescription }).(pulumi.StringOutput)
}

func (o GetProjectProtectedBranchPushAccessLevelOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchPushAccessLevel) int { return v.GroupId }).(pulumi.IntOutput)
}

func (o GetProjectProtectedBranchPushAccessLevelOutput) UserId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchPushAccessLevel) int { return v.UserId }).(pulumi.IntOutput)
}

type GetProjectProtectedBranchPushAccessLevelArrayOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchPushAccessLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchPushAccessLevel)(nil)).Elem()
}

func (o GetProjectProtectedBranchPushAccessLevelArrayOutput) ToGetProjectProtectedBranchPushAccessLevelArrayOutput() GetProjectProtectedBranchPushAccessLevelArrayOutput {
	return o
}

func (o GetProjectProtectedBranchPushAccessLevelArrayOutput) ToGetProjectProtectedBranchPushAccessLevelArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchPushAccessLevelArrayOutput {
	return o
}

func (o GetProjectProtectedBranchPushAccessLevelArrayOutput) Index(i pulumi.IntInput) GetProjectProtectedBranchPushAccessLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectProtectedBranchPushAccessLevel {
		return vs[0].([]GetProjectProtectedBranchPushAccessLevel)[vs[1].(int)]
	}).(GetProjectProtectedBranchPushAccessLevelOutput)
}

type GetProjectProtectedBranchesProtectedBranch struct {
	AllowForcePush            bool                                                         `pulumi:"allowForcePush"`
	CodeOwnerApprovalRequired bool                                                         `pulumi:"codeOwnerApprovalRequired"`
	Id                        int                                                          `pulumi:"id"`
	MergeAccessLevels         []GetProjectProtectedBranchesProtectedBranchMergeAccessLevel `pulumi:"mergeAccessLevels"`
	Name                      string                                                       `pulumi:"name"`
	PushAccessLevels          []GetProjectProtectedBranchesProtectedBranchPushAccessLevel  `pulumi:"pushAccessLevels"`
}

// GetProjectProtectedBranchesProtectedBranchInput is an input type that accepts GetProjectProtectedBranchesProtectedBranchArgs and GetProjectProtectedBranchesProtectedBranchOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchesProtectedBranchInput` via:
//
//          GetProjectProtectedBranchesProtectedBranchArgs{...}
type GetProjectProtectedBranchesProtectedBranchInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchesProtectedBranchOutput() GetProjectProtectedBranchesProtectedBranchOutput
	ToGetProjectProtectedBranchesProtectedBranchOutputWithContext(context.Context) GetProjectProtectedBranchesProtectedBranchOutput
}

type GetProjectProtectedBranchesProtectedBranchArgs struct {
	AllowForcePush            pulumi.BoolInput                                                     `pulumi:"allowForcePush"`
	CodeOwnerApprovalRequired pulumi.BoolInput                                                     `pulumi:"codeOwnerApprovalRequired"`
	Id                        pulumi.IntInput                                                      `pulumi:"id"`
	MergeAccessLevels         GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayInput `pulumi:"mergeAccessLevels"`
	Name                      pulumi.StringInput                                                   `pulumi:"name"`
	PushAccessLevels          GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayInput  `pulumi:"pushAccessLevels"`
}

func (GetProjectProtectedBranchesProtectedBranchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranch)(nil)).Elem()
}

func (i GetProjectProtectedBranchesProtectedBranchArgs) ToGetProjectProtectedBranchesProtectedBranchOutput() GetProjectProtectedBranchesProtectedBranchOutput {
	return i.ToGetProjectProtectedBranchesProtectedBranchOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchesProtectedBranchArgs) ToGetProjectProtectedBranchesProtectedBranchOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchesProtectedBranchOutput)
}

// GetProjectProtectedBranchesProtectedBranchArrayInput is an input type that accepts GetProjectProtectedBranchesProtectedBranchArray and GetProjectProtectedBranchesProtectedBranchArrayOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchesProtectedBranchArrayInput` via:
//
//          GetProjectProtectedBranchesProtectedBranchArray{ GetProjectProtectedBranchesProtectedBranchArgs{...} }
type GetProjectProtectedBranchesProtectedBranchArrayInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchesProtectedBranchArrayOutput() GetProjectProtectedBranchesProtectedBranchArrayOutput
	ToGetProjectProtectedBranchesProtectedBranchArrayOutputWithContext(context.Context) GetProjectProtectedBranchesProtectedBranchArrayOutput
}

type GetProjectProtectedBranchesProtectedBranchArray []GetProjectProtectedBranchesProtectedBranchInput

func (GetProjectProtectedBranchesProtectedBranchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchesProtectedBranch)(nil)).Elem()
}

func (i GetProjectProtectedBranchesProtectedBranchArray) ToGetProjectProtectedBranchesProtectedBranchArrayOutput() GetProjectProtectedBranchesProtectedBranchArrayOutput {
	return i.ToGetProjectProtectedBranchesProtectedBranchArrayOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchesProtectedBranchArray) ToGetProjectProtectedBranchesProtectedBranchArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchesProtectedBranchArrayOutput)
}

type GetProjectProtectedBranchesProtectedBranchOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchesProtectedBranchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranch)(nil)).Elem()
}

func (o GetProjectProtectedBranchesProtectedBranchOutput) ToGetProjectProtectedBranchesProtectedBranchOutput() GetProjectProtectedBranchesProtectedBranchOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchOutput) ToGetProjectProtectedBranchesProtectedBranchOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchOutput) AllowForcePush() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranch) bool { return v.AllowForcePush }).(pulumi.BoolOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchOutput) CodeOwnerApprovalRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranch) bool { return v.CodeOwnerApprovalRequired }).(pulumi.BoolOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranch) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchOutput) MergeAccessLevels() GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranch) []GetProjectProtectedBranchesProtectedBranchMergeAccessLevel {
		return v.MergeAccessLevels
	}).(GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranch) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchOutput) PushAccessLevels() GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranch) []GetProjectProtectedBranchesProtectedBranchPushAccessLevel {
		return v.PushAccessLevels
	}).(GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput)
}

type GetProjectProtectedBranchesProtectedBranchArrayOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchesProtectedBranchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchesProtectedBranch)(nil)).Elem()
}

func (o GetProjectProtectedBranchesProtectedBranchArrayOutput) ToGetProjectProtectedBranchesProtectedBranchArrayOutput() GetProjectProtectedBranchesProtectedBranchArrayOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchArrayOutput) ToGetProjectProtectedBranchesProtectedBranchArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchArrayOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchArrayOutput) Index(i pulumi.IntInput) GetProjectProtectedBranchesProtectedBranchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectProtectedBranchesProtectedBranch {
		return vs[0].([]GetProjectProtectedBranchesProtectedBranch)[vs[1].(int)]
	}).(GetProjectProtectedBranchesProtectedBranchOutput)
}

type GetProjectProtectedBranchesProtectedBranchMergeAccessLevel struct {
	AccessLevel            string `pulumi:"accessLevel"`
	AccessLevelDescription string `pulumi:"accessLevelDescription"`
	GroupId                int    `pulumi:"groupId"`
	UserId                 int    `pulumi:"userId"`
}

// GetProjectProtectedBranchesProtectedBranchMergeAccessLevelInput is an input type that accepts GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArgs and GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchesProtectedBranchMergeAccessLevelInput` via:
//
//          GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArgs{...}
type GetProjectProtectedBranchesProtectedBranchMergeAccessLevelInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput() GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput
	ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutputWithContext(context.Context) GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput
}

type GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArgs struct {
	AccessLevel            pulumi.StringInput `pulumi:"accessLevel"`
	AccessLevelDescription pulumi.StringInput `pulumi:"accessLevelDescription"`
	GroupId                pulumi.IntInput    `pulumi:"groupId"`
	UserId                 pulumi.IntInput    `pulumi:"userId"`
}

func (GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchMergeAccessLevel)(nil)).Elem()
}

func (i GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArgs) ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput() GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput {
	return i.ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArgs) ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput)
}

// GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayInput is an input type that accepts GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArray and GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayInput` via:
//
//          GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArray{ GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArgs{...} }
type GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput() GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput
	ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutputWithContext(context.Context) GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput
}

type GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArray []GetProjectProtectedBranchesProtectedBranchMergeAccessLevelInput

func (GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchesProtectedBranchMergeAccessLevel)(nil)).Elem()
}

func (i GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArray) ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput() GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput {
	return i.ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArray) ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput)
}

type GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchMergeAccessLevel)(nil)).Elem()
}

func (o GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput) ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput() GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput) ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranchMergeAccessLevel) string { return v.AccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput) AccessLevelDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranchMergeAccessLevel) string {
		return v.AccessLevelDescription
	}).(pulumi.StringOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranchMergeAccessLevel) int { return v.GroupId }).(pulumi.IntOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput) UserId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranchMergeAccessLevel) int { return v.UserId }).(pulumi.IntOutput)
}

type GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchesProtectedBranchMergeAccessLevel)(nil)).Elem()
}

func (o GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput) ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput() GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput) ToGetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput) Index(i pulumi.IntInput) GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectProtectedBranchesProtectedBranchMergeAccessLevel {
		return vs[0].([]GetProjectProtectedBranchesProtectedBranchMergeAccessLevel)[vs[1].(int)]
	}).(GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput)
}

type GetProjectProtectedBranchesProtectedBranchPushAccessLevel struct {
	AccessLevel            string `pulumi:"accessLevel"`
	AccessLevelDescription string `pulumi:"accessLevelDescription"`
	GroupId                int    `pulumi:"groupId"`
	UserId                 int    `pulumi:"userId"`
}

// GetProjectProtectedBranchesProtectedBranchPushAccessLevelInput is an input type that accepts GetProjectProtectedBranchesProtectedBranchPushAccessLevelArgs and GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchesProtectedBranchPushAccessLevelInput` via:
//
//          GetProjectProtectedBranchesProtectedBranchPushAccessLevelArgs{...}
type GetProjectProtectedBranchesProtectedBranchPushAccessLevelInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput() GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput
	ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelOutputWithContext(context.Context) GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput
}

type GetProjectProtectedBranchesProtectedBranchPushAccessLevelArgs struct {
	AccessLevel            pulumi.StringInput `pulumi:"accessLevel"`
	AccessLevelDescription pulumi.StringInput `pulumi:"accessLevelDescription"`
	GroupId                pulumi.IntInput    `pulumi:"groupId"`
	UserId                 pulumi.IntInput    `pulumi:"userId"`
}

func (GetProjectProtectedBranchesProtectedBranchPushAccessLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchPushAccessLevel)(nil)).Elem()
}

func (i GetProjectProtectedBranchesProtectedBranchPushAccessLevelArgs) ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput() GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput {
	return i.ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchesProtectedBranchPushAccessLevelArgs) ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput)
}

// GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayInput is an input type that accepts GetProjectProtectedBranchesProtectedBranchPushAccessLevelArray and GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput values.
// You can construct a concrete instance of `GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayInput` via:
//
//          GetProjectProtectedBranchesProtectedBranchPushAccessLevelArray{ GetProjectProtectedBranchesProtectedBranchPushAccessLevelArgs{...} }
type GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayInput interface {
	pulumi.Input

	ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput() GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput
	ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutputWithContext(context.Context) GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput
}

type GetProjectProtectedBranchesProtectedBranchPushAccessLevelArray []GetProjectProtectedBranchesProtectedBranchPushAccessLevelInput

func (GetProjectProtectedBranchesProtectedBranchPushAccessLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchesProtectedBranchPushAccessLevel)(nil)).Elem()
}

func (i GetProjectProtectedBranchesProtectedBranchPushAccessLevelArray) ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput() GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput {
	return i.ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutputWithContext(context.Background())
}

func (i GetProjectProtectedBranchesProtectedBranchPushAccessLevelArray) ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput)
}

type GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchPushAccessLevel)(nil)).Elem()
}

func (o GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput) ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput() GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput) ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranchPushAccessLevel) string { return v.AccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput) AccessLevelDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranchPushAccessLevel) string {
		return v.AccessLevelDescription
	}).(pulumi.StringOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranchPushAccessLevel) int { return v.GroupId }).(pulumi.IntOutput)
}

func (o GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput) UserId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProtectedBranchesProtectedBranchPushAccessLevel) int { return v.UserId }).(pulumi.IntOutput)
}

type GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput struct{ *pulumi.OutputState }

func (GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProtectedBranchesProtectedBranchPushAccessLevel)(nil)).Elem()
}

func (o GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput) ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput() GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput) ToGetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutputWithContext(ctx context.Context) GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput {
	return o
}

func (o GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput) Index(i pulumi.IntInput) GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectProtectedBranchesProtectedBranchPushAccessLevel {
		return vs[0].([]GetProjectProtectedBranchesProtectedBranchPushAccessLevel)[vs[1].(int)]
	}).(GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput)
}

type GetProjectPushRules struct {
	AuthorEmailRegex           string `pulumi:"authorEmailRegex"`
	BranchNameRegex            string `pulumi:"branchNameRegex"`
	CommitCommitterCheck       bool   `pulumi:"commitCommitterCheck"`
	CommitMessageNegativeRegex string `pulumi:"commitMessageNegativeRegex"`
	CommitMessageRegex         string `pulumi:"commitMessageRegex"`
	DenyDeleteTag              bool   `pulumi:"denyDeleteTag"`
	FileNameRegex              string `pulumi:"fileNameRegex"`
	MaxFileSize                int    `pulumi:"maxFileSize"`
	MemberCheck                bool   `pulumi:"memberCheck"`
	PreventSecrets             bool   `pulumi:"preventSecrets"`
	RejectUnsignedCommits      bool   `pulumi:"rejectUnsignedCommits"`
}

// GetProjectPushRulesInput is an input type that accepts GetProjectPushRulesArgs and GetProjectPushRulesOutput values.
// You can construct a concrete instance of `GetProjectPushRulesInput` via:
//
//          GetProjectPushRulesArgs{...}
type GetProjectPushRulesInput interface {
	pulumi.Input

	ToGetProjectPushRulesOutput() GetProjectPushRulesOutput
	ToGetProjectPushRulesOutputWithContext(context.Context) GetProjectPushRulesOutput
}

type GetProjectPushRulesArgs struct {
	AuthorEmailRegex           pulumi.StringInput `pulumi:"authorEmailRegex"`
	BranchNameRegex            pulumi.StringInput `pulumi:"branchNameRegex"`
	CommitCommitterCheck       pulumi.BoolInput   `pulumi:"commitCommitterCheck"`
	CommitMessageNegativeRegex pulumi.StringInput `pulumi:"commitMessageNegativeRegex"`
	CommitMessageRegex         pulumi.StringInput `pulumi:"commitMessageRegex"`
	DenyDeleteTag              pulumi.BoolInput   `pulumi:"denyDeleteTag"`
	FileNameRegex              pulumi.StringInput `pulumi:"fileNameRegex"`
	MaxFileSize                pulumi.IntInput    `pulumi:"maxFileSize"`
	MemberCheck                pulumi.BoolInput   `pulumi:"memberCheck"`
	PreventSecrets             pulumi.BoolInput   `pulumi:"preventSecrets"`
	RejectUnsignedCommits      pulumi.BoolInput   `pulumi:"rejectUnsignedCommits"`
}

func (GetProjectPushRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectPushRules)(nil)).Elem()
}

func (i GetProjectPushRulesArgs) ToGetProjectPushRulesOutput() GetProjectPushRulesOutput {
	return i.ToGetProjectPushRulesOutputWithContext(context.Background())
}

func (i GetProjectPushRulesArgs) ToGetProjectPushRulesOutputWithContext(ctx context.Context) GetProjectPushRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectPushRulesOutput)
}

type GetProjectPushRulesOutput struct{ *pulumi.OutputState }

func (GetProjectPushRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectPushRules)(nil)).Elem()
}

func (o GetProjectPushRulesOutput) ToGetProjectPushRulesOutput() GetProjectPushRulesOutput {
	return o
}

func (o GetProjectPushRulesOutput) ToGetProjectPushRulesOutputWithContext(ctx context.Context) GetProjectPushRulesOutput {
	return o
}

func (o GetProjectPushRulesOutput) AuthorEmailRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectPushRules) string { return v.AuthorEmailRegex }).(pulumi.StringOutput)
}

func (o GetProjectPushRulesOutput) BranchNameRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectPushRules) string { return v.BranchNameRegex }).(pulumi.StringOutput)
}

func (o GetProjectPushRulesOutput) CommitCommitterCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectPushRules) bool { return v.CommitCommitterCheck }).(pulumi.BoolOutput)
}

func (o GetProjectPushRulesOutput) CommitMessageNegativeRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectPushRules) string { return v.CommitMessageNegativeRegex }).(pulumi.StringOutput)
}

func (o GetProjectPushRulesOutput) CommitMessageRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectPushRules) string { return v.CommitMessageRegex }).(pulumi.StringOutput)
}

func (o GetProjectPushRulesOutput) DenyDeleteTag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectPushRules) bool { return v.DenyDeleteTag }).(pulumi.BoolOutput)
}

func (o GetProjectPushRulesOutput) FileNameRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectPushRules) string { return v.FileNameRegex }).(pulumi.StringOutput)
}

func (o GetProjectPushRulesOutput) MaxFileSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectPushRules) int { return v.MaxFileSize }).(pulumi.IntOutput)
}

func (o GetProjectPushRulesOutput) MemberCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectPushRules) bool { return v.MemberCheck }).(pulumi.BoolOutput)
}

func (o GetProjectPushRulesOutput) PreventSecrets() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectPushRules) bool { return v.PreventSecrets }).(pulumi.BoolOutput)
}

func (o GetProjectPushRulesOutput) RejectUnsignedCommits() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectPushRules) bool { return v.RejectUnsignedCommits }).(pulumi.BoolOutput)
}

type GetProjectTagCommit struct {
	AuthorEmail    string   `pulumi:"authorEmail"`
	AuthorName     string   `pulumi:"authorName"`
	AuthoredDate   string   `pulumi:"authoredDate"`
	CommittedDate  string   `pulumi:"committedDate"`
	CommitterEmail string   `pulumi:"committerEmail"`
	CommitterName  string   `pulumi:"committerName"`
	Id             string   `pulumi:"id"`
	Message        string   `pulumi:"message"`
	ParentIds      []string `pulumi:"parentIds"`
	ShortId        string   `pulumi:"shortId"`
	Title          string   `pulumi:"title"`
}

// GetProjectTagCommitInput is an input type that accepts GetProjectTagCommitArgs and GetProjectTagCommitOutput values.
// You can construct a concrete instance of `GetProjectTagCommitInput` via:
//
//          GetProjectTagCommitArgs{...}
type GetProjectTagCommitInput interface {
	pulumi.Input

	ToGetProjectTagCommitOutput() GetProjectTagCommitOutput
	ToGetProjectTagCommitOutputWithContext(context.Context) GetProjectTagCommitOutput
}

type GetProjectTagCommitArgs struct {
	AuthorEmail    pulumi.StringInput      `pulumi:"authorEmail"`
	AuthorName     pulumi.StringInput      `pulumi:"authorName"`
	AuthoredDate   pulumi.StringInput      `pulumi:"authoredDate"`
	CommittedDate  pulumi.StringInput      `pulumi:"committedDate"`
	CommitterEmail pulumi.StringInput      `pulumi:"committerEmail"`
	CommitterName  pulumi.StringInput      `pulumi:"committerName"`
	Id             pulumi.StringInput      `pulumi:"id"`
	Message        pulumi.StringInput      `pulumi:"message"`
	ParentIds      pulumi.StringArrayInput `pulumi:"parentIds"`
	ShortId        pulumi.StringInput      `pulumi:"shortId"`
	Title          pulumi.StringInput      `pulumi:"title"`
}

func (GetProjectTagCommitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagCommit)(nil)).Elem()
}

func (i GetProjectTagCommitArgs) ToGetProjectTagCommitOutput() GetProjectTagCommitOutput {
	return i.ToGetProjectTagCommitOutputWithContext(context.Background())
}

func (i GetProjectTagCommitArgs) ToGetProjectTagCommitOutputWithContext(ctx context.Context) GetProjectTagCommitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagCommitOutput)
}

// GetProjectTagCommitArrayInput is an input type that accepts GetProjectTagCommitArray and GetProjectTagCommitArrayOutput values.
// You can construct a concrete instance of `GetProjectTagCommitArrayInput` via:
//
//          GetProjectTagCommitArray{ GetProjectTagCommitArgs{...} }
type GetProjectTagCommitArrayInput interface {
	pulumi.Input

	ToGetProjectTagCommitArrayOutput() GetProjectTagCommitArrayOutput
	ToGetProjectTagCommitArrayOutputWithContext(context.Context) GetProjectTagCommitArrayOutput
}

type GetProjectTagCommitArray []GetProjectTagCommitInput

func (GetProjectTagCommitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagCommit)(nil)).Elem()
}

func (i GetProjectTagCommitArray) ToGetProjectTagCommitArrayOutput() GetProjectTagCommitArrayOutput {
	return i.ToGetProjectTagCommitArrayOutputWithContext(context.Background())
}

func (i GetProjectTagCommitArray) ToGetProjectTagCommitArrayOutputWithContext(ctx context.Context) GetProjectTagCommitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagCommitArrayOutput)
}

type GetProjectTagCommitOutput struct{ *pulumi.OutputState }

func (GetProjectTagCommitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagCommit)(nil)).Elem()
}

func (o GetProjectTagCommitOutput) ToGetProjectTagCommitOutput() GetProjectTagCommitOutput {
	return o
}

func (o GetProjectTagCommitOutput) ToGetProjectTagCommitOutputWithContext(ctx context.Context) GetProjectTagCommitOutput {
	return o
}

func (o GetProjectTagCommitOutput) AuthorEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.AuthorEmail }).(pulumi.StringOutput)
}

func (o GetProjectTagCommitOutput) AuthorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.AuthorName }).(pulumi.StringOutput)
}

func (o GetProjectTagCommitOutput) AuthoredDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.AuthoredDate }).(pulumi.StringOutput)
}

func (o GetProjectTagCommitOutput) CommittedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.CommittedDate }).(pulumi.StringOutput)
}

func (o GetProjectTagCommitOutput) CommitterEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.CommitterEmail }).(pulumi.StringOutput)
}

func (o GetProjectTagCommitOutput) CommitterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.CommitterName }).(pulumi.StringOutput)
}

func (o GetProjectTagCommitOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProjectTagCommitOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.Message }).(pulumi.StringOutput)
}

func (o GetProjectTagCommitOutput) ParentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectTagCommit) []string { return v.ParentIds }).(pulumi.StringArrayOutput)
}

func (o GetProjectTagCommitOutput) ShortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.ShortId }).(pulumi.StringOutput)
}

func (o GetProjectTagCommitOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagCommit) string { return v.Title }).(pulumi.StringOutput)
}

type GetProjectTagCommitArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTagCommitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagCommit)(nil)).Elem()
}

func (o GetProjectTagCommitArrayOutput) ToGetProjectTagCommitArrayOutput() GetProjectTagCommitArrayOutput {
	return o
}

func (o GetProjectTagCommitArrayOutput) ToGetProjectTagCommitArrayOutputWithContext(ctx context.Context) GetProjectTagCommitArrayOutput {
	return o
}

func (o GetProjectTagCommitArrayOutput) Index(i pulumi.IntInput) GetProjectTagCommitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTagCommit {
		return vs[0].([]GetProjectTagCommit)[vs[1].(int)]
	}).(GetProjectTagCommitOutput)
}

type GetProjectTagRelease struct {
	Description string `pulumi:"description"`
	TagName     string `pulumi:"tagName"`
}

// GetProjectTagReleaseInput is an input type that accepts GetProjectTagReleaseArgs and GetProjectTagReleaseOutput values.
// You can construct a concrete instance of `GetProjectTagReleaseInput` via:
//
//          GetProjectTagReleaseArgs{...}
type GetProjectTagReleaseInput interface {
	pulumi.Input

	ToGetProjectTagReleaseOutput() GetProjectTagReleaseOutput
	ToGetProjectTagReleaseOutputWithContext(context.Context) GetProjectTagReleaseOutput
}

type GetProjectTagReleaseArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	TagName     pulumi.StringInput `pulumi:"tagName"`
}

func (GetProjectTagReleaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagRelease)(nil)).Elem()
}

func (i GetProjectTagReleaseArgs) ToGetProjectTagReleaseOutput() GetProjectTagReleaseOutput {
	return i.ToGetProjectTagReleaseOutputWithContext(context.Background())
}

func (i GetProjectTagReleaseArgs) ToGetProjectTagReleaseOutputWithContext(ctx context.Context) GetProjectTagReleaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagReleaseOutput)
}

// GetProjectTagReleaseArrayInput is an input type that accepts GetProjectTagReleaseArray and GetProjectTagReleaseArrayOutput values.
// You can construct a concrete instance of `GetProjectTagReleaseArrayInput` via:
//
//          GetProjectTagReleaseArray{ GetProjectTagReleaseArgs{...} }
type GetProjectTagReleaseArrayInput interface {
	pulumi.Input

	ToGetProjectTagReleaseArrayOutput() GetProjectTagReleaseArrayOutput
	ToGetProjectTagReleaseArrayOutputWithContext(context.Context) GetProjectTagReleaseArrayOutput
}

type GetProjectTagReleaseArray []GetProjectTagReleaseInput

func (GetProjectTagReleaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagRelease)(nil)).Elem()
}

func (i GetProjectTagReleaseArray) ToGetProjectTagReleaseArrayOutput() GetProjectTagReleaseArrayOutput {
	return i.ToGetProjectTagReleaseArrayOutputWithContext(context.Background())
}

func (i GetProjectTagReleaseArray) ToGetProjectTagReleaseArrayOutputWithContext(ctx context.Context) GetProjectTagReleaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagReleaseArrayOutput)
}

type GetProjectTagReleaseOutput struct{ *pulumi.OutputState }

func (GetProjectTagReleaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagRelease)(nil)).Elem()
}

func (o GetProjectTagReleaseOutput) ToGetProjectTagReleaseOutput() GetProjectTagReleaseOutput {
	return o
}

func (o GetProjectTagReleaseOutput) ToGetProjectTagReleaseOutputWithContext(ctx context.Context) GetProjectTagReleaseOutput {
	return o
}

func (o GetProjectTagReleaseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagRelease) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetProjectTagReleaseOutput) TagName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagRelease) string { return v.TagName }).(pulumi.StringOutput)
}

type GetProjectTagReleaseArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTagReleaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagRelease)(nil)).Elem()
}

func (o GetProjectTagReleaseArrayOutput) ToGetProjectTagReleaseArrayOutput() GetProjectTagReleaseArrayOutput {
	return o
}

func (o GetProjectTagReleaseArrayOutput) ToGetProjectTagReleaseArrayOutputWithContext(ctx context.Context) GetProjectTagReleaseArrayOutput {
	return o
}

func (o GetProjectTagReleaseArrayOutput) Index(i pulumi.IntInput) GetProjectTagReleaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTagRelease {
		return vs[0].([]GetProjectTagRelease)[vs[1].(int)]
	}).(GetProjectTagReleaseOutput)
}

type GetProjectTagsTag struct {
	Commits   []GetProjectTagsTagCommit  `pulumi:"commits"`
	Message   string                     `pulumi:"message"`
	Name      string                     `pulumi:"name"`
	Protected bool                       `pulumi:"protected"`
	Releases  []GetProjectTagsTagRelease `pulumi:"releases"`
	Target    string                     `pulumi:"target"`
}

// GetProjectTagsTagInput is an input type that accepts GetProjectTagsTagArgs and GetProjectTagsTagOutput values.
// You can construct a concrete instance of `GetProjectTagsTagInput` via:
//
//          GetProjectTagsTagArgs{...}
type GetProjectTagsTagInput interface {
	pulumi.Input

	ToGetProjectTagsTagOutput() GetProjectTagsTagOutput
	ToGetProjectTagsTagOutputWithContext(context.Context) GetProjectTagsTagOutput
}

type GetProjectTagsTagArgs struct {
	Commits   GetProjectTagsTagCommitArrayInput  `pulumi:"commits"`
	Message   pulumi.StringInput                 `pulumi:"message"`
	Name      pulumi.StringInput                 `pulumi:"name"`
	Protected pulumi.BoolInput                   `pulumi:"protected"`
	Releases  GetProjectTagsTagReleaseArrayInput `pulumi:"releases"`
	Target    pulumi.StringInput                 `pulumi:"target"`
}

func (GetProjectTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagsTag)(nil)).Elem()
}

func (i GetProjectTagsTagArgs) ToGetProjectTagsTagOutput() GetProjectTagsTagOutput {
	return i.ToGetProjectTagsTagOutputWithContext(context.Background())
}

func (i GetProjectTagsTagArgs) ToGetProjectTagsTagOutputWithContext(ctx context.Context) GetProjectTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagsTagOutput)
}

// GetProjectTagsTagArrayInput is an input type that accepts GetProjectTagsTagArray and GetProjectTagsTagArrayOutput values.
// You can construct a concrete instance of `GetProjectTagsTagArrayInput` via:
//
//          GetProjectTagsTagArray{ GetProjectTagsTagArgs{...} }
type GetProjectTagsTagArrayInput interface {
	pulumi.Input

	ToGetProjectTagsTagArrayOutput() GetProjectTagsTagArrayOutput
	ToGetProjectTagsTagArrayOutputWithContext(context.Context) GetProjectTagsTagArrayOutput
}

type GetProjectTagsTagArray []GetProjectTagsTagInput

func (GetProjectTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagsTag)(nil)).Elem()
}

func (i GetProjectTagsTagArray) ToGetProjectTagsTagArrayOutput() GetProjectTagsTagArrayOutput {
	return i.ToGetProjectTagsTagArrayOutputWithContext(context.Background())
}

func (i GetProjectTagsTagArray) ToGetProjectTagsTagArrayOutputWithContext(ctx context.Context) GetProjectTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagsTagArrayOutput)
}

type GetProjectTagsTagOutput struct{ *pulumi.OutputState }

func (GetProjectTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagsTag)(nil)).Elem()
}

func (o GetProjectTagsTagOutput) ToGetProjectTagsTagOutput() GetProjectTagsTagOutput {
	return o
}

func (o GetProjectTagsTagOutput) ToGetProjectTagsTagOutputWithContext(ctx context.Context) GetProjectTagsTagOutput {
	return o
}

func (o GetProjectTagsTagOutput) Commits() GetProjectTagsTagCommitArrayOutput {
	return o.ApplyT(func(v GetProjectTagsTag) []GetProjectTagsTagCommit { return v.Commits }).(GetProjectTagsTagCommitArrayOutput)
}

func (o GetProjectTagsTagOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTag) string { return v.Message }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTag) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagOutput) Protected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectTagsTag) bool { return v.Protected }).(pulumi.BoolOutput)
}

func (o GetProjectTagsTagOutput) Releases() GetProjectTagsTagReleaseArrayOutput {
	return o.ApplyT(func(v GetProjectTagsTag) []GetProjectTagsTagRelease { return v.Releases }).(GetProjectTagsTagReleaseArrayOutput)
}

func (o GetProjectTagsTagOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTag) string { return v.Target }).(pulumi.StringOutput)
}

type GetProjectTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagsTag)(nil)).Elem()
}

func (o GetProjectTagsTagArrayOutput) ToGetProjectTagsTagArrayOutput() GetProjectTagsTagArrayOutput {
	return o
}

func (o GetProjectTagsTagArrayOutput) ToGetProjectTagsTagArrayOutputWithContext(ctx context.Context) GetProjectTagsTagArrayOutput {
	return o
}

func (o GetProjectTagsTagArrayOutput) Index(i pulumi.IntInput) GetProjectTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTagsTag {
		return vs[0].([]GetProjectTagsTag)[vs[1].(int)]
	}).(GetProjectTagsTagOutput)
}

type GetProjectTagsTagCommit struct {
	AuthorEmail    string   `pulumi:"authorEmail"`
	AuthorName     string   `pulumi:"authorName"`
	AuthoredDate   string   `pulumi:"authoredDate"`
	CommittedDate  string   `pulumi:"committedDate"`
	CommitterEmail string   `pulumi:"committerEmail"`
	CommitterName  string   `pulumi:"committerName"`
	Id             string   `pulumi:"id"`
	Message        string   `pulumi:"message"`
	ParentIds      []string `pulumi:"parentIds"`
	ShortId        string   `pulumi:"shortId"`
	Title          string   `pulumi:"title"`
}

// GetProjectTagsTagCommitInput is an input type that accepts GetProjectTagsTagCommitArgs and GetProjectTagsTagCommitOutput values.
// You can construct a concrete instance of `GetProjectTagsTagCommitInput` via:
//
//          GetProjectTagsTagCommitArgs{...}
type GetProjectTagsTagCommitInput interface {
	pulumi.Input

	ToGetProjectTagsTagCommitOutput() GetProjectTagsTagCommitOutput
	ToGetProjectTagsTagCommitOutputWithContext(context.Context) GetProjectTagsTagCommitOutput
}

type GetProjectTagsTagCommitArgs struct {
	AuthorEmail    pulumi.StringInput      `pulumi:"authorEmail"`
	AuthorName     pulumi.StringInput      `pulumi:"authorName"`
	AuthoredDate   pulumi.StringInput      `pulumi:"authoredDate"`
	CommittedDate  pulumi.StringInput      `pulumi:"committedDate"`
	CommitterEmail pulumi.StringInput      `pulumi:"committerEmail"`
	CommitterName  pulumi.StringInput      `pulumi:"committerName"`
	Id             pulumi.StringInput      `pulumi:"id"`
	Message        pulumi.StringInput      `pulumi:"message"`
	ParentIds      pulumi.StringArrayInput `pulumi:"parentIds"`
	ShortId        pulumi.StringInput      `pulumi:"shortId"`
	Title          pulumi.StringInput      `pulumi:"title"`
}

func (GetProjectTagsTagCommitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagsTagCommit)(nil)).Elem()
}

func (i GetProjectTagsTagCommitArgs) ToGetProjectTagsTagCommitOutput() GetProjectTagsTagCommitOutput {
	return i.ToGetProjectTagsTagCommitOutputWithContext(context.Background())
}

func (i GetProjectTagsTagCommitArgs) ToGetProjectTagsTagCommitOutputWithContext(ctx context.Context) GetProjectTagsTagCommitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagsTagCommitOutput)
}

// GetProjectTagsTagCommitArrayInput is an input type that accepts GetProjectTagsTagCommitArray and GetProjectTagsTagCommitArrayOutput values.
// You can construct a concrete instance of `GetProjectTagsTagCommitArrayInput` via:
//
//          GetProjectTagsTagCommitArray{ GetProjectTagsTagCommitArgs{...} }
type GetProjectTagsTagCommitArrayInput interface {
	pulumi.Input

	ToGetProjectTagsTagCommitArrayOutput() GetProjectTagsTagCommitArrayOutput
	ToGetProjectTagsTagCommitArrayOutputWithContext(context.Context) GetProjectTagsTagCommitArrayOutput
}

type GetProjectTagsTagCommitArray []GetProjectTagsTagCommitInput

func (GetProjectTagsTagCommitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagsTagCommit)(nil)).Elem()
}

func (i GetProjectTagsTagCommitArray) ToGetProjectTagsTagCommitArrayOutput() GetProjectTagsTagCommitArrayOutput {
	return i.ToGetProjectTagsTagCommitArrayOutputWithContext(context.Background())
}

func (i GetProjectTagsTagCommitArray) ToGetProjectTagsTagCommitArrayOutputWithContext(ctx context.Context) GetProjectTagsTagCommitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagsTagCommitArrayOutput)
}

type GetProjectTagsTagCommitOutput struct{ *pulumi.OutputState }

func (GetProjectTagsTagCommitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagsTagCommit)(nil)).Elem()
}

func (o GetProjectTagsTagCommitOutput) ToGetProjectTagsTagCommitOutput() GetProjectTagsTagCommitOutput {
	return o
}

func (o GetProjectTagsTagCommitOutput) ToGetProjectTagsTagCommitOutputWithContext(ctx context.Context) GetProjectTagsTagCommitOutput {
	return o
}

func (o GetProjectTagsTagCommitOutput) AuthorEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.AuthorEmail }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagCommitOutput) AuthorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.AuthorName }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagCommitOutput) AuthoredDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.AuthoredDate }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagCommitOutput) CommittedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.CommittedDate }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagCommitOutput) CommitterEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.CommitterEmail }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagCommitOutput) CommitterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.CommitterName }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagCommitOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagCommitOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.Message }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagCommitOutput) ParentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) []string { return v.ParentIds }).(pulumi.StringArrayOutput)
}

func (o GetProjectTagsTagCommitOutput) ShortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.ShortId }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagCommitOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagCommit) string { return v.Title }).(pulumi.StringOutput)
}

type GetProjectTagsTagCommitArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTagsTagCommitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagsTagCommit)(nil)).Elem()
}

func (o GetProjectTagsTagCommitArrayOutput) ToGetProjectTagsTagCommitArrayOutput() GetProjectTagsTagCommitArrayOutput {
	return o
}

func (o GetProjectTagsTagCommitArrayOutput) ToGetProjectTagsTagCommitArrayOutputWithContext(ctx context.Context) GetProjectTagsTagCommitArrayOutput {
	return o
}

func (o GetProjectTagsTagCommitArrayOutput) Index(i pulumi.IntInput) GetProjectTagsTagCommitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTagsTagCommit {
		return vs[0].([]GetProjectTagsTagCommit)[vs[1].(int)]
	}).(GetProjectTagsTagCommitOutput)
}

type GetProjectTagsTagRelease struct {
	Description string `pulumi:"description"`
	TagName     string `pulumi:"tagName"`
}

// GetProjectTagsTagReleaseInput is an input type that accepts GetProjectTagsTagReleaseArgs and GetProjectTagsTagReleaseOutput values.
// You can construct a concrete instance of `GetProjectTagsTagReleaseInput` via:
//
//          GetProjectTagsTagReleaseArgs{...}
type GetProjectTagsTagReleaseInput interface {
	pulumi.Input

	ToGetProjectTagsTagReleaseOutput() GetProjectTagsTagReleaseOutput
	ToGetProjectTagsTagReleaseOutputWithContext(context.Context) GetProjectTagsTagReleaseOutput
}

type GetProjectTagsTagReleaseArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	TagName     pulumi.StringInput `pulumi:"tagName"`
}

func (GetProjectTagsTagReleaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagsTagRelease)(nil)).Elem()
}

func (i GetProjectTagsTagReleaseArgs) ToGetProjectTagsTagReleaseOutput() GetProjectTagsTagReleaseOutput {
	return i.ToGetProjectTagsTagReleaseOutputWithContext(context.Background())
}

func (i GetProjectTagsTagReleaseArgs) ToGetProjectTagsTagReleaseOutputWithContext(ctx context.Context) GetProjectTagsTagReleaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagsTagReleaseOutput)
}

// GetProjectTagsTagReleaseArrayInput is an input type that accepts GetProjectTagsTagReleaseArray and GetProjectTagsTagReleaseArrayOutput values.
// You can construct a concrete instance of `GetProjectTagsTagReleaseArrayInput` via:
//
//          GetProjectTagsTagReleaseArray{ GetProjectTagsTagReleaseArgs{...} }
type GetProjectTagsTagReleaseArrayInput interface {
	pulumi.Input

	ToGetProjectTagsTagReleaseArrayOutput() GetProjectTagsTagReleaseArrayOutput
	ToGetProjectTagsTagReleaseArrayOutputWithContext(context.Context) GetProjectTagsTagReleaseArrayOutput
}

type GetProjectTagsTagReleaseArray []GetProjectTagsTagReleaseInput

func (GetProjectTagsTagReleaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagsTagRelease)(nil)).Elem()
}

func (i GetProjectTagsTagReleaseArray) ToGetProjectTagsTagReleaseArrayOutput() GetProjectTagsTagReleaseArrayOutput {
	return i.ToGetProjectTagsTagReleaseArrayOutputWithContext(context.Background())
}

func (i GetProjectTagsTagReleaseArray) ToGetProjectTagsTagReleaseArrayOutputWithContext(ctx context.Context) GetProjectTagsTagReleaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTagsTagReleaseArrayOutput)
}

type GetProjectTagsTagReleaseOutput struct{ *pulumi.OutputState }

func (GetProjectTagsTagReleaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTagsTagRelease)(nil)).Elem()
}

func (o GetProjectTagsTagReleaseOutput) ToGetProjectTagsTagReleaseOutput() GetProjectTagsTagReleaseOutput {
	return o
}

func (o GetProjectTagsTagReleaseOutput) ToGetProjectTagsTagReleaseOutputWithContext(ctx context.Context) GetProjectTagsTagReleaseOutput {
	return o
}

func (o GetProjectTagsTagReleaseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagRelease) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetProjectTagsTagReleaseOutput) TagName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTagsTagRelease) string { return v.TagName }).(pulumi.StringOutput)
}

type GetProjectTagsTagReleaseArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTagsTagReleaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTagsTagRelease)(nil)).Elem()
}

func (o GetProjectTagsTagReleaseArrayOutput) ToGetProjectTagsTagReleaseArrayOutput() GetProjectTagsTagReleaseArrayOutput {
	return o
}

func (o GetProjectTagsTagReleaseArrayOutput) ToGetProjectTagsTagReleaseArrayOutputWithContext(ctx context.Context) GetProjectTagsTagReleaseArrayOutput {
	return o
}

func (o GetProjectTagsTagReleaseArrayOutput) Index(i pulumi.IntInput) GetProjectTagsTagReleaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTagsTagRelease {
		return vs[0].([]GetProjectTagsTagRelease)[vs[1].(int)]
	}).(GetProjectTagsTagReleaseOutput)
}

type GetProjectsProject struct {
	_links                                    map[string]string                             `pulumi:"_links"`
	AllowMergeOnSkippedPipeline               bool                                          `pulumi:"allowMergeOnSkippedPipeline"`
	AnalyticsAccessLevel                      string                                        `pulumi:"analyticsAccessLevel"`
	ApprovalsBeforeMerge                      int                                           `pulumi:"approvalsBeforeMerge"`
	Archived                                  bool                                          `pulumi:"archived"`
	AutoCancelPendingPipelines                string                                        `pulumi:"autoCancelPendingPipelines"`
	AutoDevopsDeployStrategy                  string                                        `pulumi:"autoDevopsDeployStrategy"`
	AutoDevopsEnabled                         bool                                          `pulumi:"autoDevopsEnabled"`
	AutocloseReferencedIssues                 bool                                          `pulumi:"autocloseReferencedIssues"`
	AvatarUrl                                 string                                        `pulumi:"avatarUrl"`
	BuildCoverageRegex                        string                                        `pulumi:"buildCoverageRegex"`
	BuildGitStrategy                          string                                        `pulumi:"buildGitStrategy"`
	BuildTimeout                              int                                           `pulumi:"buildTimeout"`
	BuildsAccessLevel                         string                                        `pulumi:"buildsAccessLevel"`
	CiConfigPath                              string                                        `pulumi:"ciConfigPath"`
	CiForwardDeploymentEnabled                bool                                          `pulumi:"ciForwardDeploymentEnabled"`
	ContainerExpirationPolicies               []GetProjectsProjectContainerExpirationPolicy `pulumi:"containerExpirationPolicies"`
	ContainerRegistryAccessLevel              string                                        `pulumi:"containerRegistryAccessLevel"`
	ContainerRegistryEnabled                  bool                                          `pulumi:"containerRegistryEnabled"`
	CreatedAt                                 string                                        `pulumi:"createdAt"`
	CreatorId                                 int                                           `pulumi:"creatorId"`
	CustomAttributes                          []map[string]interface{}                      `pulumi:"customAttributes"`
	DefaultBranch                             string                                        `pulumi:"defaultBranch"`
	Description                               string                                        `pulumi:"description"`
	EmailsDisabled                            bool                                          `pulumi:"emailsDisabled"`
	ExternalAuthorizationClassificationLabel  string                                        `pulumi:"externalAuthorizationClassificationLabel"`
	ForkedFromProject                         GetProjectsProjectForkedFromProject           `pulumi:"forkedFromProject"`
	ForkingAccessLevel                        string                                        `pulumi:"forkingAccessLevel"`
	ForksCount                                int                                           `pulumi:"forksCount"`
	HttpUrlToRepo                             string                                        `pulumi:"httpUrlToRepo"`
	Id                                        int                                           `pulumi:"id"`
	ImportError                               string                                        `pulumi:"importError"`
	ImportStatus                              string                                        `pulumi:"importStatus"`
	IssuesAccessLevel                         string                                        `pulumi:"issuesAccessLevel"`
	IssuesEnabled                             bool                                          `pulumi:"issuesEnabled"`
	JobsEnabled                               bool                                          `pulumi:"jobsEnabled"`
	LastActivityAt                            string                                        `pulumi:"lastActivityAt"`
	LfsEnabled                                bool                                          `pulumi:"lfsEnabled"`
	MergeCommitTemplate                       string                                        `pulumi:"mergeCommitTemplate"`
	MergeMethod                               string                                        `pulumi:"mergeMethod"`
	MergePipelinesEnabled                     bool                                          `pulumi:"mergePipelinesEnabled"`
	MergeRequestsAccessLevel                  string                                        `pulumi:"mergeRequestsAccessLevel"`
	MergeRequestsEnabled                      bool                                          `pulumi:"mergeRequestsEnabled"`
	MergeTrainsEnabled                        bool                                          `pulumi:"mergeTrainsEnabled"`
	Mirror                                    bool                                          `pulumi:"mirror"`
	MirrorOverwritesDivergedBranches          bool                                          `pulumi:"mirrorOverwritesDivergedBranches"`
	MirrorTriggerBuilds                       bool                                          `pulumi:"mirrorTriggerBuilds"`
	MirrorUserId                              int                                           `pulumi:"mirrorUserId"`
	Name                                      string                                        `pulumi:"name"`
	NameWithNamespace                         string                                        `pulumi:"nameWithNamespace"`
	Namespace                                 GetProjectsProjectNamespace                   `pulumi:"namespace"`
	OnlyAllowMergeIfAllDiscussionsAreResolved bool                                          `pulumi:"onlyAllowMergeIfAllDiscussionsAreResolved"`
	OnlyAllowMergeIfPipelineSucceeds          bool                                          `pulumi:"onlyAllowMergeIfPipelineSucceeds"`
	OnlyMirrorProtectedBranches               bool                                          `pulumi:"onlyMirrorProtectedBranches"`
	OpenIssuesCount                           int                                           `pulumi:"openIssuesCount"`
	OperationsAccessLevel                     string                                        `pulumi:"operationsAccessLevel"`
	Owner                                     GetProjectsProjectOwner                       `pulumi:"owner"`
	PackagesEnabled                           bool                                          `pulumi:"packagesEnabled"`
	Path                                      string                                        `pulumi:"path"`
	PathWithNamespace                         string                                        `pulumi:"pathWithNamespace"`
	Permissions                               GetProjectsProjectPermissions                 `pulumi:"permissions"`
	Public                                    bool                                          `pulumi:"public"`
	PublicBuilds                              bool                                          `pulumi:"publicBuilds"`
	ReadmeUrl                                 string                                        `pulumi:"readmeUrl"`
	RepositoryAccessLevel                     string                                        `pulumi:"repositoryAccessLevel"`
	RepositoryStorage                         string                                        `pulumi:"repositoryStorage"`
	RequestAccessEnabled                      bool                                          `pulumi:"requestAccessEnabled"`
	RequirementsAccessLevel                   string                                        `pulumi:"requirementsAccessLevel"`
	ResolveOutdatedDiffDiscussions            bool                                          `pulumi:"resolveOutdatedDiffDiscussions"`
	RunnersToken                              string                                        `pulumi:"runnersToken"`
	SecurityAndComplianceAccessLevel          string                                        `pulumi:"securityAndComplianceAccessLevel"`
	SharedRunnersEnabled                      bool                                          `pulumi:"sharedRunnersEnabled"`
	SharedWithGroups                          []GetProjectsProjectSharedWithGroup           `pulumi:"sharedWithGroups"`
	SnippetsAccessLevel                       string                                        `pulumi:"snippetsAccessLevel"`
	SnippetsEnabled                           bool                                          `pulumi:"snippetsEnabled"`
	SquashCommitTemplate                      string                                        `pulumi:"squashCommitTemplate"`
	SshUrlToRepo                              string                                        `pulumi:"sshUrlToRepo"`
	StarCount                                 int                                           `pulumi:"starCount"`
	Statistics                                map[string]int                                `pulumi:"statistics"`
	TagLists                                  []string                                      `pulumi:"tagLists"`
	Topics                                    []string                                      `pulumi:"topics"`
	Visibility                                string                                        `pulumi:"visibility"`
	WebUrl                                    string                                        `pulumi:"webUrl"`
	WikiAccessLevel                           string                                        `pulumi:"wikiAccessLevel"`
	WikiEnabled                               bool                                          `pulumi:"wikiEnabled"`
}

// GetProjectsProjectInput is an input type that accepts GetProjectsProjectArgs and GetProjectsProjectOutput values.
// You can construct a concrete instance of `GetProjectsProjectInput` via:
//
//          GetProjectsProjectArgs{...}
type GetProjectsProjectInput interface {
	pulumi.Input

	ToGetProjectsProjectOutput() GetProjectsProjectOutput
	ToGetProjectsProjectOutputWithContext(context.Context) GetProjectsProjectOutput
}

type GetProjectsProjectArgs struct {
	_links                                    pulumi.StringMapInput                                 `pulumi:"_links"`
	AllowMergeOnSkippedPipeline               pulumi.BoolInput                                      `pulumi:"allowMergeOnSkippedPipeline"`
	AnalyticsAccessLevel                      pulumi.StringInput                                    `pulumi:"analyticsAccessLevel"`
	ApprovalsBeforeMerge                      pulumi.IntInput                                       `pulumi:"approvalsBeforeMerge"`
	Archived                                  pulumi.BoolInput                                      `pulumi:"archived"`
	AutoCancelPendingPipelines                pulumi.StringInput                                    `pulumi:"autoCancelPendingPipelines"`
	AutoDevopsDeployStrategy                  pulumi.StringInput                                    `pulumi:"autoDevopsDeployStrategy"`
	AutoDevopsEnabled                         pulumi.BoolInput                                      `pulumi:"autoDevopsEnabled"`
	AutocloseReferencedIssues                 pulumi.BoolInput                                      `pulumi:"autocloseReferencedIssues"`
	AvatarUrl                                 pulumi.StringInput                                    `pulumi:"avatarUrl"`
	BuildCoverageRegex                        pulumi.StringInput                                    `pulumi:"buildCoverageRegex"`
	BuildGitStrategy                          pulumi.StringInput                                    `pulumi:"buildGitStrategy"`
	BuildTimeout                              pulumi.IntInput                                       `pulumi:"buildTimeout"`
	BuildsAccessLevel                         pulumi.StringInput                                    `pulumi:"buildsAccessLevel"`
	CiConfigPath                              pulumi.StringInput                                    `pulumi:"ciConfigPath"`
	CiForwardDeploymentEnabled                pulumi.BoolInput                                      `pulumi:"ciForwardDeploymentEnabled"`
	ContainerExpirationPolicies               GetProjectsProjectContainerExpirationPolicyArrayInput `pulumi:"containerExpirationPolicies"`
	ContainerRegistryAccessLevel              pulumi.StringInput                                    `pulumi:"containerRegistryAccessLevel"`
	ContainerRegistryEnabled                  pulumi.BoolInput                                      `pulumi:"containerRegistryEnabled"`
	CreatedAt                                 pulumi.StringInput                                    `pulumi:"createdAt"`
	CreatorId                                 pulumi.IntInput                                       `pulumi:"creatorId"`
	CustomAttributes                          pulumi.MapArrayInput                                  `pulumi:"customAttributes"`
	DefaultBranch                             pulumi.StringInput                                    `pulumi:"defaultBranch"`
	Description                               pulumi.StringInput                                    `pulumi:"description"`
	EmailsDisabled                            pulumi.BoolInput                                      `pulumi:"emailsDisabled"`
	ExternalAuthorizationClassificationLabel  pulumi.StringInput                                    `pulumi:"externalAuthorizationClassificationLabel"`
	ForkedFromProject                         GetProjectsProjectForkedFromProjectInput              `pulumi:"forkedFromProject"`
	ForkingAccessLevel                        pulumi.StringInput                                    `pulumi:"forkingAccessLevel"`
	ForksCount                                pulumi.IntInput                                       `pulumi:"forksCount"`
	HttpUrlToRepo                             pulumi.StringInput                                    `pulumi:"httpUrlToRepo"`
	Id                                        pulumi.IntInput                                       `pulumi:"id"`
	ImportError                               pulumi.StringInput                                    `pulumi:"importError"`
	ImportStatus                              pulumi.StringInput                                    `pulumi:"importStatus"`
	IssuesAccessLevel                         pulumi.StringInput                                    `pulumi:"issuesAccessLevel"`
	IssuesEnabled                             pulumi.BoolInput                                      `pulumi:"issuesEnabled"`
	JobsEnabled                               pulumi.BoolInput                                      `pulumi:"jobsEnabled"`
	LastActivityAt                            pulumi.StringInput                                    `pulumi:"lastActivityAt"`
	LfsEnabled                                pulumi.BoolInput                                      `pulumi:"lfsEnabled"`
	MergeCommitTemplate                       pulumi.StringInput                                    `pulumi:"mergeCommitTemplate"`
	MergeMethod                               pulumi.StringInput                                    `pulumi:"mergeMethod"`
	MergePipelinesEnabled                     pulumi.BoolInput                                      `pulumi:"mergePipelinesEnabled"`
	MergeRequestsAccessLevel                  pulumi.StringInput                                    `pulumi:"mergeRequestsAccessLevel"`
	MergeRequestsEnabled                      pulumi.BoolInput                                      `pulumi:"mergeRequestsEnabled"`
	MergeTrainsEnabled                        pulumi.BoolInput                                      `pulumi:"mergeTrainsEnabled"`
	Mirror                                    pulumi.BoolInput                                      `pulumi:"mirror"`
	MirrorOverwritesDivergedBranches          pulumi.BoolInput                                      `pulumi:"mirrorOverwritesDivergedBranches"`
	MirrorTriggerBuilds                       pulumi.BoolInput                                      `pulumi:"mirrorTriggerBuilds"`
	MirrorUserId                              pulumi.IntInput                                       `pulumi:"mirrorUserId"`
	Name                                      pulumi.StringInput                                    `pulumi:"name"`
	NameWithNamespace                         pulumi.StringInput                                    `pulumi:"nameWithNamespace"`
	Namespace                                 GetProjectsProjectNamespaceInput                      `pulumi:"namespace"`
	OnlyAllowMergeIfAllDiscussionsAreResolved pulumi.BoolInput                                      `pulumi:"onlyAllowMergeIfAllDiscussionsAreResolved"`
	OnlyAllowMergeIfPipelineSucceeds          pulumi.BoolInput                                      `pulumi:"onlyAllowMergeIfPipelineSucceeds"`
	OnlyMirrorProtectedBranches               pulumi.BoolInput                                      `pulumi:"onlyMirrorProtectedBranches"`
	OpenIssuesCount                           pulumi.IntInput                                       `pulumi:"openIssuesCount"`
	OperationsAccessLevel                     pulumi.StringInput                                    `pulumi:"operationsAccessLevel"`
	Owner                                     GetProjectsProjectOwnerInput                          `pulumi:"owner"`
	PackagesEnabled                           pulumi.BoolInput                                      `pulumi:"packagesEnabled"`
	Path                                      pulumi.StringInput                                    `pulumi:"path"`
	PathWithNamespace                         pulumi.StringInput                                    `pulumi:"pathWithNamespace"`
	Permissions                               GetProjectsProjectPermissionsInput                    `pulumi:"permissions"`
	Public                                    pulumi.BoolInput                                      `pulumi:"public"`
	PublicBuilds                              pulumi.BoolInput                                      `pulumi:"publicBuilds"`
	ReadmeUrl                                 pulumi.StringInput                                    `pulumi:"readmeUrl"`
	RepositoryAccessLevel                     pulumi.StringInput                                    `pulumi:"repositoryAccessLevel"`
	RepositoryStorage                         pulumi.StringInput                                    `pulumi:"repositoryStorage"`
	RequestAccessEnabled                      pulumi.BoolInput                                      `pulumi:"requestAccessEnabled"`
	RequirementsAccessLevel                   pulumi.StringInput                                    `pulumi:"requirementsAccessLevel"`
	ResolveOutdatedDiffDiscussions            pulumi.BoolInput                                      `pulumi:"resolveOutdatedDiffDiscussions"`
	RunnersToken                              pulumi.StringInput                                    `pulumi:"runnersToken"`
	SecurityAndComplianceAccessLevel          pulumi.StringInput                                    `pulumi:"securityAndComplianceAccessLevel"`
	SharedRunnersEnabled                      pulumi.BoolInput                                      `pulumi:"sharedRunnersEnabled"`
	SharedWithGroups                          GetProjectsProjectSharedWithGroupArrayInput           `pulumi:"sharedWithGroups"`
	SnippetsAccessLevel                       pulumi.StringInput                                    `pulumi:"snippetsAccessLevel"`
	SnippetsEnabled                           pulumi.BoolInput                                      `pulumi:"snippetsEnabled"`
	SquashCommitTemplate                      pulumi.StringInput                                    `pulumi:"squashCommitTemplate"`
	SshUrlToRepo                              pulumi.StringInput                                    `pulumi:"sshUrlToRepo"`
	StarCount                                 pulumi.IntInput                                       `pulumi:"starCount"`
	Statistics                                pulumi.IntMapInput                                    `pulumi:"statistics"`
	TagLists                                  pulumi.StringArrayInput                               `pulumi:"tagLists"`
	Topics                                    pulumi.StringArrayInput                               `pulumi:"topics"`
	Visibility                                pulumi.StringInput                                    `pulumi:"visibility"`
	WebUrl                                    pulumi.StringInput                                    `pulumi:"webUrl"`
	WikiAccessLevel                           pulumi.StringInput                                    `pulumi:"wikiAccessLevel"`
	WikiEnabled                               pulumi.BoolInput                                      `pulumi:"wikiEnabled"`
}

func (GetProjectsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return i.ToGetProjectsProjectOutputWithContext(context.Background())
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectOutput)
}

// GetProjectsProjectArrayInput is an input type that accepts GetProjectsProjectArray and GetProjectsProjectArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectArrayInput` via:
//
//          GetProjectsProjectArray{ GetProjectsProjectArgs{...} }
type GetProjectsProjectArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput
	ToGetProjectsProjectArrayOutputWithContext(context.Context) GetProjectsProjectArrayOutput
}

type GetProjectsProjectArray []GetProjectsProjectInput

func (GetProjectsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return i.ToGetProjectsProjectArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectArrayOutput)
}

type GetProjectsProjectOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return o
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return o
}

func (o GetProjectsProjectOutput) _links() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectsProject) map[string]string { return v._links }).(pulumi.StringMapOutput)
}

func (o GetProjectsProjectOutput) AllowMergeOnSkippedPipeline() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.AllowMergeOnSkippedPipeline }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) AnalyticsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.AnalyticsAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) ApprovalsBeforeMerge() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.ApprovalsBeforeMerge }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOutput) Archived() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.Archived }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) AutoCancelPendingPipelines() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.AutoCancelPendingPipelines }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) AutoDevopsDeployStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.AutoDevopsDeployStrategy }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) AutoDevopsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.AutoDevopsEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) AutocloseReferencedIssues() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.AutocloseReferencedIssues }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) AvatarUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.AvatarUrl }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) BuildCoverageRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.BuildCoverageRegex }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) BuildGitStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.BuildGitStrategy }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) BuildTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.BuildTimeout }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOutput) BuildsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.BuildsAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) CiConfigPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.CiConfigPath }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) CiForwardDeploymentEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.CiForwardDeploymentEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) ContainerExpirationPolicies() GetProjectsProjectContainerExpirationPolicyArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectContainerExpirationPolicy {
		return v.ContainerExpirationPolicies
	}).(GetProjectsProjectContainerExpirationPolicyArrayOutput)
}

func (o GetProjectsProjectOutput) ContainerRegistryAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ContainerRegistryAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) ContainerRegistryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.ContainerRegistryEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) CreatorId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.CreatorId }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOutput) CustomAttributes() pulumi.MapArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []map[string]interface{} { return v.CustomAttributes }).(pulumi.MapArrayOutput)
}

func (o GetProjectsProjectOutput) DefaultBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.DefaultBranch }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) EmailsDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.EmailsDisabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) ExternalAuthorizationClassificationLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ExternalAuthorizationClassificationLabel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) ForkedFromProject() GetProjectsProjectForkedFromProjectOutput {
	return o.ApplyT(func(v GetProjectsProject) GetProjectsProjectForkedFromProject { return v.ForkedFromProject }).(GetProjectsProjectForkedFromProjectOutput)
}

func (o GetProjectsProjectOutput) ForkingAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ForkingAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) ForksCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.ForksCount }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOutput) HttpUrlToRepo() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.HttpUrlToRepo }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOutput) ImportError() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ImportError }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) ImportStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ImportStatus }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) IssuesAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.IssuesAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) IssuesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.IssuesEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) JobsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.JobsEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) LastActivityAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.LastActivityAt }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) LfsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.LfsEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) MergeCommitTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.MergeCommitTemplate }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) MergeMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.MergeMethod }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) MergePipelinesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.MergePipelinesEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) MergeRequestsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.MergeRequestsAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) MergeRequestsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.MergeRequestsEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) MergeTrainsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.MergeTrainsEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) Mirror() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.Mirror }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) MirrorOverwritesDivergedBranches() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.MirrorOverwritesDivergedBranches }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) MirrorTriggerBuilds() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.MirrorTriggerBuilds }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) MirrorUserId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.MirrorUserId }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) NameWithNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.NameWithNamespace }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Namespace() GetProjectsProjectNamespaceOutput {
	return o.ApplyT(func(v GetProjectsProject) GetProjectsProjectNamespace { return v.Namespace }).(GetProjectsProjectNamespaceOutput)
}

func (o GetProjectsProjectOutput) OnlyAllowMergeIfAllDiscussionsAreResolved() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.OnlyAllowMergeIfAllDiscussionsAreResolved }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) OnlyAllowMergeIfPipelineSucceeds() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.OnlyAllowMergeIfPipelineSucceeds }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) OnlyMirrorProtectedBranches() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.OnlyMirrorProtectedBranches }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) OpenIssuesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.OpenIssuesCount }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOutput) OperationsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.OperationsAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Owner() GetProjectsProjectOwnerOutput {
	return o.ApplyT(func(v GetProjectsProject) GetProjectsProjectOwner { return v.Owner }).(GetProjectsProjectOwnerOutput)
}

func (o GetProjectsProjectOutput) PackagesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.PackagesEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) PathWithNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.PathWithNamespace }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Permissions() GetProjectsProjectPermissionsOutput {
	return o.ApplyT(func(v GetProjectsProject) GetProjectsProjectPermissions { return v.Permissions }).(GetProjectsProjectPermissionsOutput)
}

func (o GetProjectsProjectOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.Public }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) PublicBuilds() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.PublicBuilds }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) ReadmeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.ReadmeUrl }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) RepositoryAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.RepositoryAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) RepositoryStorage() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.RepositoryStorage }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) RequestAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.RequestAccessEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) RequirementsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.RequirementsAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) ResolveOutdatedDiffDiscussions() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.ResolveOutdatedDiffDiscussions }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) RunnersToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.RunnersToken }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) SecurityAndComplianceAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.SecurityAndComplianceAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) SharedRunnersEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.SharedRunnersEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) SharedWithGroups() GetProjectsProjectSharedWithGroupArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []GetProjectsProjectSharedWithGroup { return v.SharedWithGroups }).(GetProjectsProjectSharedWithGroupArrayOutput)
}

func (o GetProjectsProjectOutput) SnippetsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.SnippetsAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) SnippetsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.SnippetsEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) SquashCommitTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.SquashCommitTemplate }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) SshUrlToRepo() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.SshUrlToRepo }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) StarCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.StarCount }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOutput) Statistics() pulumi.IntMapOutput {
	return o.ApplyT(func(v GetProjectsProject) map[string]int { return v.Statistics }).(pulumi.IntMapOutput)
}

func (o GetProjectsProjectOutput) TagLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []string { return v.TagLists }).(pulumi.StringArrayOutput)
}

func (o GetProjectsProjectOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

func (o GetProjectsProjectOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Visibility }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) WebUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.WebUrl }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) WikiAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.WikiAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) WikiEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.WikiEnabled }).(pulumi.BoolOutput)
}

type GetProjectsProjectArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProject {
		return vs[0].([]GetProjectsProject)[vs[1].(int)]
	}).(GetProjectsProjectOutput)
}

type GetProjectsProjectContainerExpirationPolicy struct {
	Cadence         string `pulumi:"cadence"`
	Enabled         bool   `pulumi:"enabled"`
	KeepN           int    `pulumi:"keepN"`
	NameRegexDelete string `pulumi:"nameRegexDelete"`
	NameRegexKeep   string `pulumi:"nameRegexKeep"`
	NextRunAt       string `pulumi:"nextRunAt"`
	OlderThan       string `pulumi:"olderThan"`
}

// GetProjectsProjectContainerExpirationPolicyInput is an input type that accepts GetProjectsProjectContainerExpirationPolicyArgs and GetProjectsProjectContainerExpirationPolicyOutput values.
// You can construct a concrete instance of `GetProjectsProjectContainerExpirationPolicyInput` via:
//
//          GetProjectsProjectContainerExpirationPolicyArgs{...}
type GetProjectsProjectContainerExpirationPolicyInput interface {
	pulumi.Input

	ToGetProjectsProjectContainerExpirationPolicyOutput() GetProjectsProjectContainerExpirationPolicyOutput
	ToGetProjectsProjectContainerExpirationPolicyOutputWithContext(context.Context) GetProjectsProjectContainerExpirationPolicyOutput
}

type GetProjectsProjectContainerExpirationPolicyArgs struct {
	Cadence         pulumi.StringInput `pulumi:"cadence"`
	Enabled         pulumi.BoolInput   `pulumi:"enabled"`
	KeepN           pulumi.IntInput    `pulumi:"keepN"`
	NameRegexDelete pulumi.StringInput `pulumi:"nameRegexDelete"`
	NameRegexKeep   pulumi.StringInput `pulumi:"nameRegexKeep"`
	NextRunAt       pulumi.StringInput `pulumi:"nextRunAt"`
	OlderThan       pulumi.StringInput `pulumi:"olderThan"`
}

func (GetProjectsProjectContainerExpirationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectContainerExpirationPolicy)(nil)).Elem()
}

func (i GetProjectsProjectContainerExpirationPolicyArgs) ToGetProjectsProjectContainerExpirationPolicyOutput() GetProjectsProjectContainerExpirationPolicyOutput {
	return i.ToGetProjectsProjectContainerExpirationPolicyOutputWithContext(context.Background())
}

func (i GetProjectsProjectContainerExpirationPolicyArgs) ToGetProjectsProjectContainerExpirationPolicyOutputWithContext(ctx context.Context) GetProjectsProjectContainerExpirationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectContainerExpirationPolicyOutput)
}

// GetProjectsProjectContainerExpirationPolicyArrayInput is an input type that accepts GetProjectsProjectContainerExpirationPolicyArray and GetProjectsProjectContainerExpirationPolicyArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectContainerExpirationPolicyArrayInput` via:
//
//          GetProjectsProjectContainerExpirationPolicyArray{ GetProjectsProjectContainerExpirationPolicyArgs{...} }
type GetProjectsProjectContainerExpirationPolicyArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectContainerExpirationPolicyArrayOutput() GetProjectsProjectContainerExpirationPolicyArrayOutput
	ToGetProjectsProjectContainerExpirationPolicyArrayOutputWithContext(context.Context) GetProjectsProjectContainerExpirationPolicyArrayOutput
}

type GetProjectsProjectContainerExpirationPolicyArray []GetProjectsProjectContainerExpirationPolicyInput

func (GetProjectsProjectContainerExpirationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectContainerExpirationPolicy)(nil)).Elem()
}

func (i GetProjectsProjectContainerExpirationPolicyArray) ToGetProjectsProjectContainerExpirationPolicyArrayOutput() GetProjectsProjectContainerExpirationPolicyArrayOutput {
	return i.ToGetProjectsProjectContainerExpirationPolicyArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectContainerExpirationPolicyArray) ToGetProjectsProjectContainerExpirationPolicyArrayOutputWithContext(ctx context.Context) GetProjectsProjectContainerExpirationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectContainerExpirationPolicyArrayOutput)
}

type GetProjectsProjectContainerExpirationPolicyOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectContainerExpirationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectContainerExpirationPolicy)(nil)).Elem()
}

func (o GetProjectsProjectContainerExpirationPolicyOutput) ToGetProjectsProjectContainerExpirationPolicyOutput() GetProjectsProjectContainerExpirationPolicyOutput {
	return o
}

func (o GetProjectsProjectContainerExpirationPolicyOutput) ToGetProjectsProjectContainerExpirationPolicyOutputWithContext(ctx context.Context) GetProjectsProjectContainerExpirationPolicyOutput {
	return o
}

func (o GetProjectsProjectContainerExpirationPolicyOutput) Cadence() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectContainerExpirationPolicy) string { return v.Cadence }).(pulumi.StringOutput)
}

func (o GetProjectsProjectContainerExpirationPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProjectContainerExpirationPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectContainerExpirationPolicyOutput) KeepN() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProjectContainerExpirationPolicy) int { return v.KeepN }).(pulumi.IntOutput)
}

func (o GetProjectsProjectContainerExpirationPolicyOutput) NameRegexDelete() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectContainerExpirationPolicy) string { return v.NameRegexDelete }).(pulumi.StringOutput)
}

func (o GetProjectsProjectContainerExpirationPolicyOutput) NameRegexKeep() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectContainerExpirationPolicy) string { return v.NameRegexKeep }).(pulumi.StringOutput)
}

func (o GetProjectsProjectContainerExpirationPolicyOutput) NextRunAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectContainerExpirationPolicy) string { return v.NextRunAt }).(pulumi.StringOutput)
}

func (o GetProjectsProjectContainerExpirationPolicyOutput) OlderThan() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectContainerExpirationPolicy) string { return v.OlderThan }).(pulumi.StringOutput)
}

type GetProjectsProjectContainerExpirationPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectContainerExpirationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectContainerExpirationPolicy)(nil)).Elem()
}

func (o GetProjectsProjectContainerExpirationPolicyArrayOutput) ToGetProjectsProjectContainerExpirationPolicyArrayOutput() GetProjectsProjectContainerExpirationPolicyArrayOutput {
	return o
}

func (o GetProjectsProjectContainerExpirationPolicyArrayOutput) ToGetProjectsProjectContainerExpirationPolicyArrayOutputWithContext(ctx context.Context) GetProjectsProjectContainerExpirationPolicyArrayOutput {
	return o
}

func (o GetProjectsProjectContainerExpirationPolicyArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectContainerExpirationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectContainerExpirationPolicy {
		return vs[0].([]GetProjectsProjectContainerExpirationPolicy)[vs[1].(int)]
	}).(GetProjectsProjectContainerExpirationPolicyOutput)
}

type GetProjectsProjectForkedFromProject struct {
	HttpUrlToRepo     string `pulumi:"httpUrlToRepo"`
	Id                int    `pulumi:"id"`
	Name              string `pulumi:"name"`
	NameWithNamespace string `pulumi:"nameWithNamespace"`
	Path              string `pulumi:"path"`
	PathWithNamespace string `pulumi:"pathWithNamespace"`
	WebUrl            string `pulumi:"webUrl"`
}

// GetProjectsProjectForkedFromProjectInput is an input type that accepts GetProjectsProjectForkedFromProjectArgs and GetProjectsProjectForkedFromProjectOutput values.
// You can construct a concrete instance of `GetProjectsProjectForkedFromProjectInput` via:
//
//          GetProjectsProjectForkedFromProjectArgs{...}
type GetProjectsProjectForkedFromProjectInput interface {
	pulumi.Input

	ToGetProjectsProjectForkedFromProjectOutput() GetProjectsProjectForkedFromProjectOutput
	ToGetProjectsProjectForkedFromProjectOutputWithContext(context.Context) GetProjectsProjectForkedFromProjectOutput
}

type GetProjectsProjectForkedFromProjectArgs struct {
	HttpUrlToRepo     pulumi.StringInput `pulumi:"httpUrlToRepo"`
	Id                pulumi.IntInput    `pulumi:"id"`
	Name              pulumi.StringInput `pulumi:"name"`
	NameWithNamespace pulumi.StringInput `pulumi:"nameWithNamespace"`
	Path              pulumi.StringInput `pulumi:"path"`
	PathWithNamespace pulumi.StringInput `pulumi:"pathWithNamespace"`
	WebUrl            pulumi.StringInput `pulumi:"webUrl"`
}

func (GetProjectsProjectForkedFromProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectForkedFromProject)(nil)).Elem()
}

func (i GetProjectsProjectForkedFromProjectArgs) ToGetProjectsProjectForkedFromProjectOutput() GetProjectsProjectForkedFromProjectOutput {
	return i.ToGetProjectsProjectForkedFromProjectOutputWithContext(context.Background())
}

func (i GetProjectsProjectForkedFromProjectArgs) ToGetProjectsProjectForkedFromProjectOutputWithContext(ctx context.Context) GetProjectsProjectForkedFromProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectForkedFromProjectOutput)
}

type GetProjectsProjectForkedFromProjectOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectForkedFromProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectForkedFromProject)(nil)).Elem()
}

func (o GetProjectsProjectForkedFromProjectOutput) ToGetProjectsProjectForkedFromProjectOutput() GetProjectsProjectForkedFromProjectOutput {
	return o
}

func (o GetProjectsProjectForkedFromProjectOutput) ToGetProjectsProjectForkedFromProjectOutputWithContext(ctx context.Context) GetProjectsProjectForkedFromProjectOutput {
	return o
}

func (o GetProjectsProjectForkedFromProjectOutput) HttpUrlToRepo() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectForkedFromProject) string { return v.HttpUrlToRepo }).(pulumi.StringOutput)
}

func (o GetProjectsProjectForkedFromProjectOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProjectForkedFromProject) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetProjectsProjectForkedFromProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectForkedFromProject) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsProjectForkedFromProjectOutput) NameWithNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectForkedFromProject) string { return v.NameWithNamespace }).(pulumi.StringOutput)
}

func (o GetProjectsProjectForkedFromProjectOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectForkedFromProject) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetProjectsProjectForkedFromProjectOutput) PathWithNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectForkedFromProject) string { return v.PathWithNamespace }).(pulumi.StringOutput)
}

func (o GetProjectsProjectForkedFromProjectOutput) WebUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectForkedFromProject) string { return v.WebUrl }).(pulumi.StringOutput)
}

type GetProjectsProjectNamespace struct {
	FullPath string `pulumi:"fullPath"`
	Id       int    `pulumi:"id"`
	Kind     string `pulumi:"kind"`
	Name     string `pulumi:"name"`
	Path     string `pulumi:"path"`
}

// GetProjectsProjectNamespaceInput is an input type that accepts GetProjectsProjectNamespaceArgs and GetProjectsProjectNamespaceOutput values.
// You can construct a concrete instance of `GetProjectsProjectNamespaceInput` via:
//
//          GetProjectsProjectNamespaceArgs{...}
type GetProjectsProjectNamespaceInput interface {
	pulumi.Input

	ToGetProjectsProjectNamespaceOutput() GetProjectsProjectNamespaceOutput
	ToGetProjectsProjectNamespaceOutputWithContext(context.Context) GetProjectsProjectNamespaceOutput
}

type GetProjectsProjectNamespaceArgs struct {
	FullPath pulumi.StringInput `pulumi:"fullPath"`
	Id       pulumi.IntInput    `pulumi:"id"`
	Kind     pulumi.StringInput `pulumi:"kind"`
	Name     pulumi.StringInput `pulumi:"name"`
	Path     pulumi.StringInput `pulumi:"path"`
}

func (GetProjectsProjectNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectNamespace)(nil)).Elem()
}

func (i GetProjectsProjectNamespaceArgs) ToGetProjectsProjectNamespaceOutput() GetProjectsProjectNamespaceOutput {
	return i.ToGetProjectsProjectNamespaceOutputWithContext(context.Background())
}

func (i GetProjectsProjectNamespaceArgs) ToGetProjectsProjectNamespaceOutputWithContext(ctx context.Context) GetProjectsProjectNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectNamespaceOutput)
}

type GetProjectsProjectNamespaceOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectNamespace)(nil)).Elem()
}

func (o GetProjectsProjectNamespaceOutput) ToGetProjectsProjectNamespaceOutput() GetProjectsProjectNamespaceOutput {
	return o
}

func (o GetProjectsProjectNamespaceOutput) ToGetProjectsProjectNamespaceOutputWithContext(ctx context.Context) GetProjectsProjectNamespaceOutput {
	return o
}

func (o GetProjectsProjectNamespaceOutput) FullPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectNamespace) string { return v.FullPath }).(pulumi.StringOutput)
}

func (o GetProjectsProjectNamespaceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProjectNamespace) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetProjectsProjectNamespaceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectNamespace) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetProjectsProjectNamespaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectNamespace) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsProjectNamespaceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectNamespace) string { return v.Path }).(pulumi.StringOutput)
}

type GetProjectsProjectOwner struct {
	AvatarUrl  string `pulumi:"avatarUrl"`
	Id         int    `pulumi:"id"`
	Name       string `pulumi:"name"`
	State      string `pulumi:"state"`
	Username   string `pulumi:"username"`
	WebsiteUrl string `pulumi:"websiteUrl"`
}

// GetProjectsProjectOwnerInput is an input type that accepts GetProjectsProjectOwnerArgs and GetProjectsProjectOwnerOutput values.
// You can construct a concrete instance of `GetProjectsProjectOwnerInput` via:
//
//          GetProjectsProjectOwnerArgs{...}
type GetProjectsProjectOwnerInput interface {
	pulumi.Input

	ToGetProjectsProjectOwnerOutput() GetProjectsProjectOwnerOutput
	ToGetProjectsProjectOwnerOutputWithContext(context.Context) GetProjectsProjectOwnerOutput
}

type GetProjectsProjectOwnerArgs struct {
	AvatarUrl  pulumi.StringInput `pulumi:"avatarUrl"`
	Id         pulumi.IntInput    `pulumi:"id"`
	Name       pulumi.StringInput `pulumi:"name"`
	State      pulumi.StringInput `pulumi:"state"`
	Username   pulumi.StringInput `pulumi:"username"`
	WebsiteUrl pulumi.StringInput `pulumi:"websiteUrl"`
}

func (GetProjectsProjectOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectOwner)(nil)).Elem()
}

func (i GetProjectsProjectOwnerArgs) ToGetProjectsProjectOwnerOutput() GetProjectsProjectOwnerOutput {
	return i.ToGetProjectsProjectOwnerOutputWithContext(context.Background())
}

func (i GetProjectsProjectOwnerArgs) ToGetProjectsProjectOwnerOutputWithContext(ctx context.Context) GetProjectsProjectOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectOwnerOutput)
}

type GetProjectsProjectOwnerOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectOwner)(nil)).Elem()
}

func (o GetProjectsProjectOwnerOutput) ToGetProjectsProjectOwnerOutput() GetProjectsProjectOwnerOutput {
	return o
}

func (o GetProjectsProjectOwnerOutput) ToGetProjectsProjectOwnerOutputWithContext(ctx context.Context) GetProjectsProjectOwnerOutput {
	return o
}

func (o GetProjectsProjectOwnerOutput) AvatarUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectOwner) string { return v.AvatarUrl }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOwnerOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProjectOwner) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOwnerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectOwner) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOwnerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectOwner) string { return v.State }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOwnerOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectOwner) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOwnerOutput) WebsiteUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectOwner) string { return v.WebsiteUrl }).(pulumi.StringOutput)
}

type GetProjectsProjectPermissions struct {
	GroupAccess   map[string]int `pulumi:"groupAccess"`
	ProjectAccess map[string]int `pulumi:"projectAccess"`
}

// GetProjectsProjectPermissionsInput is an input type that accepts GetProjectsProjectPermissionsArgs and GetProjectsProjectPermissionsOutput values.
// You can construct a concrete instance of `GetProjectsProjectPermissionsInput` via:
//
//          GetProjectsProjectPermissionsArgs{...}
type GetProjectsProjectPermissionsInput interface {
	pulumi.Input

	ToGetProjectsProjectPermissionsOutput() GetProjectsProjectPermissionsOutput
	ToGetProjectsProjectPermissionsOutputWithContext(context.Context) GetProjectsProjectPermissionsOutput
}

type GetProjectsProjectPermissionsArgs struct {
	GroupAccess   pulumi.IntMapInput `pulumi:"groupAccess"`
	ProjectAccess pulumi.IntMapInput `pulumi:"projectAccess"`
}

func (GetProjectsProjectPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectPermissions)(nil)).Elem()
}

func (i GetProjectsProjectPermissionsArgs) ToGetProjectsProjectPermissionsOutput() GetProjectsProjectPermissionsOutput {
	return i.ToGetProjectsProjectPermissionsOutputWithContext(context.Background())
}

func (i GetProjectsProjectPermissionsArgs) ToGetProjectsProjectPermissionsOutputWithContext(ctx context.Context) GetProjectsProjectPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectPermissionsOutput)
}

type GetProjectsProjectPermissionsOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectPermissions)(nil)).Elem()
}

func (o GetProjectsProjectPermissionsOutput) ToGetProjectsProjectPermissionsOutput() GetProjectsProjectPermissionsOutput {
	return o
}

func (o GetProjectsProjectPermissionsOutput) ToGetProjectsProjectPermissionsOutputWithContext(ctx context.Context) GetProjectsProjectPermissionsOutput {
	return o
}

func (o GetProjectsProjectPermissionsOutput) GroupAccess() pulumi.IntMapOutput {
	return o.ApplyT(func(v GetProjectsProjectPermissions) map[string]int { return v.GroupAccess }).(pulumi.IntMapOutput)
}

func (o GetProjectsProjectPermissionsOutput) ProjectAccess() pulumi.IntMapOutput {
	return o.ApplyT(func(v GetProjectsProjectPermissions) map[string]int { return v.ProjectAccess }).(pulumi.IntMapOutput)
}

type GetProjectsProjectSharedWithGroup struct {
	GroupAccessLevel string `pulumi:"groupAccessLevel"`
	GroupId          int    `pulumi:"groupId"`
	GroupName        string `pulumi:"groupName"`
}

// GetProjectsProjectSharedWithGroupInput is an input type that accepts GetProjectsProjectSharedWithGroupArgs and GetProjectsProjectSharedWithGroupOutput values.
// You can construct a concrete instance of `GetProjectsProjectSharedWithGroupInput` via:
//
//          GetProjectsProjectSharedWithGroupArgs{...}
type GetProjectsProjectSharedWithGroupInput interface {
	pulumi.Input

	ToGetProjectsProjectSharedWithGroupOutput() GetProjectsProjectSharedWithGroupOutput
	ToGetProjectsProjectSharedWithGroupOutputWithContext(context.Context) GetProjectsProjectSharedWithGroupOutput
}

type GetProjectsProjectSharedWithGroupArgs struct {
	GroupAccessLevel pulumi.StringInput `pulumi:"groupAccessLevel"`
	GroupId          pulumi.IntInput    `pulumi:"groupId"`
	GroupName        pulumi.StringInput `pulumi:"groupName"`
}

func (GetProjectsProjectSharedWithGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectSharedWithGroup)(nil)).Elem()
}

func (i GetProjectsProjectSharedWithGroupArgs) ToGetProjectsProjectSharedWithGroupOutput() GetProjectsProjectSharedWithGroupOutput {
	return i.ToGetProjectsProjectSharedWithGroupOutputWithContext(context.Background())
}

func (i GetProjectsProjectSharedWithGroupArgs) ToGetProjectsProjectSharedWithGroupOutputWithContext(ctx context.Context) GetProjectsProjectSharedWithGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectSharedWithGroupOutput)
}

// GetProjectsProjectSharedWithGroupArrayInput is an input type that accepts GetProjectsProjectSharedWithGroupArray and GetProjectsProjectSharedWithGroupArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectSharedWithGroupArrayInput` via:
//
//          GetProjectsProjectSharedWithGroupArray{ GetProjectsProjectSharedWithGroupArgs{...} }
type GetProjectsProjectSharedWithGroupArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectSharedWithGroupArrayOutput() GetProjectsProjectSharedWithGroupArrayOutput
	ToGetProjectsProjectSharedWithGroupArrayOutputWithContext(context.Context) GetProjectsProjectSharedWithGroupArrayOutput
}

type GetProjectsProjectSharedWithGroupArray []GetProjectsProjectSharedWithGroupInput

func (GetProjectsProjectSharedWithGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectSharedWithGroup)(nil)).Elem()
}

func (i GetProjectsProjectSharedWithGroupArray) ToGetProjectsProjectSharedWithGroupArrayOutput() GetProjectsProjectSharedWithGroupArrayOutput {
	return i.ToGetProjectsProjectSharedWithGroupArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectSharedWithGroupArray) ToGetProjectsProjectSharedWithGroupArrayOutputWithContext(ctx context.Context) GetProjectsProjectSharedWithGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectSharedWithGroupArrayOutput)
}

type GetProjectsProjectSharedWithGroupOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectSharedWithGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProjectSharedWithGroup)(nil)).Elem()
}

func (o GetProjectsProjectSharedWithGroupOutput) ToGetProjectsProjectSharedWithGroupOutput() GetProjectsProjectSharedWithGroupOutput {
	return o
}

func (o GetProjectsProjectSharedWithGroupOutput) ToGetProjectsProjectSharedWithGroupOutputWithContext(ctx context.Context) GetProjectsProjectSharedWithGroupOutput {
	return o
}

func (o GetProjectsProjectSharedWithGroupOutput) GroupAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectSharedWithGroup) string { return v.GroupAccessLevel }).(pulumi.StringOutput)
}

func (o GetProjectsProjectSharedWithGroupOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProjectSharedWithGroup) int { return v.GroupId }).(pulumi.IntOutput)
}

func (o GetProjectsProjectSharedWithGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProjectSharedWithGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

type GetProjectsProjectSharedWithGroupArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectSharedWithGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProjectSharedWithGroup)(nil)).Elem()
}

func (o GetProjectsProjectSharedWithGroupArrayOutput) ToGetProjectsProjectSharedWithGroupArrayOutput() GetProjectsProjectSharedWithGroupArrayOutput {
	return o
}

func (o GetProjectsProjectSharedWithGroupArrayOutput) ToGetProjectsProjectSharedWithGroupArrayOutputWithContext(ctx context.Context) GetProjectsProjectSharedWithGroupArrayOutput {
	return o
}

func (o GetProjectsProjectSharedWithGroupArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectSharedWithGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProjectSharedWithGroup {
		return vs[0].([]GetProjectsProjectSharedWithGroup)[vs[1].(int)]
	}).(GetProjectsProjectSharedWithGroupOutput)
}

type GetUsersUser struct {
	AvatarUrl        string `pulumi:"avatarUrl"`
	Bio              string `pulumi:"bio"`
	CanCreateGroup   bool   `pulumi:"canCreateGroup"`
	CanCreateProject bool   `pulumi:"canCreateProject"`
	ColorSchemeId    int    `pulumi:"colorSchemeId"`
	CreatedAt        string `pulumi:"createdAt"`
	CurrentSignInAt  string `pulumi:"currentSignInAt"`
	Email            string `pulumi:"email"`
	ExternUid        string `pulumi:"externUid"`
	External         bool   `pulumi:"external"`
	Id               int    `pulumi:"id"`
	IsAdmin          bool   `pulumi:"isAdmin"`
	LastSignInAt     string `pulumi:"lastSignInAt"`
	Linkedin         string `pulumi:"linkedin"`
	Location         string `pulumi:"location"`
	Name             string `pulumi:"name"`
	Organization     string `pulumi:"organization"`
	ProjectsLimit    int    `pulumi:"projectsLimit"`
	Provider         string `pulumi:"provider"`
	Skype            string `pulumi:"skype"`
	State            string `pulumi:"state"`
	ThemeId          int    `pulumi:"themeId"`
	Twitter          string `pulumi:"twitter"`
	TwoFactorEnabled bool   `pulumi:"twoFactorEnabled"`
	Username         string `pulumi:"username"`
	WebsiteUrl       string `pulumi:"websiteUrl"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//          GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	AvatarUrl        pulumi.StringInput `pulumi:"avatarUrl"`
	Bio              pulumi.StringInput `pulumi:"bio"`
	CanCreateGroup   pulumi.BoolInput   `pulumi:"canCreateGroup"`
	CanCreateProject pulumi.BoolInput   `pulumi:"canCreateProject"`
	ColorSchemeId    pulumi.IntInput    `pulumi:"colorSchemeId"`
	CreatedAt        pulumi.StringInput `pulumi:"createdAt"`
	CurrentSignInAt  pulumi.StringInput `pulumi:"currentSignInAt"`
	Email            pulumi.StringInput `pulumi:"email"`
	ExternUid        pulumi.StringInput `pulumi:"externUid"`
	External         pulumi.BoolInput   `pulumi:"external"`
	Id               pulumi.IntInput    `pulumi:"id"`
	IsAdmin          pulumi.BoolInput   `pulumi:"isAdmin"`
	LastSignInAt     pulumi.StringInput `pulumi:"lastSignInAt"`
	Linkedin         pulumi.StringInput `pulumi:"linkedin"`
	Location         pulumi.StringInput `pulumi:"location"`
	Name             pulumi.StringInput `pulumi:"name"`
	Organization     pulumi.StringInput `pulumi:"organization"`
	ProjectsLimit    pulumi.IntInput    `pulumi:"projectsLimit"`
	Provider         pulumi.StringInput `pulumi:"provider"`
	Skype            pulumi.StringInput `pulumi:"skype"`
	State            pulumi.StringInput `pulumi:"state"`
	ThemeId          pulumi.IntInput    `pulumi:"themeId"`
	Twitter          pulumi.StringInput `pulumi:"twitter"`
	TwoFactorEnabled pulumi.BoolInput   `pulumi:"twoFactorEnabled"`
	Username         pulumi.StringInput `pulumi:"username"`
	WebsiteUrl       pulumi.StringInput `pulumi:"websiteUrl"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//          GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) AvatarUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.AvatarUrl }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Bio() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Bio }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) CanCreateGroup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.CanCreateGroup }).(pulumi.BoolOutput)
}

func (o GetUsersUserOutput) CanCreateProject() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.CanCreateProject }).(pulumi.BoolOutput)
}

func (o GetUsersUserOutput) ColorSchemeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUser) int { return v.ColorSchemeId }).(pulumi.IntOutput)
}

func (o GetUsersUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) CurrentSignInAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CurrentSignInAt }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) ExternUid() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.ExternUid }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) External() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.External }).(pulumi.BoolOutput)
}

func (o GetUsersUserOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUser) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetUsersUserOutput) IsAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.IsAdmin }).(pulumi.BoolOutput)
}

func (o GetUsersUserOutput) LastSignInAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.LastSignInAt }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Linkedin() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Linkedin }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Organization }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) ProjectsLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUser) int { return v.ProjectsLimit }).(pulumi.IntOutput)
}

func (o GetUsersUserOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Skype() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Skype }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.State }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) ThemeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersUser) int { return v.ThemeId }).(pulumi.IntOutput)
}

func (o GetUsersUserOutput) Twitter() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Twitter }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) TwoFactorEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.TwoFactorEnabled }).(pulumi.BoolOutput)
}

func (o GetUsersUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) WebsiteUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.WebsiteUrl }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BranchCommitInput)(nil)).Elem(), BranchCommitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchCommitArrayInput)(nil)).Elem(), BranchCommitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionAllowedToMergeInput)(nil)).Elem(), BranchProtectionAllowedToMergeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionAllowedToMergeArrayInput)(nil)).Elem(), BranchProtectionAllowedToMergeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionAllowedToPushInput)(nil)).Elem(), BranchProtectionAllowedToPushArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionAllowedToPushArrayInput)(nil)).Elem(), BranchProtectionAllowedToPushArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionAllowedToUnprotectInput)(nil)).Elem(), BranchProtectionAllowedToUnprotectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchProtectionAllowedToUnprotectArrayInput)(nil)).Elem(), BranchProtectionAllowedToUnprotectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectContainerExpirationPolicyInput)(nil)).Elem(), ProjectContainerExpirationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectContainerExpirationPolicyPtrInput)(nil)).Elem(), ProjectContainerExpirationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIssueTaskCompletionStatusInput)(nil)).Elem(), ProjectIssueTaskCompletionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIssueTaskCompletionStatusPtrInput)(nil)).Elem(), ProjectIssueTaskCompletionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectProtectedEnvironmentDeployAccessLevelsInput)(nil)).Elem(), ProjectProtectedEnvironmentDeployAccessLevelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectProtectedEnvironmentDeployAccessLevelsPtrInput)(nil)).Elem(), ProjectProtectedEnvironmentDeployAccessLevelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPushRulesInput)(nil)).Elem(), ProjectPushRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectPushRulesPtrInput)(nil)).Elem(), ProjectPushRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTagCommitInput)(nil)).Elem(), ProjectTagCommitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTagCommitArrayInput)(nil)).Elem(), ProjectTagCommitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTagReleaseInput)(nil)).Elem(), ProjectTagReleaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTagReleaseArrayInput)(nil)).Elem(), ProjectTagReleaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBranchCommitInput)(nil)).Elem(), GetBranchCommitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBranchCommitArrayInput)(nil)).Elem(), GetBranchCommitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMembershipMemberInput)(nil)).Elem(), GetGroupMembershipMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMembershipMemberArrayInput)(nil)).Elem(), GetGroupMembershipMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDeployKeysDeployKeyInput)(nil)).Elem(), GetInstanceDeployKeysDeployKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDeployKeysDeployKeyArrayInput)(nil)).Elem(), GetInstanceDeployKeysDeployKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessInput)(nil)).Elem(), GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayInput)(nil)).Elem(), GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectContainerExpirationPolicyInput)(nil)).Elem(), GetProjectContainerExpirationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectContainerExpirationPolicyArrayInput)(nil)).Elem(), GetProjectContainerExpirationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectIssueTaskCompletionStatusInput)(nil)).Elem(), GetProjectIssueTaskCompletionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectIssueTaskCompletionStatusArrayInput)(nil)).Elem(), GetProjectIssueTaskCompletionStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectIssuesIssueInput)(nil)).Elem(), GetProjectIssuesIssueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectIssuesIssueArrayInput)(nil)).Elem(), GetProjectIssuesIssueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectIssuesIssueTaskCompletionStatusInput)(nil)).Elem(), GetProjectIssuesIssueTaskCompletionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectIssuesIssueTaskCompletionStatusArrayInput)(nil)).Elem(), GetProjectIssuesIssueTaskCompletionStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchMergeAccessLevelInput)(nil)).Elem(), GetProjectProtectedBranchMergeAccessLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchMergeAccessLevelArrayInput)(nil)).Elem(), GetProjectProtectedBranchMergeAccessLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchPushAccessLevelInput)(nil)).Elem(), GetProjectProtectedBranchPushAccessLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchPushAccessLevelArrayInput)(nil)).Elem(), GetProjectProtectedBranchPushAccessLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchInput)(nil)).Elem(), GetProjectProtectedBranchesProtectedBranchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchArrayInput)(nil)).Elem(), GetProjectProtectedBranchesProtectedBranchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchMergeAccessLevelInput)(nil)).Elem(), GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayInput)(nil)).Elem(), GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchPushAccessLevelInput)(nil)).Elem(), GetProjectProtectedBranchesProtectedBranchPushAccessLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayInput)(nil)).Elem(), GetProjectProtectedBranchesProtectedBranchPushAccessLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectPushRulesInput)(nil)).Elem(), GetProjectPushRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagCommitInput)(nil)).Elem(), GetProjectTagCommitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagCommitArrayInput)(nil)).Elem(), GetProjectTagCommitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagReleaseInput)(nil)).Elem(), GetProjectTagReleaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagReleaseArrayInput)(nil)).Elem(), GetProjectTagReleaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagsTagInput)(nil)).Elem(), GetProjectTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagsTagArrayInput)(nil)).Elem(), GetProjectTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagsTagCommitInput)(nil)).Elem(), GetProjectTagsTagCommitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagsTagCommitArrayInput)(nil)).Elem(), GetProjectTagsTagCommitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagsTagReleaseInput)(nil)).Elem(), GetProjectTagsTagReleaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTagsTagReleaseArrayInput)(nil)).Elem(), GetProjectTagsTagReleaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectInput)(nil)).Elem(), GetProjectsProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectArrayInput)(nil)).Elem(), GetProjectsProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectContainerExpirationPolicyInput)(nil)).Elem(), GetProjectsProjectContainerExpirationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectContainerExpirationPolicyArrayInput)(nil)).Elem(), GetProjectsProjectContainerExpirationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectForkedFromProjectInput)(nil)).Elem(), GetProjectsProjectForkedFromProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectNamespaceInput)(nil)).Elem(), GetProjectsProjectNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectOwnerInput)(nil)).Elem(), GetProjectsProjectOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectPermissionsInput)(nil)).Elem(), GetProjectsProjectPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectSharedWithGroupInput)(nil)).Elem(), GetProjectsProjectSharedWithGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectSharedWithGroupArrayInput)(nil)).Elem(), GetProjectsProjectSharedWithGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterOutputType(BranchCommitOutput{})
	pulumi.RegisterOutputType(BranchCommitArrayOutput{})
	pulumi.RegisterOutputType(BranchProtectionAllowedToMergeOutput{})
	pulumi.RegisterOutputType(BranchProtectionAllowedToMergeArrayOutput{})
	pulumi.RegisterOutputType(BranchProtectionAllowedToPushOutput{})
	pulumi.RegisterOutputType(BranchProtectionAllowedToPushArrayOutput{})
	pulumi.RegisterOutputType(BranchProtectionAllowedToUnprotectOutput{})
	pulumi.RegisterOutputType(BranchProtectionAllowedToUnprotectArrayOutput{})
	pulumi.RegisterOutputType(ProjectContainerExpirationPolicyOutput{})
	pulumi.RegisterOutputType(ProjectContainerExpirationPolicyPtrOutput{})
	pulumi.RegisterOutputType(ProjectIssueTaskCompletionStatusOutput{})
	pulumi.RegisterOutputType(ProjectIssueTaskCompletionStatusPtrOutput{})
	pulumi.RegisterOutputType(ProjectProtectedEnvironmentDeployAccessLevelsOutput{})
	pulumi.RegisterOutputType(ProjectProtectedEnvironmentDeployAccessLevelsPtrOutput{})
	pulumi.RegisterOutputType(ProjectPushRulesOutput{})
	pulumi.RegisterOutputType(ProjectPushRulesPtrOutput{})
	pulumi.RegisterOutputType(ProjectTagCommitOutput{})
	pulumi.RegisterOutputType(ProjectTagCommitArrayOutput{})
	pulumi.RegisterOutputType(ProjectTagReleaseOutput{})
	pulumi.RegisterOutputType(ProjectTagReleaseArrayOutput{})
	pulumi.RegisterOutputType(GetBranchCommitOutput{})
	pulumi.RegisterOutputType(GetBranchCommitArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMembershipMemberOutput{})
	pulumi.RegisterOutputType(GetGroupMembershipMemberArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceDeployKeysDeployKeyOutput{})
	pulumi.RegisterOutputType(GetInstanceDeployKeysDeployKeyArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessOutput{})
	pulumi.RegisterOutputType(GetInstanceDeployKeysDeployKeyProjectsWithWriteAccessArrayOutput{})
	pulumi.RegisterOutputType(GetProjectContainerExpirationPolicyOutput{})
	pulumi.RegisterOutputType(GetProjectContainerExpirationPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectIssueTaskCompletionStatusOutput{})
	pulumi.RegisterOutputType(GetProjectIssueTaskCompletionStatusArrayOutput{})
	pulumi.RegisterOutputType(GetProjectIssuesIssueOutput{})
	pulumi.RegisterOutputType(GetProjectIssuesIssueArrayOutput{})
	pulumi.RegisterOutputType(GetProjectIssuesIssueTaskCompletionStatusOutput{})
	pulumi.RegisterOutputType(GetProjectIssuesIssueTaskCompletionStatusArrayOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchMergeAccessLevelOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchMergeAccessLevelArrayOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchPushAccessLevelOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchPushAccessLevelArrayOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchesProtectedBranchOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchesProtectedBranchArrayOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchesProtectedBranchMergeAccessLevelOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchesProtectedBranchMergeAccessLevelArrayOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchesProtectedBranchPushAccessLevelOutput{})
	pulumi.RegisterOutputType(GetProjectProtectedBranchesProtectedBranchPushAccessLevelArrayOutput{})
	pulumi.RegisterOutputType(GetProjectPushRulesOutput{})
	pulumi.RegisterOutputType(GetProjectTagCommitOutput{})
	pulumi.RegisterOutputType(GetProjectTagCommitArrayOutput{})
	pulumi.RegisterOutputType(GetProjectTagReleaseOutput{})
	pulumi.RegisterOutputType(GetProjectTagReleaseArrayOutput{})
	pulumi.RegisterOutputType(GetProjectTagsTagOutput{})
	pulumi.RegisterOutputType(GetProjectTagsTagArrayOutput{})
	pulumi.RegisterOutputType(GetProjectTagsTagCommitOutput{})
	pulumi.RegisterOutputType(GetProjectTagsTagCommitArrayOutput{})
	pulumi.RegisterOutputType(GetProjectTagsTagReleaseOutput{})
	pulumi.RegisterOutputType(GetProjectTagsTagReleaseArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectContainerExpirationPolicyOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectContainerExpirationPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectForkedFromProjectOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectNamespaceOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectOwnerOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectPermissionsOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectSharedWithGroupOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectSharedWithGroupArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}
