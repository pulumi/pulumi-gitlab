// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gitlab

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gitlab/sdk/v9/go/gitlab/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `getInstanceVariables` data source retrieves all instance-level CI/CD variables.
//
// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/instance_level_ci_variables/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gitlab/sdk/v9/go/gitlab"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gitlab.GetInstanceVariables(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstanceVariables(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetInstanceVariablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstanceVariablesResult
	err := ctx.Invoke("gitlab:index/getInstanceVariables:getInstanceVariables", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getInstanceVariables.
type GetInstanceVariablesResult struct {
	// The ID of this datasource. In the hardcoded format `instanceVariables`.
	Id string `pulumi:"id"`
	// The list of variables returned by the search.
	Variables []GetInstanceVariablesVariable `pulumi:"variables"`
}

func GetInstanceVariablesOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetInstanceVariablesResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetInstanceVariablesResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("gitlab:index/getInstanceVariables:getInstanceVariables", nil, GetInstanceVariablesResultOutput{}, options).(GetInstanceVariablesResultOutput), nil
	}).(GetInstanceVariablesResultOutput)
}

// A collection of values returned by getInstanceVariables.
type GetInstanceVariablesResultOutput struct{ *pulumi.OutputState }

func (GetInstanceVariablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceVariablesResult)(nil)).Elem()
}

func (o GetInstanceVariablesResultOutput) ToGetInstanceVariablesResultOutput() GetInstanceVariablesResultOutput {
	return o
}

func (o GetInstanceVariablesResultOutput) ToGetInstanceVariablesResultOutputWithContext(ctx context.Context) GetInstanceVariablesResultOutput {
	return o
}

// The ID of this datasource. In the hardcoded format `instanceVariables`.
func (o GetInstanceVariablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceVariablesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of variables returned by the search.
func (o GetInstanceVariablesResultOutput) Variables() GetInstanceVariablesVariableArrayOutput {
	return o.ApplyT(func(v GetInstanceVariablesResult) []GetInstanceVariablesVariable { return v.Variables }).(GetInstanceVariablesVariableArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceVariablesResultOutput{})
}
