// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package gitlab

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// This resource allows you to create and manage labels for your GitLab groups.
// For further information on labels, consult the [gitlab
// documentation](https://docs.gitlab.com/ee/user/project/labels.html#group-labels).
type GroupLabel struct {
	pulumi.CustomResourceState

	// The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB) or one of the [CSS color names](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords).
	Color pulumi.StringOutput `pulumi:"color"`
	// The description of the label.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name or id of the group to add the label to.
	Group pulumi.StringOutput `pulumi:"group"`
	// The name of the label.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewGroupLabel registers a new resource with the given unique name, arguments, and options.
func NewGroupLabel(ctx *pulumi.Context,
	name string, args *GroupLabelArgs, opts ...pulumi.ResourceOption) (*GroupLabel, error) {
	if args == nil || args.Color == nil {
		return nil, errors.New("missing required argument 'Color'")
	}
	if args == nil || args.Group == nil {
		return nil, errors.New("missing required argument 'Group'")
	}
	if args == nil {
		args = &GroupLabelArgs{}
	}
	var resource GroupLabel
	err := ctx.RegisterResource("gitlab:index/groupLabel:GroupLabel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroupLabel gets an existing GroupLabel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupLabel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupLabelState, opts ...pulumi.ResourceOption) (*GroupLabel, error) {
	var resource GroupLabel
	err := ctx.ReadResource("gitlab:index/groupLabel:GroupLabel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GroupLabel resources.
type groupLabelState struct {
	// The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB) or one of the [CSS color names](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords).
	Color *string `pulumi:"color"`
	// The description of the label.
	Description *string `pulumi:"description"`
	// The name or id of the group to add the label to.
	Group *string `pulumi:"group"`
	// The name of the label.
	Name *string `pulumi:"name"`
}

type GroupLabelState struct {
	// The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB) or one of the [CSS color names](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords).
	Color pulumi.StringPtrInput
	// The description of the label.
	Description pulumi.StringPtrInput
	// The name or id of the group to add the label to.
	Group pulumi.StringPtrInput
	// The name of the label.
	Name pulumi.StringPtrInput
}

func (GroupLabelState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupLabelState)(nil)).Elem()
}

type groupLabelArgs struct {
	// The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB) or one of the [CSS color names](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords).
	Color string `pulumi:"color"`
	// The description of the label.
	Description *string `pulumi:"description"`
	// The name or id of the group to add the label to.
	Group string `pulumi:"group"`
	// The name of the label.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a GroupLabel resource.
type GroupLabelArgs struct {
	// The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB) or one of the [CSS color names](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords).
	Color pulumi.StringInput
	// The description of the label.
	Description pulumi.StringPtrInput
	// The name or id of the group to add the label to.
	Group pulumi.StringInput
	// The name of the label.
	Name pulumi.StringPtrInput
}

func (GroupLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupLabelArgs)(nil)).Elem()
}
