// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gitlab

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `Project` data source allows details of a project to be retrieved by either its ID or its path with namespace.
//
// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/projects.html#get-single-project)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gitlab/sdk/v4/go/gitlab"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := gitlab.LookupProject(ctx, &GetProjectArgs{
// 			Id: pulumi.StringRef("foo/bar/baz"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupProject(ctx *pulumi.Context, args *LookupProjectArgs, opts ...pulumi.InvokeOption) (*LookupProjectResult, error) {
	var rv LookupProjectResult
	err := ctx.Invoke("gitlab:index/getProject:getProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProject.
type LookupProjectArgs struct {
	Id                *string `pulumi:"id"`
	PathWithNamespace *string `pulumi:"pathWithNamespace"`
	PublicBuilds      *bool   `pulumi:"publicBuilds"`
}

// A collection of values returned by getProject.
type LookupProjectResult struct {
	AnalyticsAccessLevel                     string                                `pulumi:"analyticsAccessLevel"`
	Archived                                 bool                                  `pulumi:"archived"`
	AutoCancelPendingPipelines               string                                `pulumi:"autoCancelPendingPipelines"`
	AutoDevopsDeployStrategy                 string                                `pulumi:"autoDevopsDeployStrategy"`
	AutoDevopsEnabled                        bool                                  `pulumi:"autoDevopsEnabled"`
	AutocloseReferencedIssues                bool                                  `pulumi:"autocloseReferencedIssues"`
	BuildGitStrategy                         string                                `pulumi:"buildGitStrategy"`
	BuildTimeout                             int                                   `pulumi:"buildTimeout"`
	BuildsAccessLevel                        string                                `pulumi:"buildsAccessLevel"`
	ContainerExpirationPolicies              []GetProjectContainerExpirationPolicy `pulumi:"containerExpirationPolicies"`
	ContainerRegistryAccessLevel             string                                `pulumi:"containerRegistryAccessLevel"`
	DefaultBranch                            string                                `pulumi:"defaultBranch"`
	Description                              string                                `pulumi:"description"`
	EmailsDisabled                           bool                                  `pulumi:"emailsDisabled"`
	ExternalAuthorizationClassificationLabel string                                `pulumi:"externalAuthorizationClassificationLabel"`
	ForkingAccessLevel                       string                                `pulumi:"forkingAccessLevel"`
	HttpUrlToRepo                            string                                `pulumi:"httpUrlToRepo"`
	Id                                       string                                `pulumi:"id"`
	IssuesAccessLevel                        string                                `pulumi:"issuesAccessLevel"`
	IssuesEnabled                            bool                                  `pulumi:"issuesEnabled"`
	LfsEnabled                               bool                                  `pulumi:"lfsEnabled"`
	MergeCommitTemplate                      string                                `pulumi:"mergeCommitTemplate"`
	MergePipelinesEnabled                    bool                                  `pulumi:"mergePipelinesEnabled"`
	MergeRequestsAccessLevel                 string                                `pulumi:"mergeRequestsAccessLevel"`
	MergeRequestsEnabled                     bool                                  `pulumi:"mergeRequestsEnabled"`
	MergeTrainsEnabled                       bool                                  `pulumi:"mergeTrainsEnabled"`
	Name                                     string                                `pulumi:"name"`
	NamespaceId                              int                                   `pulumi:"namespaceId"`
	OperationsAccessLevel                    string                                `pulumi:"operationsAccessLevel"`
	Path                                     string                                `pulumi:"path"`
	PathWithNamespace                        string                                `pulumi:"pathWithNamespace"`
	PipelinesEnabled                         bool                                  `pulumi:"pipelinesEnabled"`
	PrintingMergeRequestLinkEnabled          bool                                  `pulumi:"printingMergeRequestLinkEnabled"`
	PublicBuilds                             *bool                                 `pulumi:"publicBuilds"`
	PushRules                                GetProjectPushRules                   `pulumi:"pushRules"`
	RemoveSourceBranchAfterMerge             bool                                  `pulumi:"removeSourceBranchAfterMerge"`
	RepositoryAccessLevel                    string                                `pulumi:"repositoryAccessLevel"`
	RepositoryStorage                        string                                `pulumi:"repositoryStorage"`
	RequestAccessEnabled                     bool                                  `pulumi:"requestAccessEnabled"`
	RequirementsAccessLevel                  string                                `pulumi:"requirementsAccessLevel"`
	ResolveOutdatedDiffDiscussions           bool                                  `pulumi:"resolveOutdatedDiffDiscussions"`
	RunnersToken                             string                                `pulumi:"runnersToken"`
	SecurityAndComplianceAccessLevel         string                                `pulumi:"securityAndComplianceAccessLevel"`
	SnippetsAccessLevel                      string                                `pulumi:"snippetsAccessLevel"`
	SnippetsEnabled                          bool                                  `pulumi:"snippetsEnabled"`
	SquashCommitTemplate                     string                                `pulumi:"squashCommitTemplate"`
	SshUrlToRepo                             string                                `pulumi:"sshUrlToRepo"`
	Topics                                   []string                              `pulumi:"topics"`
	VisibilityLevel                          string                                `pulumi:"visibilityLevel"`
	WebUrl                                   string                                `pulumi:"webUrl"`
	WikiAccessLevel                          string                                `pulumi:"wikiAccessLevel"`
	WikiEnabled                              bool                                  `pulumi:"wikiEnabled"`
}

func LookupProjectOutput(ctx *pulumi.Context, args LookupProjectOutputArgs, opts ...pulumi.InvokeOption) LookupProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectResult, error) {
			args := v.(LookupProjectArgs)
			r, err := LookupProject(ctx, &args, opts...)
			var s LookupProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProjectResultOutput)
}

// A collection of arguments for invoking getProject.
type LookupProjectOutputArgs struct {
	Id                pulumi.StringPtrInput `pulumi:"id"`
	PathWithNamespace pulumi.StringPtrInput `pulumi:"pathWithNamespace"`
	PublicBuilds      pulumi.BoolPtrInput   `pulumi:"publicBuilds"`
}

func (LookupProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectArgs)(nil)).Elem()
}

// A collection of values returned by getProject.
type LookupProjectResultOutput struct{ *pulumi.OutputState }

func (LookupProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectResult)(nil)).Elem()
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutput() LookupProjectResultOutput {
	return o
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutputWithContext(ctx context.Context) LookupProjectResultOutput {
	return o
}

func (o LookupProjectResultOutput) AnalyticsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.AnalyticsAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) Archived() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.Archived }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) AutoCancelPendingPipelines() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.AutoCancelPendingPipelines }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) AutoDevopsDeployStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.AutoDevopsDeployStrategy }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) AutoDevopsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.AutoDevopsEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) AutocloseReferencedIssues() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.AutocloseReferencedIssues }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) BuildGitStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.BuildGitStrategy }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) BuildTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProjectResult) int { return v.BuildTimeout }).(pulumi.IntOutput)
}

func (o LookupProjectResultOutput) BuildsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.BuildsAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) ContainerExpirationPolicies() GetProjectContainerExpirationPolicyArrayOutput {
	return o.ApplyT(func(v LookupProjectResult) []GetProjectContainerExpirationPolicy {
		return v.ContainerExpirationPolicies
	}).(GetProjectContainerExpirationPolicyArrayOutput)
}

func (o LookupProjectResultOutput) ContainerRegistryAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.ContainerRegistryAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) DefaultBranch() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.DefaultBranch }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) EmailsDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.EmailsDisabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) ExternalAuthorizationClassificationLabel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.ExternalAuthorizationClassificationLabel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) ForkingAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.ForkingAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) HttpUrlToRepo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.HttpUrlToRepo }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) IssuesAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.IssuesAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) IssuesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.IssuesEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) LfsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.LfsEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) MergeCommitTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.MergeCommitTemplate }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) MergePipelinesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.MergePipelinesEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) MergeRequestsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.MergeRequestsAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) MergeRequestsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.MergeRequestsEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) MergeTrainsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.MergeTrainsEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) NamespaceId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProjectResult) int { return v.NamespaceId }).(pulumi.IntOutput)
}

func (o LookupProjectResultOutput) OperationsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.OperationsAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Path }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) PathWithNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.PathWithNamespace }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) PipelinesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.PipelinesEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) PrintingMergeRequestLinkEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.PrintingMergeRequestLinkEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) PublicBuilds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *bool { return v.PublicBuilds }).(pulumi.BoolPtrOutput)
}

func (o LookupProjectResultOutput) PushRules() GetProjectPushRulesOutput {
	return o.ApplyT(func(v LookupProjectResult) GetProjectPushRules { return v.PushRules }).(GetProjectPushRulesOutput)
}

func (o LookupProjectResultOutput) RemoveSourceBranchAfterMerge() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.RemoveSourceBranchAfterMerge }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) RepositoryAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.RepositoryAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) RepositoryStorage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.RepositoryStorage }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) RequestAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.RequestAccessEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) RequirementsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.RequirementsAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) ResolveOutdatedDiffDiscussions() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.ResolveOutdatedDiffDiscussions }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) RunnersToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.RunnersToken }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) SecurityAndComplianceAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.SecurityAndComplianceAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) SnippetsAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.SnippetsAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) SnippetsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.SnippetsEnabled }).(pulumi.BoolOutput)
}

func (o LookupProjectResultOutput) SquashCommitTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.SquashCommitTemplate }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) SshUrlToRepo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.SshUrlToRepo }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProjectResult) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

func (o LookupProjectResultOutput) VisibilityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.VisibilityLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) WebUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.WebUrl }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) WikiAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.WikiAccessLevel }).(pulumi.StringOutput)
}

func (o LookupProjectResultOutput) WikiEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectResult) bool { return v.WikiEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectResultOutput{})
}
