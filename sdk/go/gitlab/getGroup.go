// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package gitlab

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides details about a specific group in the gitlab provider.
func LookupGroup(ctx *pulumi.Context, args *LookupGroupArgs, opts ...pulumi.InvokeOption) (*LookupGroupResult, error) {
	var rv LookupGroupResult
	err := ctx.Invoke("gitlab:index/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type LookupGroupArgs struct {
	// The full path of the group.
	FullPath *string `pulumi:"fullPath"`
	// The ID of the group.
	GroupId *int `pulumi:"groupId"`
}

// A collection of values returned by getGroup.
type LookupGroupResult struct {
	// The description of the group.
	Description string `pulumi:"description"`
	// The full name of the group.
	FullName string `pulumi:"fullName"`
	// The full path of the group.
	FullPath string `pulumi:"fullPath"`
	GroupId  int    `pulumi:"groupId"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Boolean, is LFS enabled for projects in this group.
	LfsEnabled bool `pulumi:"lfsEnabled"`
	// The name of this group.
	Name string `pulumi:"name"`
	// Integer, ID of the parent group.
	ParentId int `pulumi:"parentId"`
	// The path of the group.
	Path string `pulumi:"path"`
	// Boolean, is request for access enabled to the group.
	RequestAccessEnabled bool `pulumi:"requestAccessEnabled"`
	// The group level registration token to use during runner setup.
	RunnersToken string `pulumi:"runnersToken"`
	// Visibility level of the group. Possible values are `private`, `internal`, `public`.
	VisibilityLevel string `pulumi:"visibilityLevel"`
	// Web URL of the group.
	WebUrl string `pulumi:"webUrl"`
}
