// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gitlab

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gitlab/sdk/v9/go/gitlab/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `getProjectApprovalRules` data source retrieves all approval rules of a given project.
//
// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/api/merge_request_approvals/#list-all-approval-rules-for-a-project)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gitlab/sdk/v9/go/gitlab"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gitlab.GetProjectApprovalRules(ctx, &gitlab.GetProjectApprovalRulesArgs{
//				Project: "12345",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = gitlab.GetProjectApprovalRules(ctx, &gitlab.GetProjectApprovalRulesArgs{
//				Project: "my-group/my-project",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetProjectApprovalRules(ctx *pulumi.Context, args *GetProjectApprovalRulesArgs, opts ...pulumi.InvokeOption) (*GetProjectApprovalRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProjectApprovalRulesResult
	err := ctx.Invoke("gitlab:index/getProjectApprovalRules:getProjectApprovalRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectApprovalRules.
type GetProjectApprovalRulesArgs struct {
	// A list of project approval rules, as defined below.
	ApprovalRules []GetProjectApprovalRulesApprovalRule `pulumi:"approvalRules"`
	// The ID or path with namespace that identifies the project.
	Project string `pulumi:"project"`
}

// A collection of values returned by getProjectApprovalRules.
type GetProjectApprovalRulesResult struct {
	// A list of project approval rules, as defined below.
	ApprovalRules []GetProjectApprovalRulesApprovalRule `pulumi:"approvalRules"`
	Id            string                                `pulumi:"id"`
	// The ID or path with namespace that identifies the project.
	Project string `pulumi:"project"`
}

func GetProjectApprovalRulesOutput(ctx *pulumi.Context, args GetProjectApprovalRulesOutputArgs, opts ...pulumi.InvokeOption) GetProjectApprovalRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetProjectApprovalRulesResultOutput, error) {
			args := v.(GetProjectApprovalRulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gitlab:index/getProjectApprovalRules:getProjectApprovalRules", args, GetProjectApprovalRulesResultOutput{}, options).(GetProjectApprovalRulesResultOutput), nil
		}).(GetProjectApprovalRulesResultOutput)
}

// A collection of arguments for invoking getProjectApprovalRules.
type GetProjectApprovalRulesOutputArgs struct {
	// A list of project approval rules, as defined below.
	ApprovalRules GetProjectApprovalRulesApprovalRuleArrayInput `pulumi:"approvalRules"`
	// The ID or path with namespace that identifies the project.
	Project pulumi.StringInput `pulumi:"project"`
}

func (GetProjectApprovalRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApprovalRulesArgs)(nil)).Elem()
}

// A collection of values returned by getProjectApprovalRules.
type GetProjectApprovalRulesResultOutput struct{ *pulumi.OutputState }

func (GetProjectApprovalRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApprovalRulesResult)(nil)).Elem()
}

func (o GetProjectApprovalRulesResultOutput) ToGetProjectApprovalRulesResultOutput() GetProjectApprovalRulesResultOutput {
	return o
}

func (o GetProjectApprovalRulesResultOutput) ToGetProjectApprovalRulesResultOutputWithContext(ctx context.Context) GetProjectApprovalRulesResultOutput {
	return o
}

// A list of project approval rules, as defined below.
func (o GetProjectApprovalRulesResultOutput) ApprovalRules() GetProjectApprovalRulesApprovalRuleArrayOutput {
	return o.ApplyT(func(v GetProjectApprovalRulesResult) []GetProjectApprovalRulesApprovalRule { return v.ApprovalRules }).(GetProjectApprovalRulesApprovalRuleArrayOutput)
}

func (o GetProjectApprovalRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApprovalRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID or path with namespace that identifies the project.
func (o GetProjectApprovalRulesResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApprovalRulesResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProjectApprovalRulesResultOutput{})
}
