// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package gitlab

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `getProjects` data source allows details of multiple projects to be retrieved. Optionally filtered by the set attributes.
//
// > This data source supports all available filters exposed by the xanzy/go-gitlab package, which might not expose all available filters exposed by the Gitlab APIs.
//
// > The owner sub-attributes are only populated if the Gitlab token used has an administrator scope.
//
// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/projects.html#list-all-projects)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gitlab/sdk/v4/go/gitlab"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		mygroup, err := gitlab.LookupGroup(ctx, &GetGroupArgs{
// 			FullPath: pulumi.StringRef("mygroup"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = gitlab.GetProjects(ctx, &GetProjectsArgs{
// 			GroupId:          pulumi.IntRef(mygroup.Id),
// 			OrderBy:          pulumi.StringRef("name"),
// 			IncludeSubgroups: pulumi.BoolRef(true),
// 			WithShared:       pulumi.BoolRef(false),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = gitlab.GetProjects(ctx, &GetProjectsArgs{
// 			Search:     pulumi.StringRef("postgresql"),
// 			Visibility: pulumi.StringRef("private"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetProjects(ctx *pulumi.Context, args *GetProjectsArgs, opts ...pulumi.InvokeOption) (*GetProjectsResult, error) {
	var rv GetProjectsResult
	err := ctx.Invoke("gitlab:index/getProjects:getProjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjects.
type GetProjectsArgs struct {
	Archived                 *bool   `pulumi:"archived"`
	GroupId                  *int    `pulumi:"groupId"`
	IncludeSubgroups         *bool   `pulumi:"includeSubgroups"`
	MaxQueryablePages        *int    `pulumi:"maxQueryablePages"`
	Membership               *bool   `pulumi:"membership"`
	MinAccessLevel           *int    `pulumi:"minAccessLevel"`
	OrderBy                  *string `pulumi:"orderBy"`
	Owned                    *bool   `pulumi:"owned"`
	Page                     *int    `pulumi:"page"`
	PerPage                  *int    `pulumi:"perPage"`
	Search                   *string `pulumi:"search"`
	Simple                   *bool   `pulumi:"simple"`
	Sort                     *string `pulumi:"sort"`
	Starred                  *bool   `pulumi:"starred"`
	Statistics               *bool   `pulumi:"statistics"`
	Visibility               *string `pulumi:"visibility"`
	WithCustomAttributes     *bool   `pulumi:"withCustomAttributes"`
	WithIssuesEnabled        *bool   `pulumi:"withIssuesEnabled"`
	WithMergeRequestsEnabled *bool   `pulumi:"withMergeRequestsEnabled"`
	WithProgrammingLanguage  *string `pulumi:"withProgrammingLanguage"`
	WithShared               *bool   `pulumi:"withShared"`
}

// A collection of values returned by getProjects.
type GetProjectsResult struct {
	Archived *bool `pulumi:"archived"`
	GroupId  *int  `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id                       string               `pulumi:"id"`
	IncludeSubgroups         *bool                `pulumi:"includeSubgroups"`
	MaxQueryablePages        *int                 `pulumi:"maxQueryablePages"`
	Membership               *bool                `pulumi:"membership"`
	MinAccessLevel           *int                 `pulumi:"minAccessLevel"`
	OrderBy                  *string              `pulumi:"orderBy"`
	Owned                    *bool                `pulumi:"owned"`
	Page                     *int                 `pulumi:"page"`
	PerPage                  *int                 `pulumi:"perPage"`
	Projects                 []GetProjectsProject `pulumi:"projects"`
	Search                   *string              `pulumi:"search"`
	Simple                   *bool                `pulumi:"simple"`
	Sort                     *string              `pulumi:"sort"`
	Starred                  *bool                `pulumi:"starred"`
	Statistics               *bool                `pulumi:"statistics"`
	Visibility               *string              `pulumi:"visibility"`
	WithCustomAttributes     *bool                `pulumi:"withCustomAttributes"`
	WithIssuesEnabled        *bool                `pulumi:"withIssuesEnabled"`
	WithMergeRequestsEnabled *bool                `pulumi:"withMergeRequestsEnabled"`
	WithProgrammingLanguage  *string              `pulumi:"withProgrammingLanguage"`
	WithShared               *bool                `pulumi:"withShared"`
}

func GetProjectsOutput(ctx *pulumi.Context, args GetProjectsOutputArgs, opts ...pulumi.InvokeOption) GetProjectsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProjectsResult, error) {
			args := v.(GetProjectsArgs)
			r, err := GetProjects(ctx, &args, opts...)
			return *r, err
		}).(GetProjectsResultOutput)
}

// A collection of arguments for invoking getProjects.
type GetProjectsOutputArgs struct {
	Archived                 pulumi.BoolPtrInput   `pulumi:"archived"`
	GroupId                  pulumi.IntPtrInput    `pulumi:"groupId"`
	IncludeSubgroups         pulumi.BoolPtrInput   `pulumi:"includeSubgroups"`
	MaxQueryablePages        pulumi.IntPtrInput    `pulumi:"maxQueryablePages"`
	Membership               pulumi.BoolPtrInput   `pulumi:"membership"`
	MinAccessLevel           pulumi.IntPtrInput    `pulumi:"minAccessLevel"`
	OrderBy                  pulumi.StringPtrInput `pulumi:"orderBy"`
	Owned                    pulumi.BoolPtrInput   `pulumi:"owned"`
	Page                     pulumi.IntPtrInput    `pulumi:"page"`
	PerPage                  pulumi.IntPtrInput    `pulumi:"perPage"`
	Search                   pulumi.StringPtrInput `pulumi:"search"`
	Simple                   pulumi.BoolPtrInput   `pulumi:"simple"`
	Sort                     pulumi.StringPtrInput `pulumi:"sort"`
	Starred                  pulumi.BoolPtrInput   `pulumi:"starred"`
	Statistics               pulumi.BoolPtrInput   `pulumi:"statistics"`
	Visibility               pulumi.StringPtrInput `pulumi:"visibility"`
	WithCustomAttributes     pulumi.BoolPtrInput   `pulumi:"withCustomAttributes"`
	WithIssuesEnabled        pulumi.BoolPtrInput   `pulumi:"withIssuesEnabled"`
	WithMergeRequestsEnabled pulumi.BoolPtrInput   `pulumi:"withMergeRequestsEnabled"`
	WithProgrammingLanguage  pulumi.StringPtrInput `pulumi:"withProgrammingLanguage"`
	WithShared               pulumi.BoolPtrInput   `pulumi:"withShared"`
}

func (GetProjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsArgs)(nil)).Elem()
}

// A collection of values returned by getProjects.
type GetProjectsResultOutput struct{ *pulumi.OutputState }

func (GetProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResult)(nil)).Elem()
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutput() GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutputWithContext(ctx context.Context) GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) Archived() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.Archived }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) GroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *int { return v.GroupId }).(pulumi.IntPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetProjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) IncludeSubgroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.IncludeSubgroups }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) MaxQueryablePages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *int { return v.MaxQueryablePages }).(pulumi.IntPtrOutput)
}

func (o GetProjectsResultOutput) Membership() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.Membership }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) MinAccessLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *int { return v.MinAccessLevel }).(pulumi.IntPtrOutput)
}

func (o GetProjectsResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o GetProjectsResultOutput) Owned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.Owned }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) Page() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *int { return v.Page }).(pulumi.IntPtrOutput)
}

func (o GetProjectsResultOutput) PerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *int { return v.PerPage }).(pulumi.IntPtrOutput)
}

func (o GetProjectsResultOutput) Projects() GetProjectsProjectArrayOutput {
	return o.ApplyT(func(v GetProjectsResult) []GetProjectsProject { return v.Projects }).(GetProjectsProjectArrayOutput)
}

func (o GetProjectsResultOutput) Search() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *string { return v.Search }).(pulumi.StringPtrOutput)
}

func (o GetProjectsResultOutput) Simple() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.Simple }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) Sort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *string { return v.Sort }).(pulumi.StringPtrOutput)
}

func (o GetProjectsResultOutput) Starred() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.Starred }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) Statistics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.Statistics }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *string { return v.Visibility }).(pulumi.StringPtrOutput)
}

func (o GetProjectsResultOutput) WithCustomAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.WithCustomAttributes }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) WithIssuesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.WithIssuesEnabled }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) WithMergeRequestsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.WithMergeRequestsEnabled }).(pulumi.BoolPtrOutput)
}

func (o GetProjectsResultOutput) WithProgrammingLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *string { return v.WithProgrammingLanguage }).(pulumi.StringPtrOutput)
}

func (o GetProjectsResultOutput) WithShared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.WithShared }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProjectsResultOutput{})
}
